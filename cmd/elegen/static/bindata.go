// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1563338401, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4d\x6b\xe4\x38\x13\xbe\xfb\x57\xd4\x1b\xc2\x8b\x0d\x1d\xe7\xb2\xec\x21\x4b\x0e\x61\x98\x81\x86\xcd\x10\x12\xd8\x4b\x93\x83\xc6\x5d\x76\xc4\xca\x92\x91\xe4\xcc\x34\x46\xff\x7d\x91\x2c\x7f\xc8\xed\xfe\x4a\x32\x3d\x30\xb9\xa4\xdb\xd2\x53\x1f\x4f\xa9\x1e\x95\xbb\x22\xd9\xbf\xa4\x40\x68\x1a\x48\x9f\x50\xa7\x9f\x04\xcf\x69\x51\x4b\xa2\xa9\xe0\xe9\x57\x52\x22\x18\x13\x45\xb4\xac\x84\xd4\x70\x51\x88\x94\x54\x42\xa2\x16\x29\x15\xd7\xc8\xb0\x44\xae\x09\xbb\x88\xa2\x57\x22\x21\x8e\x00\x00\xe8\x1a\xb9\xa6\x7a\x63\xc1\xea\x9e\x54\x70\x0b\x25\xa9\x56\x4a\x4b\xca\x8b\xe7\x1e\x93\x2e\xfd\x3e\x68\x1c\xcc\xfe\x35\xcd\x15\x48\xc2\x0b\x6c\x83\x79\xaa\x30\xa3\x39\xcd\x5c\x30\xca\x06\x32\x6c\x04\x9a\x83\x7a\x11\x35\x5b\x3f\x62\x41\x95\x46\x19\xec\x86\x14\x2e\xd3\x87\xfa\x1b\xa3\xd9\xbd\x58\x63\x88\xbd\x82\xcb\x21\x44\xb8\xb9\x85\xd4\xee\x61\xe9\xe7\xe1\xe1\xd5\x08\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x31\x8c\xcd\x18\xd3\x25\xb4\x08\x5c\x21\x5f\x4f\xbd\x8f\x1e\x99\x28\xe0\x2c\x23\x1a\x0b\x21\xe9\x6f\x48\x9c\xa8\x65\x86\x3f\x85\x3c\xc2\x28\x51\x3f\x91\xb1\xab\x33\x52\xd6\x34\x3e\xaa\x4b\xba\x80\x4b\x97\xd9\x08\x74\xd7\x66\x0a\x21\xc7\xdd\xbe\x8f\x23\x76\xcf\x41\xe5\x6b\xfc\x31\xc3\xf5\xea\x79\xf5\xdc\x7e\x3c\x3b\xc7\x96\x81\x49\x7f\xf6\x54\xd0\x1c\x18\x72\x48\x97\x6d\xd8\x60\xcc\x6c\xa0\x61\xb0\x8e\xfa\x4c\x94\x95\xa8\xf9\xda\xb1\x3f\xc0\x03\x48\x67\xa9\x19\x83\x7b\xa0\x31\x2e\x32\xfb\x7f\x31\x90\x09\x66\x6f\x21\xcc\xa2\x69\x00\x99\xb2\x29\x70\xca\x16\x6f\xac\x55\x12\x45\xd7\xd7\xe0\x48\xf9\x07\xa5\xb2\x04\x4a\xd4\xb5\xe4\x0a\xf4\x0b\x42\x56\x4b\x89\x5c\xc3\xab\x5f\x13\xb9\x7b\x5c\x3a\x12\xa3\xbc\xe6\x59\x80\x8d\x13\xc8\x99\x20\xfa\xcf\x3f\xa0\xf1\x76\xfa\x0b\xe3\xee\x61\xb9\xe4\xb9\x48\x3b\x37\x36\xc3\x28\xd2\x9b\xca\x9b\xbb\x27\x9c\x14\x28\x41\x69\x59\x67\xba\x31\x91\x33\x1f\xe7\xc1\x6a\x02\xdd\x29\xfd\x22\x45\x69\x2b\x18\x73\x5b\xc6\x96\xde\x04\x66\x3b\xd9\xa5\xea\xa3\x99\xde\x39\x2b\x0b\x7f\x8e\x8e\xf1\xf6\xa9\x95\xdc\x4d\xec\xb5\x77\x73\xba\xd7\x40\xb5\x57\x9d\x9d\xe3\xdc\xbb\x96\x8e\xdb\x06\x3e\xda\xf1\xa0\x78\x2b\xf7\xf1\x48\x57\x7c\x13\x13\x3e\xe4\x17\xd3\x19\x4f\x49\xe7\x8a\xe6\x40\xe1\x16\xf2\x74\xab\x34\x84\x6f\x92\xbf\xe0\x7f\x34\x5d\xaa\xcf\x65\xa5\x37\x71\x32\x6a\xa5\x8e\x9a\x40\x34\xe6\x4c\xf5\xbc\x9f\x6c\xce\x3f\x0b\xcd\x79\x1e\xf9\x26\x39\xc0\x45\x4e\xc9\x37\x86\x71\x57\xbb\x59\x0a\xa6\xcf\x5a\x4c\xc7\x8c\xfa\x4e\x75\xf6\xd2\x57\xdf\x47\xdb\x2b\xf7\x1e\xad\x7b\xb3\xce\x65\x44\xb5\x33\xda\xd6\xe5\x31\x08\xfc\xcd\x94\xb4\xaf\xf8\x7d\x07\x24\x4e\xa2\x19\xd9\x98\x7c\x5d\x63\x4e\x6a\xa6\xb7\xcc\x72\xca\x7c\x35\x76\x11\xfd\x54\x11\xa9\xf0\x2d\x74\x6f\x23\x7f\x21\xe9\x1e\xc8\x85\xee\x48\x5c\xaa\x47\x21\xf4\x7b\x8b\xd2\x26\xf9\x9e\xd2\x7c\x58\xa5\xfc\xc5\xb6\xbf\x3c\xc1\x95\x19\xe8\x5f\x3f\x0c\xac\x3a\x03\xee\x95\xe1\x90\x1c\xb5\x95\xb5\x5d\xfb\xe4\xcc\x06\xaa\xb4\xbf\xf7\x26\xbd\xef\x4f\xd7\x44\x0a\x5a\x9d\x4b\x8e\x53\x82\x03\xc9\xcf\x87\xa3\x3e\xec\x58\xee\x3c\x5d\xe7\xd5\x8a\xff\xcf\x01\x1e\x58\x2d\x09\x03\x63\xfe\xa6\xca\x5e\xdd\x67\x3c\x98\xdb\x42\x70\x74\x9d\x66\xa0\xbf\x5d\xb5\x76\x4b\xc8\x2f\xac\x59\x40\xf9\x49\xdd\xad\xf6\xb6\xb7\x3a\xb9\xbf\x1f\x91\xb5\xe5\x7b\xa1\x95\x8a\xc7\x5e\x83\x95\xb6\x4e\x72\x3a\x5d\xc9\xb9\x3d\xd6\xd7\x2b\x91\x50\xfa\x79\xf6\x36\x70\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x22\xb8\x1f\xc1\xba\x59\xbb\xfd\x16\x04\x3a\xde\x36\x4c\xdd\x9d\x77\x13\x39\x7f\x77\x8c\x79\x62\x28\xaa\xde\x2b\x61\x0c\xf0\x07\x55\xda\x2a\x36\xed\xd7\xbd\xb3\x00\x13\x5b\x75\x3f\x38\x6e\xce\x6d\x39\xff\x9b\xf4\xde\x16\x39\xed\x67\x03\xe3\xd9\x73\x53\xf4\x17\x21\xfb\xbc\xc7\x14\xda\xe2\xf9\x41\x1b\x72\x21\xdd\xf7\x82\xbe\xe2\x30\xf7\xf7\x8c\x4e\xed\x1c\xba\x4f\xc3\xdb\x74\x97\x2a\x1d\x41\xeb\x79\x65\x67\xfc\xbe\xfb\xae\x9f\x29\xf6\xbf\x02\x1f\x21\x52\xe1\x9b\x80\x95\x26\x13\xfd\x17\x00\x00\xff\xff\x11\x03\x2d\x1e\xcb\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5323, mode: os.FileMode(420), modTime: time.Unix(1563576918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x6b\x73\xdb\x36\xb6\x9f\xa3\x5f\x81\x6a\xdc\x84\xcc\xca\x54\x3f\xab\xeb\x9d\x49\xe3\xa4\xd7\x73\xf3\xf0\xc4\xd9\xee\xcc\xcd\x64\xd6\x30\x09\xc9\x68\x28\x80\x05\x40\x3b\xbe\x1a\xfd\xf7\x3b\x78\x90\x04\xf8\x04\x65\xc9\x75\xef\x3a\x1f\x5a\x1b\x8f\x83\xf3\xc2\xc1\x39\x07\xe0\x71\x06\xe3\x6f\x70\x85\xc0\x66\x03\xa2\x0b\x24\xa2\xd7\x94\x2c\xf1\x2a\x67\x50\x60\x4a\xa2\x0f\x70\x8d\xc0\x76\x3b\x99\xe0\x75\x46\x99\x00\xc1\x04\x00\x00\xa6\xcb\xb5\x98\xea\x9f\x56\x34\x82\x19\x65\x48\xd0\x08\xd3\x39\x4a\xd1\x1a\x11\x01\xd3\xa2\x17\x8b\xeb\xfc\x2a\x8a\xe9\x7a\xbe\x4a\xe9\x15\x4c\x39\x5e\x91\xf9\x7a\x45\xe7\x57\x9c\x92\xe6\xa0\x35\x16\xf1\x35\x4a\xd3\xeb\x79\x4c\xb3\x3b\x2e\x58\x1e\x8b\x9c\x21\x3d\x70\xb3\x39\x06\x0c\x92\x15\x02\xd1\x45\x86\xe2\xe8\xf3\x5d\x86\xce\x19\xbd\xc1\x09\x62\x5c\x22\xa9\xa0\x49\x3a\xc0\x76\x5b\x4d\x41\x24\x01\xc7\xa6\xb7\x0e\xe2\x37\x98\xe2\x44\x51\xea\x09\x68\xbb\x9d\x84\x93\xc9\x66\x03\x8e\x52\x28\x10\x17\xbf\x21\xc6\x31\x25\x60\x71\x62\x20\xbe\x53\xcd\xaf\x84\x60\xf8\x2a\x17\x88\x17\x03\x24\x0f\x37\x1b\xb3\xf8\x11\x9e\x81\x23\x44\xf2\xb5\x9c\x77\x95\xe3\x34\x79\x43\xf2\x35\xd7\x20\xea\xa0\xb7\xdb\xc9\x7c\x2e\xc5\xa3\x66\x28\xaa\xc1\x76\x0b\x18\xca\x18\xe2\x88\x08\x0e\xc4\x35\x02\x19\xe5\x1c\x5f\xa5\x08\xdc\xc0\x34\x47\x1c\x2c\x29\x03\xb0\xc0\x42\x11\xa3\xa7\x97\x98\x19\xc9\x4e\xa3\x89\x90\x10\x1b\xf0\xb9\x60\x98\xac\x26\x93\x98\x12\x5e\xc8\xbd\x62\xdf\x11\x81\x6b\x34\x03\x47\x6a\x35\x49\x85\x9e\xfc\x9b\x5e\xdc\xb0\xd0\xa0\x4d\xf4\x4a\x75\x8c\xf5\x54\x39\x40\xff\xb4\xdd\x46\x66\x91\x6a\x4a\x03\xab\x13\x4d\x4a\x31\xa3\x10\x4e\x25\x9b\xea\xe7\x89\xc4\x16\x2f\x01\xa1\xc2\xc8\xe6\x3d\x4d\x50\x1a\x9d\x22\x01\xe3\x6b\x94\x54\x8c\xb5\x7b\xdf\x10\x81\xc5\x9d\x61\xce\x59\x82\xd4\xaf\x75\xd4\xcb\x76\xba\x54\xbf\xd3\xab\xdf\x51\x2c\xa2\xc9\x0d\x64\x7e\xf0\x4e\x40\xb9\x53\xa2\xb2\x71\xa3\x88\x91\x43\x17\xa0\xd4\x40\x0b\xd4\x27\xc4\x85\xec\xdd\x6e\xa7\x33\x35\xf4\x35\x14\x68\x45\xd9\xdd\xa2\x6d\x28\xcd\x59\x5c\x0a\x59\x8f\x3f\xd7\x5b\x7d\xd1\x04\x6d\x7a\xaa\x91\x0c\xdf\x40\x21\x47\xd6\x07\xea\x8e\xed\x76\x36\xd9\x8e\xe4\xf5\x66\xd3\x36\xe2\x8c\x7f\xa2\x54\x0c\xc9\xe2\x3c\xcd\x19\x4c\xc1\x76\xfb\x0e\x73\x61\x4b\x03\x82\x54\xb6\xd0\xa5\xc7\xdc\x52\xd1\x7d\xd6\xf8\xf2\xf5\x65\xe7\x48\x49\xf0\x7c\x0e\x2c\xed\x10\x39\x23\x5a\x35\x70\xab\x6a\x70\x80\x89\xfa\x55\x62\x1b\x4d\x96\x39\x89\x41\x40\x3d\x71\x09\xcb\x95\x82\xb0\x5d\x6f\x94\xcc\x34\x16\xdd\x30\x2b\xf5\x9b\x68\xfc\x5f\xd3\xac\xc2\x1d\x82\x8c\x62\x22\x10\x03\x82\x02\x08\xa4\xf9\x55\x08\xfb\xa1\x38\x9e\x24\xb9\x78\x0b\x39\x4b\x0c\xaf\x52\xc4\x0b\x9a\x14\x1a\x8b\x13\x00\xb3\x0c\x91\x24\xf0\x03\xbe\xd9\xce\x00\x8d\xa2\x28\xb4\xd9\xf2\x5c\x82\x32\x84\xbf\x52\xd0\x0c\x50\xee\x88\x49\x50\xf5\x2b\x04\x04\xdd\xea\xd5\x8d\x1c\x0f\xc5\x07\x8d\x4b\x50\xac\x1f\x45\x51\x3b\x4b\x06\x59\x45\x73\x71\x4f\x4e\xc9\x23\xe3\xdf\x33\xc9\x0a\x09\x48\xdb\xf9\x02\x2f\x6d\x9b\x8a\x75\xca\x65\x68\x2e\xd4\x84\x28\xe8\xdb\x2d\xa1\x86\xbf\x75\xf4\x94\xe6\xc2\x88\x43\xed\xb7\x98\x92\x1b\xc4\x84\x2d\x0d\xa5\x89\xa4\x8b\xee\xdd\xd8\x2d\xff\xdb\xad\x76\x0a\x13\x97\x9f\x6b\xf8\x0d\x05\x3d\xc3\x67\x20\x45\x24\xa0\x61\xc5\x42\x2c\xa7\xfd\xf4\x33\xc0\xe0\xef\xa6\xef\x67\x80\xff\xf6\x37\x97\x85\x5f\xf0\x57\x70\x02\xe8\x17\xfc\xb5\x97\x35\xa7\x68\x09\xf3\x54\x7c\x64\x09\x62\x8e\x99\x49\x74\x07\xa0\xb2\x07\x93\x15\x58\x62\x94\x26\xbc\xd0\xd6\x98\x12\x81\xc8\x0e\xfc\xb1\x17\x0c\x42\xf0\xe5\xab\x76\x03\x6a\x36\xa6\x68\xae\x48\x2a\x5d\x1b\xbd\x8a\x83\x77\xe1\x7c\x39\x5e\xd5\xcc\x9e\x6a\x4e\x11\xcd\x09\x4d\xf9\x67\x7a\x91\x41\xc6\x91\x43\xb5\xa7\xed\x36\xba\x84\x12\xa9\x41\x1a\x8c\xef\xf6\x9d\xcf\xc1\xc7\xa6\xc5\x06\xb7\x38\x4d\x01\x25\xe9\x9d\xe2\x2c\x34\x5d\x2b\x7c\x83\x88\xe1\x7c\x04\x3e\x50\xfd\x23\x58\x23\x48\x38\x90\x7a\xc2\x90\x69\xe2\x68\x07\x59\x14\x2c\x08\x8c\x6c\xa3\x28\xd2\x6c\xf7\xb5\x05\x4a\x77\xc7\xd0\x7f\x6f\x65\x8e\x6a\x38\x4b\xdb\x12\x05\x2f\x07\x70\x00\xdb\x6d\xbf\x85\x28\x5c\x61\x5b\x17\x6e\x4c\xdb\x7d\x35\xde\xc0\x0e\x42\x80\x89\x68\x3b\x4b\x91\x88\x5e\x9d\x9f\x9d\x91\x25\x8d\x2c\x97\x5c\xbb\xf3\x46\x71\xad\xe8\x40\xfd\x7c\x84\xf9\x1b\x12\xb3\xbb\x4c\x48\xb1\x48\x16\x2e\x61\xca\x91\x87\xc7\x59\xf7\x34\xd7\x72\x88\xa4\x11\xd6\xa7\x15\xde\xe0\xb0\x63\x63\xbc\xf9\x3c\x96\xe4\xd5\x23\xa0\x2a\x52\xa9\xc7\x1d\xc7\xdb\xad\xf1\xea\x22\x43\x8c\xf2\xe3\x5a\xe8\x3b\x01\x82\x29\x77\xdc\xe2\xc3\x66\xa3\xc2\x8f\xcf\xf4\xad\xda\x00\x47\x92\x8f\x86\x0b\x51\x9d\x65\x92\xe3\x0a\xe9\x62\x69\x29\x89\xcb\xdf\x39\x25\x8b\xe9\xf1\x14\xac\xf9\x4a\x06\xa9\xea\xe7\x2b\xd5\xf8\x6f\xc5\x16\xa3\x01\xd3\x4b\xa3\x25\x1f\xd0\xed\x00\x6b\x0b\x57\x47\x1e\xee\xdd\x07\x96\xc4\x49\x69\xd1\x00\xc0\x20\xec\x07\x52\x53\xa6\xe7\x7d\x63\xab\xfd\x64\x33\x62\xd1\xa3\x81\xb3\x89\x65\x41\x8f\xed\xc0\x52\xf2\x5d\xea\x1c\xa7\xcc\x0a\x44\x41\x30\x20\xf0\xd0\x31\xd4\x46\xf4\xfc\x9a\xe6\x69\xf2\x2f\x86\x05\x3a\x23\x58\x60\x98\xe2\xff\x45\x4c\x8a\x53\x45\xaa\x72\x29\x9d\x23\xa8\x29\xcf\x51\x74\x9e\x5f\xa5\x38\x96\xd4\x80\x1a\xd8\x23\x4c\xb0\xb2\x4f\xb7\x2d\x60\x91\x70\x80\xd7\xe7\xe2\xa5\x99\xee\xb4\xb7\xb5\x1d\xdb\xa7\x8a\x5f\x93\xd9\xd5\x3e\x51\x63\xab\xef\xdf\x15\x16\x16\x26\xa9\x57\x5b\xf6\xe4\xe5\x03\xc7\xcd\xaf\x1b\x26\x5f\xc2\x96\xb8\xe6\x6f\xe8\x80\xdb\xa1\xeb\x05\x07\x39\xc1\x7f\xe4\x45\xcc\x23\xe7\x8c\xa4\x55\x4e\x09\x42\xe0\xfa\x18\x3a\x4e\xd4\x73\x2d\x6c\x0a\xe5\x2c\x0e\x87\xa8\x5c\xa0\x1a\x14\xbd\x2e\x4e\xfe\x62\x1f\x97\x52\x96\x86\xa7\x06\x62\xda\x48\xed\xec\xc2\xb0\x0b\x24\x2c\x2c\x39\x12\x87\x61\x98\xb3\x4c\x80\x13\x50\xb8\x02\x7e\x5c\xf3\x63\x17\x38\x01\x38\xe9\x67\xca\x7c\x0e\x7e\x45\xe2\x97\x8b\x8f\x1f\x00\x5e\x67\x5a\x4d\x35\xc5\xd2\x34\x83\x35\x64\xfc\x1a\xa6\x52\x9c\x2a\x9a\x5c\xc2\x18\x29\xaf\xea\xf3\x35\xe6\x00\x73\x90\x73\xed\x96\x09\x06\x09\xcf\x20\x43\x44\x68\xaf\x4a\x22\x02\xce\x4e\x65\xdf\x7b\x4a\x56\xf4\xf4\x97\xb3\x53\x00\x39\xf8\x78\x85\x62\x71\x76\xea\xcd\x28\x83\x5d\x10\x82\xa0\xc4\x40\xc6\x39\x88\x31\xca\x4a\x76\xe1\x25\xa0\xe0\xe4\x04\x10\x9c\x5a\xbe\x8c\x51\x0c\x82\xd3\x99\xfc\x8f\xed\x93\x70\x69\xb0\x9e\xaf\x25\x66\x95\x05\xed\xb5\xe8\x85\xf2\xf9\x1f\xb7\x13\xcb\xca\x45\x17\x82\x32\x94\x80\x5a\xab\x25\x5a\xd3\xc3\x95\x64\x5b\x24\x29\xe5\x11\x69\x67\xf6\x2c\xf9\x2f\xf4\x3d\xa0\xad\x23\x43\x77\x8f\x0c\x41\x6d\x07\x52\xd7\x99\xfe\x5f\xed\x4d\xc8\x35\xa7\xb5\x66\x5d\x3c\x6a\xcd\x32\xd8\x05\x0c\xde\x6a\xe6\x7e\x82\xb7\xa1\xd6\x2b\x5f\xb5\xda\x87\x46\xe1\xa5\x5c\x53\x87\xe8\xb7\xd1\x3f\x89\x61\x4c\xc0\xc3\x9f\x55\xc7\x0f\x1d\xcb\x23\xc6\xcc\xf2\x0f\xa2\x97\xed\x8a\x02\x4e\x3a\x54\x2b\x92\x1a\xda\xae\x8b\x23\x21\xed\xae\x8b\x46\x11\xfd\xec\x7e\x5b\x4c\x72\x0d\x59\x12\xd3\x04\x25\xf5\xe8\x44\xf9\xab\xde\x8a\xb6\x73\x48\x52\x33\xd4\xbf\xa4\xe8\x06\xa9\xcc\x79\x7d\x43\xc9\x8e\xe8\x75\x0a\x39\xd7\x32\x3b\xab\x76\x94\x27\x8e\x25\xec\xc6\xf9\x5d\x9c\xae\xdd\xf1\xca\xd4\x9f\xcb\x9d\x09\x90\x22\xed\xdb\x91\x08\xf1\xa2\x43\x11\xf2\x28\x32\x1e\x23\xdd\x0e\xfb\xb0\x2f\x7a\x79\xcc\x70\x26\xaa\x0b\xa3\x53\x1a\xbb\x19\x23\x1a\xe7\xca\xa7\x54\x63\x64\x6c\x5f\x79\x26\xbe\x42\x3f\xa5\x71\x97\xb8\x2f\x25\x51\x3c\xfe\x05\xc6\xdf\x04\x8e\xbf\xf1\x1e\xec\x2e\x9d\xab\x83\x91\xa4\xfb\xda\x6a\x85\x63\x17\xb2\xcb\xb5\x88\x2e\x32\x86\x89\x58\x06\xd3\xbf\xff\xc8\x17\x3f\xf2\x7f\x4c\x67\x80\x46\x95\x0b\xae\xa2\x9a\xaa\x49\x7b\xaa\x61\x43\x54\x9e\x46\xb4\x94\x99\x8e\xa7\x7e\x45\x04\x31\x28\xd0\xaf\x48\x08\xc4\x40\xd4\x08\x97\xb4\x97\xd5\x6a\xf6\xea\xf9\xb0\xc6\x00\x63\x72\x18\x8a\x11\xbe\xa9\x7b\x98\x47\xfd\x9e\x53\x1b\xc0\x20\x74\xd7\x29\xae\xe2\x5c\x96\x76\xf8\x05\xb5\x34\x49\x93\x05\x17\x3d\x2c\xb8\xe8\x60\x41\xe9\x64\x67\x8c\x66\x88\xc9\xe0\xc8\x83\x11\x20\xe7\x52\x13\xaa\xc4\x9d\x72\xd1\xfd\xd9\xd3\x81\x8d\x4a\xb5\x7f\xa8\xee\x2b\x1b\x8c\x2a\x7d\xce\xce\x73\xcc\x82\x50\xdb\x1a\xf5\x9d\x01\x49\x02\x82\xae\xed\x11\x36\xbb\xf4\xed\x5a\x68\xf8\xd9\x9a\x53\xe5\xba\xa9\xfd\xc0\x52\xee\x55\x31\x1e\x25\x45\x62\x7e\xaf\xe9\xd0\x81\x9d\xec\x95\x05\xd5\x43\xec\x5c\xa8\xe5\x91\xa5\x88\x98\xc9\xa1\xf4\xcd\x7e\xb2\x5c\xa3\xf9\x1c\x10\x9a\x62\x22\x16\x60\x45\xf5\x13\x07\x5e\xf7\x9b\x9e\x0f\x67\x2f\x2d\x88\xa0\xe5\x95\x41\xaf\x5d\xa8\x4f\xc4\x4b\x70\x0d\xf9\x39\x43\x4b\xfc\x1d\x04\x3a\x87\xa6\x34\xc9\x49\xa1\x85\x60\xfa\x72\xda\x9c\xde\x54\xaf\x45\x87\xda\xcd\x1a\x0b\xdb\x2e\x57\x3f\xc4\xe7\xde\x20\xdd\x74\x4b\x47\xf3\xd6\xf1\x8a\x33\xe5\x16\xfb\xf0\x7c\x6b\xdf\x5a\x2d\xab\x3b\x2b\xa3\x28\x95\x4c\xf8\x2d\x16\xf1\x35\x58\xee\x4b\x4c\x31\xe4\xfa\x49\x45\xb1\x6b\xa7\x0b\xa7\x7f\x0f\xa2\xd4\xac\x68\xb2\x79\x28\x06\xf3\x11\x6a\x2f\xec\xe7\xbd\x61\xe2\x1e\x04\x5c\xc4\x7d\x99\xe5\x04\xd6\xf2\xc9\xda\x5a\x99\x16\x4b\x2a\x48\xb7\x68\xbb\x05\xab\xf6\x35\x64\xdf\x50\x22\x43\xba\x4b\x54\x64\xaa\x2f\x1b\xe6\xbe\xe8\xf2\xcf\xb9\x34\x30\x08\x4a\x18\x96\xed\x29\xbb\x8b\x2c\x39\x0b\x41\x20\x03\xb1\x32\xe3\x00\xc6\xc4\x5b\xb5\xc0\xca\x4e\xbd\x97\x21\x66\x9b\xec\x54\x86\x03\x9c\x58\x64\x9a\xa9\xc6\x15\x6a\x9d\x34\x10\x32\x4a\x3f\xe9\x8d\xa4\x62\x19\x4c\x73\xa2\x64\x23\x68\xb1\x82\xf5\xbc\xe8\x45\x0b\xe8\x17\x6a\x67\xbe\xe8\x3d\x54\x5f\x80\xe0\x47\x1e\x2e\xc0\x8f\x7c\x5a\x77\xb5\x14\x39\xa1\x13\xb0\x8e\x08\xe1\x54\xe4\x50\x57\x9f\x04\xdd\x47\x7d\xcc\xec\x11\xea\xd3\xc0\xe0\xaf\xa5\x3e\x06\xfd\xbd\xab\x8f\x61\xe4\x63\x56\x1f\xbb\x57\xea\xd2\x39\x94\xe7\x07\xcc\xb2\x54\x3f\x8a\x21\x54\x0d\xad\x92\xbc\x10\x78\xdc\x71\x16\x8f\x4b\x46\x5e\x0b\xa8\xc5\x03\xe3\xa6\xf5\xb9\x3c\x56\x2e\xf8\x58\xdf\x9e\xf0\xea\x5d\xa2\xaf\xc6\x98\x79\x95\xb6\xfc\xa0\x57\xb6\x43\xa3\x33\xfe\xe6\x8f\x1c\xa6\x81\x1d\x2f\x85\x96\xf8\x33\x48\x70\x1c\x4c\x63\x48\xa4\x3f\x9a\x29\xe6\x2d\x19\x5d\x03\x08\x34\x15\xb7\x58\x5c\x83\x04\x2f\x97\x88\x21\x22\xca\x37\x53\x53\xe7\x16\x98\x53\x75\x89\xa5\x57\xf7\xbb\x43\x9e\xb8\xc7\x7a\x83\x16\xde\xe1\x82\x37\x14\xf8\x1e\xa7\x77\x77\xb6\x6a\xe0\xd8\x6e\x3b\xae\x3b\x81\xbd\xf4\x82\x66\x27\x19\x1a\x6d\x7d\x29\xfe\x53\x84\xb2\xda\xf3\xb0\x04\xa1\x4c\xbf\x88\xc2\x03\x2f\xa2\xd4\x4b\x4e\x6f\x1b\xa9\x17\xf2\xbd\x4b\x75\x13\xac\xcf\x9e\x59\xfb\xf6\xd9\x76\x32\x79\x66\x5e\x3e\xf4\xdf\xb5\x6e\x27\xcf\x68\x54\xac\x7c\x46\x04\x0d\x68\x2e\xc2\xc9\xe4\x59\xcb\xfb\x9b\x6a\x90\x24\x1e\x23\xee\xc6\x94\x98\x98\x4d\xad\x0f\x89\x5e\x1a\x46\x33\xa5\x40\x6d\x68\xfc\x66\x32\x79\x26\x20\x5b\x21\x31\x2b\x52\xc3\xce\xf3\xe9\x48\x71\x98\x86\x93\x67\x26\x77\xfc\x43\xc5\x40\xbd\x57\x9d\x84\xc8\x3f\x2d\x53\x8d\x32\x25\xf2\xbe\xf5\x8d\xfd\x95\xf6\x36\xd4\x42\x78\xa9\xdf\x88\xbd\xd4\x38\xf5\xbd\x0d\x53\xbb\xd6\xbc\xf1\xd0\x4f\xb1\xd5\xcd\x19\x4e\x0c\x9f\xe3\x9c\x69\x0b\x41\x96\x94\xad\x75\xea\x8a\xeb\x04\x74\xc9\xf9\x8a\x4c\xef\xfc\xaa\x59\x2a\xa8\x65\xef\xd5\x2f\xca\x66\x56\x66\x56\x9d\x5f\x7c\x53\x5c\x1c\xfe\x91\x63\x86\x92\x37\x7d\x03\x77\x3c\xaf\xcb\xc4\xd7\x67\x06\x09\xc7\x92\x6a\xa7\x2f\x7a\xf3\x3d\xa3\x1c\x55\x47\x96\x69\xfe\x64\x70\x72\x47\xa3\x3f\x80\x7e\x33\x3d\xd5\xc1\xf2\xd4\xb2\x82\x46\x45\x2a\xd4\x0b\x7e\x14\xa0\xcc\x91\xef\x44\x38\xb3\x0e\x5b\xd4\xed\x02\x38\xac\x3a\xa9\x35\x44\xe6\xdd\x63\xe3\x94\x76\x4e\x65\x4d\x0b\x65\x20\xa8\xe8\x41\x24\x5f\x4f\xc3\xfb\x93\xc3\x3b\xfd\x1a\x49\xd5\x03\x90\x55\x91\x24\xf0\x1a\x8d\x12\xd0\x67\xbc\x46\x8f\x55\x3c\xdf\x05\x62\x04\xa6\xd3\xd0\x6e\x4d\x31\x17\xd3\x70\x04\x85\x6f\x0c\x98\x47\x43\x65\x45\x0b\x26\x02\xad\x10\x1b\x25\xb0\x33\x22\x1e\x21\x25\xcb\x94\x42\x31\x8a\x8e\xb7\x72\xc6\xe3\xa0\xa4\x8f\x30\x86\x96\xd3\xfe\x80\xa7\xd5\xeb\xab\xe8\xfe\x84\x38\x12\xe6\x4a\xe7\x2d\x65\xff\x83\x18\xd5\x9f\xb6\x0c\x66\x47\x2a\x2e\xb6\x8f\x8c\xaa\xc3\xa7\x83\x41\xd6\x49\x74\x62\x7e\x68\x30\x05\x58\x59\x15\xcf\x8d\xc9\xd0\xf2\x9d\xda\x85\xb5\xc6\xf7\x30\xab\xcc\xa9\x49\xa6\xf1\xfc\xca\x7a\x02\xde\xce\xbd\x8d\x4d\xb2\x9c\xd0\xb8\xf6\x06\xea\x01\x3f\x11\x98\xe4\xa8\x86\xb5\x2f\xb7\x79\x7e\xd5\xc6\x5a\x9e\x5f\x3d\x20\x1f\xa3\x57\x69\x4a\x6f\x51\xf2\xfa\x9a\xe2\x18\x71\x9f\xfd\xa2\x8f\x9c\x33\xa2\x9e\x9b\x8f\x3a\x78\x66\xd5\x55\xa3\x9c\xf7\x3b\xc5\xa4\x81\xc0\xe5\x74\x06\xa6\x97\x12\xda\x76\xa6\x5c\xb3\x57\xb9\xa0\x2b\x73\xa1\x92\xf4\xec\xbd\x21\x76\x78\x31\x01\x32\x2f\x16\x9c\x43\x21\x4d\xb8\x9f\xb1\x98\xa9\xfb\xc3\xfa\x1a\x97\x2d\xcd\xef\x11\xe7\x70\x85\x74\xaf\xec\xb4\xfc\x9f\x03\x90\xbd\x12\x20\x7a\x0f\xbf\xbf\x43\x64\x25\xae\xc1\x4f\x3e\x84\xbf\x87\xdf\xf1\x3a\x5f\xeb\x29\xbe\xe4\xcb\xd6\x6a\x1d\xd9\xa2\xe2\xcb\x43\x51\x84\xc9\x28\x8a\x30\xd9\x91\xa2\x72\x9d\x83\x53\x04\xbf\x2b\x93\x01\x7e\x8a\x7e\xea\xf2\x84\xfd\x8f\x3b\x23\xc2\x11\xa7\x5d\x29\xc1\xdf\xcc\x97\x89\x7b\x23\xd7\x64\x04\x7c\x71\xf6\xf6\x34\x66\x32\x82\x0a\x6a\x58\x87\x7b\x96\xd2\x90\x16\xee\x53\x66\x5a\x49\xc7\xcb\xac\xc0\x62\xff\x32\xf3\x44\x79\x17\x91\x55\x48\x3f\x8c\xc8\xca\x47\xe5\x11\x68\x7c\x4a\xad\x1e\x9d\xab\x4f\x99\xfb\xbe\xa7\xae\x18\x21\xc1\xad\x0b\x62\x15\xe5\xd6\x3b\xf2\x8a\x7c\xdd\xe8\xeb\x56\xfa\x92\x79\xdc\xe1\x47\x7a\x30\xc1\xa1\xf7\xa6\xa4\x54\x21\x56\xe6\x59\x75\xc2\xa1\xe2\x83\xfd\x31\xf4\xeb\x9c\x0b\xba\x2e\x2e\xd1\x2b\x08\x51\x95\xb5\x5d\xc3\x2c\xc3\x64\xa5\xbe\xa8\x56\xef\xbc\x2a\x48\xef\x75\x57\x64\xfe\x0f\xa6\xd5\xc7\xf6\x0d\x74\x6a\x39\xdd\x02\x6a\xbb\x28\x0c\xdc\x42\x20\x74\x6f\x2c\x6e\xe3\xb8\xb9\x8f\x77\x9d\xfe\x10\xfc\xc3\xba\x96\x37\x59\x38\x77\x88\x59\xc1\x86\x81\x5a\xe6\xda\xaf\x1d\x6b\xb3\x76\x79\xe4\x27\x7b\xf0\x12\xc7\x8a\xb3\x6f\x29\x2b\xf3\x38\xce\x13\x8a\xb2\xd5\x19\x5e\xbe\xb1\xd2\xa9\xc1\xea\xba\x43\x7d\xdc\xfe\x0d\xdd\x15\xf9\xaa\xa1\xa7\x4c\x5d\x38\x04\x0a\x50\xf3\x31\x44\x07\x3a\x55\x06\xf5\x66\x06\xe8\x37\x23\xfe\xce\x85\xab\x94\xd5\x7b\x98\x7d\x91\x4b\x7d\xfd\x59\x4e\x6b\x70\xfa\xc6\x66\xf2\x7c\x0e\xfe\x85\x40\x4c\xf3\x34\x51\xbc\x5d\x62\x92\x00\x2c\x66\x80\x53\x90\x22\xf1\x82\x83\xf8\x1a\xc5\xdf\x00\x35\x1f\xd7\xd1\x5b\xc4\xf4\x7d\x3a\x26\x09\xfa\x8e\x12\xc0\x33\x14\x83\x35\xcc\x6c\x99\xf5\xe1\xf9\x4e\x82\x78\x0d\x39\x6a\x41\xb8\xf8\xde\xb7\x95\x21\xdc\x91\xe1\x32\x4f\x53\x4b\x46\xdc\x1d\xb9\x86\x99\xa7\xb4\x3a\xd6\x0a\x42\x09\xe3\x8b\x16\xd6\x57\x5f\x59\x79\x90\xef\x50\x5d\xa5\x52\x73\xd4\xa9\xad\xfa\xd2\xaa\x43\x39\x9d\x17\xd5\x10\xdc\x20\x76\x07\x60\x72\x03\x49\x8c\x12\x20\x19\xa0\xd0\x13\xd7\x50\x80\x3b\x9a\x9b\xb7\x5c\x4a\xd2\x04\xa1\x04\x5c\xe5\x02\x60\x02\x38\x5d\x23\x09\x48\x4d\x2f\x58\x09\x72\x8e\x94\xa8\xfd\x1e\x67\x9a\x44\xad\x4b\x88\xab\xf2\xd6\xfb\xfe\x82\x63\xe6\xa9\x87\x1a\xb6\xa9\xd9\x6d\xcf\x54\x6c\xdf\xeb\x8e\xfe\xc7\x6e\x2d\xe6\xaf\xeb\x76\xda\x5b\xa4\x8d\x0f\x02\x61\xa6\x2e\x1c\x4b\xd1\x4a\x41\xf6\xdf\x3a\x0c\x55\xa5\x70\xd7\x3b\x19\xa3\xa8\x9b\xfa\xd9\x38\x2a\xdd\x6d\x7d\x5c\x56\xce\x90\x28\xd4\x1e\x03\x1e\xdb\x15\x59\xea\x4c\x9f\x2e\x06\x2d\x5f\xe3\x5a\xaf\x35\x96\x95\xff\xec\xf6\x45\x33\xf6\x94\x31\xa7\x03\xab\xf6\xce\xc5\x0d\xd3\x17\x1d\xe9\x83\xe3\xed\x76\x54\x88\x5f\x39\x94\xe5\xb4\x6d\xe9\x9b\xcc\x9a\xb4\xd5\x72\x01\x15\x76\x76\xc7\xa2\x35\x6f\xd0\x4b\x5d\xb1\x40\xe7\x95\xa3\xd3\xb1\xe8\x10\x97\xdf\x12\x0c\x29\xc9\x7d\x24\xe9\x9d\xb3\x82\xd5\xae\x29\xa8\x8d\xf4\x82\x6e\x32\x4d\x85\x03\x5d\xf6\xdb\xed\x0a\xba\xfa\x3e\xd1\x19\xed\x7c\xa0\x18\xf9\x2f\x98\x31\x14\xd7\xe5\x51\xb5\x6a\x52\x9c\x51\x9e\x70\x9d\x47\xdf\x15\xe0\xb2\x79\xd1\xf2\x2e\xbb\xf6\x18\xdb\x6b\xa5\xc6\x33\x12\xf9\xaf\x6c\xd4\xf8\xdb\x63\xfc\x80\x56\x17\x5a\x25\x48\xdd\x64\x00\x96\xfd\x5e\xe0\xde\xe2\x54\x20\x56\x3c\x20\x2b\x7a\xab\x56\x0d\xd4\x19\xe5\x07\x97\x32\x84\x57\xe4\xbf\x91\xa3\x8a\x55\xab\x81\x6b\x8f\xf2\x82\x6b\x1e\x7f\x5b\x3d\xba\x45\xc3\x2b\x7b\xbd\x60\x35\x3f\xbf\x91\xff\xaa\x56\x0d\xd3\x19\xe5\x05\xd7\x4e\x49\x95\x9d\x65\xe3\xa2\x99\xb6\xf2\x04\xda\xd8\x7b\x45\xdb\xa2\x91\x47\xf1\x82\x68\xe5\x99\x2a\x90\x45\xe3\xa2\x99\x8b\xf2\x04\xda\x44\xd3\xb4\x2d\x1a\xa9\x03\x1f\x88\x75\x83\x69\xd9\xc9\x51\xe6\x51\x7d\x64\x52\x57\xf4\xb2\x51\xe3\x66\x8f\xf1\x02\x7a\xce\xf0\x1a\xb2\xbb\x9a\x9a\x57\xad\x1a\xac\x33\xca\x0b\xee\x27\x04\x93\xba\x1d\x2f\xda\x16\x26\x83\x5b\x8e\xf0\x84\xe8\xde\x78\x6b\x88\xba\x6d\x51\xcf\x09\x7b\x41\xbc\x40\x31\x43\xce\xf7\xe3\xba\xa5\xf8\xfe\xde\xf4\x7a\xc2\xaa\x6f\xeb\x0b\x6b\x5b\x5f\x8c\xda\xd6\xee\xb7\x76\x0a\x96\x6a\x31\xb0\x8a\x5e\x3f\x58\xf9\x95\xf9\x20\xa1\x02\xa6\x9b\x8a\xf2\x61\xe5\x00\x3f\x2d\x6c\xbc\x53\x90\xff\xca\x46\x8d\xa2\x3d\xc6\x0f\x68\x0d\x45\x0b\xbf\x41\xe4\xcc\x0a\xdd\x09\x88\x61\xd7\xbb\x3d\x98\x7c\x00\x1f\xbc\x63\xe1\xc7\xed\x8c\xeb\xe8\x3d\x7a\xf2\xc4\x9f\x3c\xf1\x27\x4f\xfc\xc9\x13\x7f\xf2\xc4\x9f\x3c\xf1\x27\x4f\xfc\xc9\x13\x7f\xf2\xc4\x9f\x3c\xf1\x41\x4f\x7c\xd3\xfc\xec\xff\x1e\x1f\x37\xeb\xbb\x3a\xff\x42\x87\xed\x25\x84\x7d\x21\xe8\x7a\x7b\xa3\xd6\xfb\xf2\x75\xe8\x03\x96\xbd\x15\x15\x1e\x83\xd7\x9f\x5a\x5a\x78\x5c\x65\xce\xdd\xc8\xdb\xa9\xcc\xf0\x98\x25\x0e\x52\x6c\xf8\x21\x38\x73\xa0\xc2\xc3\xbb\xf3\xee\x7e\xe5\x87\x07\x77\xd7\x03\x14\x21\x1e\x27\x80\xff\xd4\x52\xc4\xe3\xb8\xf4\x28\xca\xf3\xe8\xe2\x19\xe7\x29\xc4\x6e\xbd\xa7\x51\x47\x80\x53\x95\xf8\xb0\x7b\xdb\xe0\xfa\xb8\xb4\x2b\x2a\xb1\xea\xd5\xb3\x5d\x6a\xfd\x8e\xe3\xce\xee\x15\x7f\x87\xbd\x8c\x96\x12\xbe\xcd\x02\x2b\x7d\xb5\x7c\x23\x2f\xe7\xc2\x29\xe9\xdb\xa2\xee\x3e\xe5\xdc\x5a\xea\xf3\xaa\x32\xbe\x51\x8b\xbf\xa6\x7e\xdf\x4f\x89\x5e\x2f\x06\xda\x85\x7a\x3d\x78\x11\x95\xf5\x7a\x87\xc7\x06\xa1\xd7\xb7\xda\x1b\xe7\x3c\x1f\x9e\xb0\x29\x14\xc4\xab\x32\xac\xd1\x89\xc6\x97\xe0\x1e\x1f\x39\x1f\xa2\x4c\xac\x6f\xe1\x57\x07\xed\x81\x72\xa6\xfe\xa4\xec\x52\x05\xb6\xfc\xaa\x67\xb8\xa4\x69\x47\x71\x02\x53\xfd\x75\x6b\xb3\xeb\xe5\x81\xaa\xca\xfa\xd6\x89\xdd\x37\x7f\x1f\xaa\x68\xec\xf3\xb6\xaa\xb1\x8f\xa1\x54\xac\x0f\x93\x1e\xb2\x60\xac\x97\x1d\xd9\xd1\x9e\x1f\xaa\x6c\xec\xcb\x31\x75\x63\xbb\xca\x8b\xb8\xaf\x89\x77\xa9\x2e\xdb\x38\x93\xfa\x7f\xb5\xb7\xe4\xa3\xaa\x31\xeb\xb9\x6f\x0f\x5e\x69\xd6\x5b\x15\xff\x22\xf5\x66\x71\xa2\xbe\x0c\x1c\x2a\x2e\xdb\x59\x51\xc3\xb1\x61\xae\x46\xb7\x00\xad\x6b\xf4\x2e\x35\x6a\xef\xa1\xd1\x95\x3a\xdf\xab\x0c\xad\x8f\x2e\xde\xcb\x5b\x6e\x0b\x9a\x32\xd5\x52\xc3\xcc\x9c\x7c\xbb\x20\xd8\x16\xec\xa8\x96\xb6\x72\x80\x26\xd8\x19\xfc\xcb\x0e\x25\xf3\x47\xdd\xa4\x0f\x59\xbf\x3d\x55\x98\xc9\xc5\x0e\xf6\xb3\x4d\xb7\x07\xa0\x75\x58\xfe\xce\xac\x6f\x9f\xc6\x9a\x00\x6f\xf3\x27\x17\x7c\xf3\x51\xa8\xc7\x5a\xf6\xad\x4d\x1c\xc3\x75\xdf\xda\x67\x1d\xbe\xf0\x5b\xc9\xe9\xff\xbf\xe5\xdf\x7c\x94\xe9\xb1\x16\x81\xf3\x55\x26\xb7\x0a\xdc\x1e\x95\x69\x54\x19\xb8\x3f\x51\x99\x36\x7f\xdd\x7a\xcf\x1e\x5c\xbb\x67\xd5\xe7\xae\x13\xe2\x71\x96\x7d\x86\x49\xc2\x10\x2f\x33\xd3\xed\x55\xa0\xbd\x98\x76\xb8\x5a\xd0\xcf\x37\xc3\xc5\xa0\x3d\x0b\xb4\x79\xe7\xcd\xfc\x6d\x59\x55\xac\xcd\x2b\x85\xd6\x12\xa9\x74\x97\x6c\xf3\x0a\x48\x0e\x56\xb8\xed\x60\xcc\xaa\x8a\xb8\xf9\xcc\x3a\x7c\x29\xb7\x61\x2c\x3c\x0a\xba\xf9\x14\x63\x74\x54\x56\x25\xb5\x47\xfc\xad\x93\x7a\x76\x7b\xc4\x1f\xad\xeb\x8d\x1e\x4d\xd2\x5b\xc5\xe8\x1d\x7f\x99\xae\xff\x80\xd8\xcb\x73\x85\x36\x6e\x8c\xcf\xf8\x1f\x9a\x27\x9d\xb7\x01\x0d\x96\x58\xbf\xfc\x5f\x00\x00\x00\xff\xff\x6a\x5e\x08\x28\x4f\x7e\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 32335, mode: os.FileMode(420), modTime: time.Unix(1569695689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\x4d\x6b\xf3\x46\x10\xc7\xef\xfa\x14\x83\x11\x25\x29\xae\xda\xe4\xb9\x19\x72\x28\x71\x79\xc8\x21\x21\xb8\x2f\x17\xe3\xc3\xd6\x1a\xdb\xdb\xae\x57\xca\x7a\xe5\x60\x84\xbe\x7b\x59\xeb\xc5\x92\xbc\x2b\x29\x26\x86\x06\x66\x02\x01\x6b\x67\xe6\x3f\xb3\x9a\x5d\xff\x70\xcc\x96\xff\xb2\x35\x42\x9a\x42\xf0\x3b\xea\xe0\x31\x92\x2b\xbe\x4e\x14\xd3\x3c\x92\xc1\x0b\xdb\x22\x64\x99\xe7\xf1\x6d\x1c\x29\x0d\xa3\x75\x14\xb0\x38\x52\xa8\xa3\x80\x47\x3f\xa3\xc0\x2d\x4a\xcd\xc4\xc8\xf3\xf6\x4c\x81\x42\x71\x8c\xdb\x6d\x78\xbc\x9b\xe1\x9a\xef\xb4\x3a\x40\xe5\x15\xcc\x6c\xeb\x9e\xb7\x4a\xe4\x12\xb8\xe4\xfa\xe6\x16\x52\xcf\x03\x00\x47\xa6\x87\xbe\x5c\x69\x96\x87\xa7\x29\x28\x26\xd7\x08\x3e\x4a\xcd\xf5\xc1\xf4\x31\x06\xbf\xcc\x0a\x93\x87\xbc\xdb\x46\x12\xd3\x68\x1e\xfc\x13\xf0\x15\xec\x36\x51\x22\xc2\x3c\x33\xaa\xba\x27\xf8\x26\xb8\x9e\x1b\xfc\xe0\x35\xf9\x5b\xf0\xe5\x73\x14\x62\x91\xc6\xda\xc2\x3c\x4d\x1b\x71\x59\xf6\x14\xe6\x1f\x17\xf0\x00\x3f\xd8\xdb\x4b\x8f\xf9\x6a\xa5\xad\x35\xdc\x08\x94\xa7\x86\x82\x47\x85\x4c\xe3\x2d\xfc\x52\x36\x61\x2c\x7f\x38\x81\x2d\x8b\xe7\x3b\xad\xb8\x5c\x2f\x7e\xb4\x2b\x3c\xc9\x55\x04\x27\x99\x52\xaa\xd8\xc3\x98\x29\x94\x7a\x0c\x3e\x5b\x96\xbb\xd7\x56\xae\xcb\x3a\xf7\xf0\x49\x4a\xfb\x46\xe6\x02\x8d\x4d\x6c\x27\x1c\x99\x8d\x2b\xfc\xb2\x6c\x04\x13\xd7\x66\x99\x56\x9a\x9d\xd4\xea\x29\x3a\x08\xa6\x18\x2b\x5c\x32\x8d\x61\x5b\xc7\xd8\x69\x75\x02\x5a\x25\x38\xb6\xa6\x43\x69\x0d\x6e\x29\xbd\x32\xc5\xb6\xa8\x51\x4d\x71\x65\x46\xdc\xec\x9f\x3b\xaa\x7a\xb1\xee\xe8\x60\x86\x6f\x09\x57\x18\xb6\x5e\x76\x69\xe5\x72\x15\xba\x9b\xd4\x4e\xcd\x0b\xbe\x9f\x16\x0a\x57\xb3\x74\x73\x96\xc7\xd8\x7c\x61\xfe\xf2\xd1\x39\xdf\xd3\x7a\xed\xc5\xa4\xf0\x31\xf8\xe2\xee\x38\x20\x03\x3a\xb0\x95\xef\xda\x10\x71\xe7\xe8\xb7\x5e\x6b\x5f\xa5\xb6\x6a\xef\x8f\xd5\x8a\xbb\xae\xdc\xd6\x82\xee\x7b\x0a\xca\x8b\x1a\x52\x92\xad\xac\x6f\x79\x59\xf7\x7d\x0a\x50\x9e\x0d\xf1\xcd\x9c\x8b\xf3\x51\xb5\x09\xa1\x0c\x7b\xd2\x66\xdd\x89\x86\x25\xe9\xf7\xea\x90\xe9\x0f\xee\xf6\xb0\xa4\xbe\xbd\xe4\x20\x0f\x39\x92\xbf\x49\xad\x38\xee\x1c\x03\x51\x3f\x89\xf3\xc5\xe9\x2c\x5a\x32\xd9\x2f\xae\xda\x5c\xc4\x7d\x67\xab\x28\xc5\x39\x36\x1f\x94\x2f\xcd\x7c\x59\x4d\x8a\x4b\xb8\xa4\x82\x8e\x61\xfb\xe3\x10\x9f\xdc\xcd\x87\x6e\xf7\xf2\xce\x8c\x83\x29\xae\x58\x22\xf4\x5f\x4c\x24\x67\x5f\x01\x75\xab\xfb\x55\x42\xad\xe0\x1e\xc1\xfe\xe1\xe2\x2b\xc0\xb7\xaa\x83\x11\xca\x64\x3b\xea\x2a\xea\x57\x21\xa2\x77\x0c\x1f\x37\x11\x5f\xe2\xf1\x65\x7f\xf0\x42\xfa\x67\x0c\xfe\xfe\xf8\x86\xe3\xa0\x99\xac\xef\x1a\x38\xee\xc0\xbe\xff\x06\xe8\x98\xf7\xd2\xfa\xcf\xe4\x80\x7b\xdb\x8f\x83\xe7\x44\x68\x1e\x8b\xce\xd7\x58\xfa\xb8\xbe\x67\x07\x0a\x5b\x4a\xee\x88\xf8\x98\xb7\x63\xa9\x95\xc4\xe1\x65\x79\x5c\x0b\xb4\xac\x3a\x01\xef\xcf\x38\x3c\x07\xbc\xfc\xe1\x95\x01\x2f\x17\x21\xc0\x73\x28\x11\xe0\x11\xe0\x11\xe0\x5d\x20\x43\x80\x57\x55\xf1\x89\x80\x47\x7c\x07\xc4\x77\xc4\x77\xc3\xbd\xaf\xc8\x77\xaf\x4c\x2f\x37\x44\x67\x44\x67\x44\x67\xce\x6a\x89\xce\x6c\x46\x74\x46\x74\x56\x33\xa2\x33\xa2\x33\xa2\x33\x77\x92\xab\xff\xfa\x36\x45\x81\x67\xbf\xbe\xe5\x0f\xaf\xcc\x77\xb9\x08\xf1\x9d\x43\x89\xf8\x8e\xf8\x8e\xf8\xee\x02\x19\xe2\xbb\xaa\x0a\xe2\xbb\xb6\x11\xdf\x35\x8d\xf8\x6e\x78\xc4\x97\xe4\xbb\xef\xa8\x5b\xb7\xcb\x0c\xcd\x41\xdf\x5f\x1b\xef\xbe\xa3\x26\xb6\x73\x28\x11\xdb\x11\xdb\x11\xdb\x5d\x20\x43\x6c\x57\x55\x41\x6c\xd7\x36\x62\xbb\xa6\x11\xdb\x0d\x8f\xf8\xaa\x6c\xf7\xcc\xe4\xc1\xc1\x77\x66\xe9\xfa\x8c\x67\x54\x88\xf3\x1c\x4a\xc4\x79\xc4\x79\xc4\x79\x17\xc8\x10\xe7\x55\x55\x10\xe7\xb5\x8d\x38\xaf\x69\xc4\x79\xc3\x23\xfe\x37\x9c\x67\x48\x85\xe8\x0c\x88\xce\x88\xce\x9c\xd5\x12\x9d\xd9\x8c\xe8\x8c\xe8\xac\x66\x44\x67\x44\x67\x44\x67\xee\x24\x9f\xf1\x2b\x5c\xfe\xbf\xf5\x30\x4d\xcb\x4f\x99\xf7\x5f\x00\x00\x00\xff\xff\xb5\x07\x23\xe4\x6c\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18028, mode: os.FileMode(420), modTime: time.Unix(1563576918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

