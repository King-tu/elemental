// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x5d\x6b\xf3\x36\x14\xbe\xf7\xaf\x38\x0b\x61\xd8\xd0\xb8\x37\x63\x17\x1d\xb9\x28\xa5\x85\xc0\x52\x4a\x0a\xbb\x09\xbd\x50\x9d\x63\x47\x4c\x96\x8c\x24\xb7\x33\xc6\xff\x7d\xc8\x96\x3f\xe4\x7a\xa9\xd3\xb5\x7d\xe1\xcd\x55\x2c\x9d\x2f\x3d\xcf\xd1\x73\x94\x91\xe8\x6f\x92\x20\x94\x25\x84\x8f\xa8\xc3\x1b\xc1\x63\x9a\xe4\x92\x68\x2a\x78\x78\x4f\x52\x84\xaa\xf2\x3c\x9a\x66\x42\x6a\x58\x24\x22\x24\x99\x90\xa8\x45\x48\xc5\x25\x32\x4c\x91\x6b\xc2\x16\x9e\xf7\x42\x24\xf8\x1e\x00\x00\x3d\x20\xd7\x54\x17\xc6\x59\x6d\x49\x06\x6b\x48\x49\xb6\x57\x5a\x52\x9e\x3c\x75\x3e\xe1\xc6\xda\x41\x59\xbb\x99\x5f\x59\xae\x40\x12\x9e\x60\x53\xcc\x63\x86\x11\x8d\x69\x54\x17\xa3\x4c\x21\xbd\x21\xd0\x18\xd4\x51\xe4\xec\xb0\xc3\x84\x2a\x8d\xd2\xb1\x86\x10\x96\xe1\x43\xfe\xcc\x68\xb4\x15\x07\x74\x7d\x57\xb0\xec\x4b\x84\xab\x35\x84\xc6\x86\x85\xb7\xfd\xe2\x6a\xe0\xb0\x28\x4b\x6b\xb0\x43\xa5\xcd\x76\x55\x2d\xae\x4c\x0d\xc3\x30\x55\xd5\x1e\xe8\xc2\x49\x85\xfc\x30\xce\x3e\x58\xaa\x3c\x07\xb3\x88\x68\x4c\x84\xa4\x3f\x21\x70\x22\x97\x11\x7e\x09\x78\x84\x51\xa2\xbe\x10\xb1\xd5\x37\x42\x56\x96\xb6\xaa\x25\xbd\x80\x65\x7d\xb2\x81\xd3\x75\x73\x52\x70\x31\x6e\xed\x3e\x0f\xd8\x49\xac\x03\xcf\xbb\xbc\x84\xba\x90\xbf\x50\x2a\x73\x70\x89\x3a\x97\x5c\x81\x3e\x22\x44\xb9\x94\xc8\x35\xbc\xd8\x3d\x11\xd7\xcb\x69\x5d\xb8\x17\xe7\x3c\x72\x7c\xfd\x00\x62\x26\x88\xfe\xfd\x37\x28\x6d\x9c\x4e\x84\xae\x1f\x36\x1b\x1e\x8b\xb0\x4d\x53\x55\x86\x6a\x5d\x64\x36\xdc\x96\x70\x92\xa0\x04\xa5\x65\x1e\xe9\xb2\xf2\xea\xf0\x7e\xec\xec\x06\xd0\x9e\xfc\x4e\x8a\xd4\x80\xe1\x73\x83\x48\xd3\x1c\x01\x4c\x76\x47\x7d\x54\x5b\xcd\x58\xc7\xf6\xc6\xfd\xc9\x9b\x93\xed\xa6\xb9\xc6\x85\x6f\xef\x73\x71\x7e\x56\x47\x09\xf6\x6d\x9c\x79\xe9\xeb\x36\xf1\x9b\xa6\x98\x9d\xb8\xbf\x45\xfb\xfa\xef\xcc\x54\xbc\xf0\x09\xef\xcf\xe7\xd3\x89\x4c\x41\x9b\x8a\xc6\x40\x61\x0d\x71\xf8\x86\x1a\xc2\x8b\xe0\x0f\xf8\x85\x86\x1b\x75\x9b\x66\xba\xf0\x83\xc1\x5d\x6d\xa1\x71\x14\x73\x2a\x54\x87\xfb\xd9\xe1\xec\x9a\x1b\xce\xe2\xc8\x8b\xe0\x1d\x2c\x62\x4a\x9e\x19\xfa\x2d\x77\x93\x10\x8c\xd7\x1a\x9f\x16\x19\xf5\x4a\x75\x74\xec\xd8\xb7\xd5\x76\x6a\x70\x42\xa3\x3e\xac\x4f\x11\x51\xcd\xdc\x7f\x23\x48\xbd\x68\x5c\x8d\x41\xbb\xc7\xd7\xff\x70\xf1\x03\x6f\x42\x36\x46\x9f\x07\x8c\x49\xce\xf4\x9b\xb0\x9c\x32\xcb\xc6\x1c\xa0\x0d\x37\x8f\x75\xc3\x39\xbd\x77\x1a\xe1\x11\xc3\x96\xb2\x11\xe1\x4d\x37\x07\xf3\xf8\x56\x1f\x21\x5c\x7d\x1a\xe3\x5c\xe8\x96\x88\x8d\xda\x09\xa1\x7f\x4c\x47\xfc\x3a\xe5\xf0\xc0\x72\x49\x18\x54\xd5\x9f\x54\x19\x81\x7e\xbf\x33\xbe\xa4\x51\xd4\x59\x9d\xa2\x4e\xb6\x8a\x3a\xbb\x57\x76\xc8\x1a\xe2\x8e\x34\x53\xfe\x30\xab\xb3\xd3\x30\x24\xc7\x7a\x2c\xa7\x6c\x4c\x2e\xf3\xd2\x4e\xed\x04\x5c\x3b\x29\xcd\x24\x34\x23\xda\x6e\x0e\xa7\x73\x6d\x36\xa8\x60\x3b\x70\x6b\xa7\x73\xf3\xe5\x14\x3a\x34\xeb\xe7\x74\x9b\xbd\xf2\xea\x7c\xd7\x8c\x59\x60\x28\xaa\x2e\x2b\x61\x0c\xf0\x1f\xaa\x34\xe5\x49\xdb\xe5\x14\x95\x4d\xe6\xf8\xf8\x01\xec\xa7\x5f\x6b\x43\x40\xa6\x4c\xbe\xff\x3d\x77\xf2\x72\x9c\xf7\x78\xad\x2c\x7a\xf5\xdc\xbd\x13\xb2\x3b\xf7\x10\x42\x43\x9e\x1d\xcd\x10\x0b\x59\x7f\x27\xf4\x05\xfb\x97\x42\x87\xe8\x38\xce\x69\x79\xda\x3f\x35\xb7\xe1\x3d\x3d\x9a\x01\xeb\xf7\x0a\x4e\x5b\x78\xf9\x7f\x1f\xcb\x27\xd9\x9a\x23\x52\xee\xdb\xc1\x48\x53\xe5\xfd\x1b\x00\x00\xff\xff\xb6\x1f\x7f\xe7\x51\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3921, mode: os.FileMode(420), modTime: time.Unix(1528495747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\x1b\x37\x12\x7f\xd7\xa7\xe0\x09\x6e\x2b\x1d\xe4\x4d\x9e\xd5\x73\x81\x5c\xe2\x16\xc6\x25\xad\x11\x05\xe9\x43\x10\xd4\xf4\xee\x48\x66\xbc\x22\x37\x24\xd7\xb1\x4f\xd8\xef\x7e\xe0\xbf\x5d\x72\xff\x89\x72\xe3\x83\x1f\xe4\x07\x43\x1a\x0e\x67\x7e\x33\x43\x0e\x67\x48\x15\x38\xbd\xc5\x1b\x40\xbb\x1d\x4a\x56\x20\x93\xd7\x8c\xae\xc9\xa6\xe4\x58\x12\x46\x93\xdf\xf1\x16\x50\x55\x4d\x26\x64\x5b\x30\x2e\xd1\x6c\x82\x10\x42\xd3\xf5\x56\x4e\xcd\x27\xf1\x40\xd3\xe9\xc4\x7c\xde\xb0\x04\x17\x8c\x83\x64\x09\x61\x2f\x20\x87\x2d\x50\x89\x73\xc3\xb9\xdb\x21\x8e\xe9\x06\x50\xb2\x2a\x20\x4d\x3e\x3c\x14\x70\xc9\xd9\x1d\xc9\x80\x0b\x74\x5a\x55\x46\x84\x42\x81\xaa\xaa\x9e\x02\x34\xd3\x83\xf3\xc9\x64\xb7\x43\x27\x39\x96\x20\xe4\x47\xe0\x82\x30\x8a\x96\x67\x56\xd8\x5b\x4d\x7e\x25\x25\x27\xd7\xa5\x04\xe1\x18\x14\xf0\x5a\xef\x09\x59\xa0\x13\xa0\xe5\x56\xcd\xbb\x2e\x49\x9e\x9d\xd3\x72\x2b\x8c\x88\xb6\xe8\xaa\x9a\xbc\x78\xa1\x00\xe8\x19\x1a\x2d\xaa\x2a\xc4\xa1\xe0\x20\x80\x4a\x81\xe4\x0d\xa0\x82\x09\x41\xae\x73\x40\x77\x38\x2f\x41\xa0\x35\xe3\x08\x3b\x14\xda\x18\x33\xbd\x46\x66\xdd\x39\x4d\x26\x52\x49\xec\xc8\x17\x92\x13\xba\x99\x4c\x52\x46\x85\x73\xf6\x6e\x77\xea\x2c\xa0\x78\x0b\x0b\x74\xa2\xb5\x29\x2b\xcc\xe4\x8f\x46\xb9\x75\xa1\x85\x4d\x8d\xa6\x36\x62\x33\x55\x31\x98\x4f\x55\x95\x38\x57\xd7\x53\x3a\xa8\xce\x8c\x29\x6e\x46\x10\x1c\x1d\x9b\xe6\xb3\xf5\x9a\x09\xcb\x3b\x96\x41\x9e\x9c\x53\x49\xe4\x83\xb5\xfc\x22\x03\xfd\xb5\x8d\xab\xa6\xb3\xb5\xfe\xce\xae\xbf\x40\x2a\x93\xc9\x1d\xe6\x71\xf2\xce\x50\xbd\xde\x92\x9a\xb8\xd3\x48\x15\xeb\x12\xd5\xcb\xcb\x13\xf5\x1e\x84\x54\xa3\x55\x35\x5d\x68\xd6\xd7\x58\xc2\x86\xf1\x87\x65\x1f\x2b\x2b\x79\x5a\x47\xd0\xf0\x5f\x72\x72\x87\xa5\x92\xde\x62\xb7\x03\x55\xb5\x98\x54\x13\xbd\x08\xc9\x1a\x51\x26\x03\xa6\x0b\xf1\x9e\x31\xd9\xac\xb5\x7e\x2b\x2f\xf3\x92\xe3\x1c\x55\xd5\x5b\x22\xa4\xef\x37\x8c\x72\x45\x61\xeb\x88\xb9\xf5\x7a\x8b\xd1\xf1\xe9\xf3\x3f\x07\x39\x6d\x8c\xbd\x38\xca\x92\x53\x13\x44\xd2\x1b\x44\x81\x08\xd5\x5f\x15\xda\x64\xb2\x2e\x69\x8a\x66\x2c\x12\xcb\xbc\xd6\x34\x9b\xf7\x47\x58\xc7\xc1\xa0\x18\x96\xd9\x2c\x94\x89\xc1\xff\x9a\x15\x0d\x76\x8c\x0a\x46\xa8\x04\x8e\x24\x43\x18\xa5\x6a\x4c\x01\x8e\x83\x78\xb8\x49\x4a\x79\x8f\x39\x6b\x82\xaf\x73\x10\xce\x26\x0d\x63\x79\x86\x70\x51\x00\xcd\x66\x71\xc2\x77\xd5\x02\xb1\x24\x49\xe6\xbe\x5b\x7e\x54\xa2\xac\xe1\xaf\xb4\x34\x2b\x54\x04\x61\x92\x4c\x7f\xc5\x88\xc2\x37\xa3\xdd\xc6\xf1\xa9\xfc\x60\xb0\xcc\x9c\xfe\x24\x49\xfa\x5d\xb2\xd7\x55\xac\x94\x7f\xd3\x53\x2a\x73\xff\xb5\x50\xae\x50\x82\x4c\xba\x75\xb8\x4c\x16\x71\x7a\x6a\x35\xac\x94\x7a\x42\x32\x1b\xdb\x2d\x73\x23\xbf\x0a\xd6\x29\x2b\xa5\x0d\x87\xde\x6f\x29\xa3\x77\xc0\xa5\x1f\x0d\xbd\x12\xe9\x90\xdd\x8f\x73\xb7\xfa\x3f\xbc\xec\x34\x92\xd0\x9f\x23\x9c\xbb\xca\x77\x1b\x91\xb0\xf5\xfc\x36\xea\x31\xc5\x3b\xee\x93\x37\xb0\xc6\x65\x2e\xff\xe0\x19\xf0\x20\xbf\x64\x66\x00\x31\x35\x42\xe8\x06\xad\x09\xe4\x99\x70\xcb\x34\x65\x54\x02\x7d\x84\x63\x7c\x85\xb3\x39\xfa\xf4\xd9\x1c\xc3\xad\xe4\xe2\xc8\x8d\x71\xad\x92\xe6\x0f\x0b\xab\xa9\x43\xda\x55\x85\x2b\x73\xea\xb3\x28\x3c\x4d\xc2\x63\xd5\xb8\xc8\xb8\xc4\x09\xf0\xbd\x71\x67\x69\x7f\xd7\x7a\x2b\x7b\x36\x47\x84\xca\xbe\x84\x0a\x32\x79\x75\x79\x71\x41\xd7\x2c\xf1\xca\x23\x53\x5a\xb9\x63\x7f\xdf\xb9\xdf\x3e\xef\xb7\x8a\x45\x41\xc7\xed\x69\xee\x4c\xde\x7f\x68\xd9\x82\xa9\x4c\x15\xea\x56\x2c\xc6\x63\xb0\xdb\xa1\x2d\xbe\x05\xc5\xa4\xcb\xcd\x89\xaa\xb1\x9c\x29\xca\x7c\xad\xca\xcd\x50\x6e\xb9\xfa\x22\x18\x5d\x4e\x4f\xa7\xe8\x5a\x7f\xf8\x4b\x1b\x60\x43\x30\xbd\x32\xb3\x54\x2d\x9c\xbc\x2b\x25\xdc\xdb\xb0\xfd\x0e\xdf\xf6\x38\xc5\x1d\x40\x2a\xe5\x0e\xa7\x11\x85\x4b\x87\x75\x8f\xc0\xd9\x7c\x5c\x48\x2b\xba\x3f\x8e\xf1\x36\xcb\xdc\x77\xc6\x72\x64\x49\x2c\xba\x1b\xc3\x55\xac\xba\x9e\x55\x91\x62\xbc\xa9\xda\xeb\x18\x5d\x50\x22\x09\xce\xc9\x7f\x55\x2b\x30\xb2\x65\x4c\x15\x25\x6e\x58\x99\x67\x7f\x72\x12\x4c\x44\x27\xb6\x8e\xd7\x55\x6c\x4b\xc8\x49\x72\x59\x5e\xe7\x24\x55\x96\x28\xd3\x9a\x62\x57\xdb\x13\xc0\xab\xaa\x45\xb8\x07\x87\x77\x65\x6f\x11\x34\x54\xc9\xba\x6d\x39\x1a\xa0\xef\x54\xee\xa0\x4e\xbd\xe3\x12\x78\x2b\xa3\x9a\x92\x3e\x40\xfa\x93\x40\x25\x25\x5f\x4b\x57\xce\xa9\x39\x07\xa2\x57\x53\x66\x73\x14\x66\x51\x13\x3c\x33\xd7\x43\xe3\xe2\xeb\x4e\x81\xa4\x56\xd0\x30\xa9\x9e\x54\x1d\x90\x90\xb9\xcd\xe0\xfa\x22\xc8\x05\xb4\x45\x4c\xa7\xcd\xb0\x89\x99\x71\xc1\x0a\xa4\xa7\x57\x80\x7c\x1a\x17\x04\x6a\x66\x24\xb3\x6e\x98\x47\xfa\x21\xce\x01\xe8\x0c\x91\xac\xdf\xcc\xbe\xa3\xe2\x06\xf3\x2c\x65\x19\x64\xed\x43\x43\x67\xb1\x68\xd3\x1e\x7f\x52\x8c\x9d\xea\xae\x89\x19\x38\xdd\xa3\xd0\x69\x78\xcf\xfc\x18\xf7\x03\x6f\x0c\x78\x03\x22\xe5\xa4\x90\xcd\x85\xc3\x1b\x96\x86\x15\x0f\x4b\x4b\x9d\x03\x34\x8f\xaa\xb6\x9a\x55\x1a\x1b\xb5\x37\x2c\xed\xd9\x8c\xa7\x0a\x0c\x7c\x1d\xc4\x33\xfd\x44\x59\xc6\xd2\xcf\xd3\xf6\xf6\xd2\xe4\x95\xb9\xa7\x08\xb6\x61\xc8\x76\xa5\x3c\x20\xd2\x7f\xe3\xf4\x56\x92\xf4\x56\x8c\x18\x7e\xd5\x5d\xc8\x5e\x65\xa1\xad\x8c\xd9\x77\x1a\x52\xc7\x52\x0b\x67\xbd\x95\xc9\xaa\xe0\x84\xca\xf5\x6c\xfa\xaf\x1f\xc4\xf2\x07\xf1\xcb\x54\x35\x00\x4d\xbe\xd5\x51\x6c\x48\x26\x89\xcd\x27\xfe\x15\xd2\xbe\xda\xc2\x94\x16\xf5\x19\xf5\x1b\x50\xe0\x58\xc2\x6f\x20\x55\x73\x99\xb4\xcf\x21\x15\xf1\xdf\x40\x2a\xbb\x3a\x1b\xdc\x5f\x05\xbd\x0c\x76\x07\x73\x48\x81\xdc\xb5\xf3\xd3\xc9\x88\xa3\x06\x34\xce\xe6\xa1\x1e\x77\xf9\x13\xfa\xd1\xa4\xa7\x4e\x3e\x0e\x8a\xc1\x3e\x17\xac\x46\x5c\xb0\x1a\x70\x41\x9d\xa2\x37\xe4\x0e\xe8\x77\xf6\xc2\x80\xd2\x99\xb7\x9d\x7b\xfd\x51\xe7\xf1\x7e\x4f\xa0\x33\xe4\x49\x08\x56\x72\x78\x49\xf6\x11\xe7\x24\xc3\x52\x9f\x3f\x24\x03\x63\x68\x5a\x72\x0e\x54\x22\x42\xd7\x8c\x6f\xcd\xa6\x17\x92\x71\xc8\x54\xc6\x35\xed\xb9\x29\x54\x4a\x0e\xf1\x69\xdb\xaa\x52\x25\x05\xe7\x8c\x3b\x0b\xf4\x17\x11\x36\x7a\xe7\x9a\xb6\x73\x5b\xf9\x6b\x49\x38\x64\xe7\x63\x8c\x7d\x97\xbb\xa3\x3b\xa4\x39\x04\xf5\x7d\xd8\x07\x8e\xa9\x20\xca\xea\x60\x2c\x39\xbf\x2f\x98\x80\xa6\x24\xb7\xe4\xf7\x16\x53\xc8\xad\x12\x99\x0e\xd0\xd4\xec\xfe\xa9\x1b\x56\x63\x9c\x87\xd0\x9d\x3f\x9c\x28\x9b\x39\xc2\x4c\x3e\x10\xdf\xf9\xcf\x5a\xde\x3f\xce\x10\x25\xb9\xd7\xe7\xb6\x5c\x55\xb7\xbc\x21\x7d\xa1\x26\xbb\xe6\x37\x3c\x26\x7a\x8d\x91\x64\x0b\x07\x99\xf2\x81\x6c\xe1\x39\x1a\x02\xf7\x12\x38\xc5\xf9\x41\xc6\x9c\xdb\x49\xcf\xd1\x20\x42\x25\x6c\x80\x1f\x64\xcf\x05\x95\xcf\xd1\x94\x75\xce\xb0\x3c\xc8\x90\x5f\xd5\x8c\x67\x62\x4a\xd7\xb2\xe4\x55\x9e\xb3\x6f\x90\xbd\xbe\x61\x24\x6d\xde\x45\xc6\x0c\x33\x19\xe0\x82\xea\x1b\xb2\x96\x5d\x26\xa1\xcc\x06\xcc\x5b\x34\xf5\xa4\x9a\xf7\x85\x11\xda\x01\x70\x35\x5d\xa0\xe9\x95\x92\x56\x2d\xf4\xe9\xf0\xaa\x94\x6c\x63\x0f\xc6\x6c\xc4\x49\xd0\x72\x0e\x1c\x10\xdf\x06\x04\xe6\x51\x3e\xb8\xc4\xea\x84\xa6\x71\x61\x5d\xe8\xfa\xae\xad\xe3\xca\x98\xe7\xa5\xe8\xa7\xb0\x6c\x23\x51\xf2\x0e\xdf\xbf\x05\xba\x91\x37\xe8\x65\x8c\x6d\xef\xf0\x3d\xd9\x96\x5b\x33\x25\xd6\x42\x45\x6d\xf4\x28\xca\x1a\xe7\x02\x9e\xcc\x24\x42\x0f\x32\x89\xd0\x47\x9a\x54\xeb\x79\x7a\x93\xf0\xbd\x7e\x9b\x44\x2f\x93\x97\x43\xe7\x75\x7c\xf6\xb1\x41\x3c\x20\xf9\xd4\x31\xfc\x68\x5f\x2e\xbf\x9f\xbd\xb6\xe1\x89\x05\x1d\x9d\xfa\x17\xaa\xd0\x9b\xb5\x60\xcf\xbf\x77\x9c\xf6\x2d\xc4\xef\x19\x35\xb3\x4e\x0f\x8f\x9a\x43\xf1\x04\x51\x8b\xc4\xfc\x98\xa0\x35\xa8\x9f\x38\x68\xf1\xdf\x9c\xb9\x39\xd0\xd6\xf1\x3a\x47\xbf\xa0\x97\x35\x24\xdb\xe1\x85\x2c\xfe\x43\x8d\x95\x01\x3d\x73\xeb\xd9\xd0\x99\xe5\xae\x0d\x48\xee\xee\xe1\x0a\x48\xc9\x9a\xa4\xba\xbd\xf9\x95\xf1\xba\x59\x08\x7a\xde\x9a\x1a\xb0\xd7\x57\x20\xa6\x25\x6c\x7e\x6b\xa1\xaf\x73\x6f\xe1\xc1\x35\x45\xfb\x2e\x0b\x86\x30\xcc\xb4\x20\x77\x65\xd7\x2c\x8d\x01\x38\xbb\xda\x33\x77\x0b\xc4\x6e\xd5\x72\x1a\x53\xdc\xf4\x45\xef\x70\xf1\x49\xa9\xfa\xfc\xb3\x9a\xd6\x71\xe3\x9d\xef\xc1\x17\x2f\xd0\x9f\x80\x52\xd5\x4e\xeb\x96\x69\x4d\x68\x86\x88\x5c\x20\xc1\x50\x0e\xf2\x27\x81\xd2\x1b\x48\x6f\x11\xb3\xcf\xec\xec\x1b\x70\x94\x62\x01\x88\xd0\x0c\xee\x21\x43\xa2\x80\x14\x6d\x71\x11\x7b\x79\xfc\x56\x89\x78\x8d\x05\xf4\x00\x76\xef\xc8\xbd\x0e\x11\x41\x0c\xd7\x65\x9e\x7b\x31\x12\x21\xe7\x16\x17\x91\xd1\x1a\xd0\x35\x9b\x2b\x19\x9f\x4c\xb0\x3e\xc7\xc6\x2a\xc2\xfc\xc0\xea\xc9\xfe\x1f\xb5\x04\xfc\x9d\x97\x2e\x5c\xe8\x77\xae\xda\x0d\x6a\x09\x8f\x49\xdb\xff\xa3\x97\x50\xdf\xd9\x21\x5e\xf0\xee\xff\x1e\xd1\xb0\x7b\x4f\x2f\xf5\x0c\x05\xa1\x75\xad\x13\xfc\x9a\xab\x9d\x2c\xa7\xcb\xbd\xdb\xca\xbf\x9a\x3d\x1d\x2c\x66\xd5\x9f\x4f\x5f\x76\x6b\x52\x55\x92\x06\xb2\x5a\xcf\x3a\x61\xa1\xbe\x1c\x68\x20\x4e\xab\xea\xa0\x22\xbf\x39\x69\xea\x69\x55\x9d\x8e\x17\x5d\xdb\x5a\xdd\x40\x83\xce\x1f\x58\xf6\x76\x0e\xa3\xd6\x39\x05\xbd\xaf\x27\xea\x2f\x18\x58\x0e\x84\x2b\x4e\x05\x07\x1d\xb9\x3f\x68\xfe\x10\x68\xf0\xe8\xc6\x82\x16\x67\x94\xf4\xe0\xe9\xc0\x1b\xf7\xe9\x46\x7a\x8b\xf3\x10\xe9\xee\xdc\xf6\xaf\xf0\x07\xee\x30\x4e\xbb\x18\xf4\xec\x7a\x01\xb5\x44\x2a\x64\xfe\x53\x65\xe5\x2d\x11\x4a\xf2\x81\xb5\xa1\x19\x42\x04\xb4\xdc\x3e\x4a\xfb\xf0\x45\x68\x5f\xc8\x3d\x47\x7a\x32\x1e\x81\xd7\xdd\xc5\x1d\x86\xf8\xb4\xaa\xa6\x3d\x10\xa6\xd1\x18\x0e\x56\xb7\xcf\x60\x34\xa4\xad\xbb\xa0\x06\xd7\x58\xc1\x21\x6d\x6f\xf0\x86\xea\x56\xaf\xc7\x15\xb9\x76\x83\x17\xa4\x46\x70\x4d\x5e\xf6\xbc\xc4\xb4\x9e\x5f\xa2\x34\x79\xd7\xb1\x6e\xc8\x92\x0c\xf6\x66\x3c\x4a\xdc\xaf\x24\x97\xc0\xf1\x75\x1e\x6c\xb9\x86\x6a\x84\x06\x5c\x71\x72\x19\x07\xb2\xa1\xff\x81\x20\x0d\x35\x54\x2b\xd7\xe7\x8a\x92\x6b\x9f\x70\xbc\x11\x43\x31\xf2\xea\xd1\x28\x59\xde\xab\xaf\x37\xda\x50\x8d\xcc\x80\x2b\x4e\xae\xaa\xf6\x02\x91\x8a\x60\xa5\xd9\xb1\x28\x41\xfe\xad\x47\x3d\x58\x13\x97\xdd\x9b\x91\x48\xa1\x9d\x14\xeb\x68\xcb\x4e\xa3\x1e\x25\xd1\xbb\xc9\x68\x44\x3a\xe2\xb2\x7b\xdb\x11\x29\xb4\x0b\xd3\xd2\x96\x9d\xce\x34\x46\x62\xfb\xd4\xf5\x0e\xdb\x83\xce\x58\x7d\xa8\xb5\x77\x4c\x4d\x34\xd8\x7c\x9e\x28\xa1\x97\x9c\x6c\x31\x7f\x68\xed\x97\x86\x6a\xc4\x06\x5c\x51\x72\xdf\x03\xce\xda\xc5\x80\xa3\x2d\xed\x2d\x61\xcd\x11\x29\x31\x7c\xf8\x31\x12\x0d\x6d\xd9\xbe\x77\x8c\x92\xb8\xea\xec\xe9\x95\xb7\xa7\x57\x07\xed\xe9\x95\x79\xa5\xf3\x65\x69\x8a\x95\xe5\x46\xe3\x64\x95\xd7\xf6\xb1\xb1\x11\x66\x48\xee\x67\xe9\x35\x43\xdc\xca\xe9\x3c\xb1\xa9\xbf\x9a\x68\x20\xfa\x3c\x71\x42\x5b\x10\x3d\x7c\x7b\xc1\x59\x0d\x2d\x6a\xe7\xa7\x2c\x87\xb7\xa8\xff\x87\xe6\x6b\x40\xf1\xf3\xee\xc2\xcc\x9d\x40\x72\x6c\xc1\x8e\x2d\xd8\xb1\x05\x3b\xb6\x60\xc7\x16\xac\x01\x77\x6c\xc1\x8e\x2d\x98\xfd\x3b\xb6\x60\xc7\x16\xec\xd8\x82\x1d\x5b\xb0\x63\x0b\xa6\x5b\xb0\xff\x05\x00\x00\xff\xff\x9d\xc3\x20\x54\x1a\x40\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16410, mode: os.FileMode(420), modTime: time.Unix(1533239900, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

