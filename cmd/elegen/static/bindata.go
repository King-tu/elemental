// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1539813059, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x59\x6f\xdc\xb6\xd6\xef\xf3\x2b\xd8\x81\x9b\x4a\xe9\x58\xce\xf3\xa4\x2e\x90\x2f\x4b\x61\x7c\x49\x63\xc4\x41\xfa\x60\x18\x35\x2d\x51\x63\x36\x1a\x52\x21\x29\x3b\xbe\x03\xfd\xf7\x0b\x6e\x12\xa9\x65\x86\xf2\x92\xeb\x8b\xeb\x3c\xb4\x9e\x43\xf2\xec\x24\xcf\x39\xa4\x58\xc2\xf4\x2b\x5c\x21\xb0\xd9\x80\xe4\x04\x89\xe4\x35\x25\x39\x5e\x55\x0c\x0a\x4c\x49\xf2\x27\x5c\x23\x50\xd7\xb3\x19\x5e\x97\x94\x09\x10\xcd\x00\x00\x60\x9e\xaf\xc5\x5c\xff\xc5\x6f\x48\x6a\xfe\x5c\xd1\x04\x96\x94\x21\x41\x13\x4c\x0f\x50\x81\xd6\x88\x08\x58\xe8\xd6\xcd\x66\x1f\x30\x48\x56\x08\x24\x27\x25\x4a\x93\xcf\x37\x25\x3a\x66\xf4\x0a\x67\x88\x71\x49\x41\xa1\x90\x4c\x80\xba\x6e\x87\x20\x92\x81\x7d\xd3\xda\x45\xf1\x05\x16\x38\x53\x6c\x06\x22\xaa\xeb\x59\x3c\x9b\x6d\x36\x60\xaf\x80\x02\x71\xf1\x05\x31\x8e\x29\x01\xcb\x43\x83\xf1\xbd\x02\xbf\x12\x82\xe1\x8b\x4a\x20\x6e\x3b\x48\x05\x6c\x36\x86\xf8\x1e\x5e\x80\x3d\x44\xaa\xb5\x1c\x77\x51\xe1\x22\x7b\x4b\xaa\x35\xd7\x28\xba\xa8\xeb\x7a\x76\x70\x20\x75\xab\x46\x28\xa9\x41\x5d\x03\x86\x4a\x86\x38\x22\x82\x03\x71\x89\x40\x49\x39\xc7\x17\x05\x02\x57\xb0\xa8\x10\x07\x39\x65\x00\x5a\x2e\x94\x30\x7a\x78\xc3\x99\x31\xcb\x3c\x99\x09\x89\xb1\x87\x9f\x0b\x86\xc9\x6a\x36\x4b\x29\xe1\xd6\x68\xad\xfa\xf6\x08\x5c\xa3\x05\xd8\x53\xd4\xa4\x14\x7a\xf0\x17\x4d\xdc\xa8\xd0\xb0\x4d\x34\xa5\x2e\xc7\x7a\xa8\xec\xa0\xff\xaa\xeb\xc4\x10\x69\x87\xf4\xb8\x3a\xd4\xa2\xd8\x11\xd6\x38\xad\x6d\xda\xbf\x67\x92\x5b\x9c\x03\x42\x85\xb1\xcd\x07\x9a\xa1\x22\x79\x83\x04\x4c\x2f\x51\xd6\x2a\xd6\x6d\x7d\x4b\x04\x16\x37\x46\x39\x47\x19\x52\x3f\xbb\xac\x37\x70\x9a\xab\xdf\xf4\xe2\x1f\x94\x8a\x64\x76\x05\x59\x18\xbe\x43\xd0\xf8\x76\xd2\x00\x37\x4a\x18\xd9\x75\x09\x1a\x0f\x74\x50\x7d\x42\x5c\xc8\xd6\xba\x9e\x2f\x54\xd7\xd7\x50\xa0\x15\x65\x37\xcb\xa1\xae\xb4\x62\x69\x63\x64\xdd\xff\x58\xcf\xd3\x65\x1f\xb5\x69\x69\x7b\x32\x7c\x05\x85\xec\xd9\xed\xa8\x1b\xea\x7a\x31\xab\x27\xea\x7a\xb3\x19\xea\x71\xc4\x3f\x51\x2a\x76\xd9\xe2\xb8\xa8\x18\x2c\x40\x5d\xbf\xc7\x5c\xb8\xd6\x80\xa0\x90\x10\x9a\x07\x8c\x6d\x1c\x3d\x84\xc6\xe9\xd9\xf3\xd1\x9e\x52\xe0\x83\x03\xe0\x78\x87\xa8\x18\xd1\xae\x81\x07\x5d\x83\x03\x4c\xd4\x4f\xc9\x6d\x32\xcb\x2b\x92\x82\x88\x06\xf2\x12\x37\x94\xa2\x78\xd8\x6f\x94\xcd\x34\x17\xe3\x38\x5b\xf7\x9b\x69\xfe\x5f\xd3\xb2\xe5\x1d\x82\x92\x62\x22\x10\x03\x82\x02\x08\x52\xd9\x26\x19\x0e\x63\x71\xba\x48\x92\xf8\x80\x38\x39\x86\x17\x05\xe2\x56\x26\xc5\xc6\xf2\x10\xc0\xb2\x44\x24\x8b\xc2\x90\x6f\xea\x05\xa0\x49\x92\xc4\xae\x5a\x9e\x49\x54\x46\xf0\x57\x0a\x9b\x41\xca\x3d\x33\x09\xaa\x7e\x42\x40\xd0\xb5\xa6\x6e\xec\xf8\x50\x7a\xd0\xbc\x44\x96\x7e\x92\x24\xc3\x2a\xd9\xa9\x2a\x5a\x89\x3b\x6a\x4a\x6e\x19\x7f\x2f\xa4\x2a\x24\x22\xbd\xce\x5b\xbe\xf4\xda\x64\xe9\x34\x64\x68\x25\xd4\x80\x24\xda\x36\x5b\x62\x8d\xbf\xf6\xfc\x94\x56\xc2\x98\x43\xcd\xb7\x94\x92\x2b\xc4\x84\x6b\x0d\xe5\x89\x64\x4c\xee\xdb\xa9\x5b\xfe\x77\xdc\xed\x14\x27\xbe\x3e\xd7\xf0\x2b\x8a\xb6\x74\x5f\x80\x02\x91\x88\xc6\xad\x0a\xb1\x1c\xf6\xe2\x25\xc0\xe0\x37\xd3\xf6\x12\xe0\x5f\x7f\xf5\x55\x78\x8a\xcf\xc0\x21\xa0\xa7\xf8\x6c\xab\x6a\xde\xa0\x1c\x56\x85\xf8\xc8\x32\xc4\xbc\x65\x26\xd3\x0d\x80\xca\x16\x4c\x56\x20\xc7\xa8\xc8\xb8\xf5\xd6\x94\x12\x81\xc8\x2d\xf4\xe3\x12\x8c\x62\x70\x7a\xa6\xc3\x80\xce\x1a\x63\xc1\xad\x48\x4d\x68\xa3\xa9\x7c\x34\x6c\xb5\x71\x50\x37\xaa\xb1\x11\x59\xb3\xd1\xf9\x5b\x95\xbf\xad\x6b\x15\x69\x95\x7c\xa6\x27\x25\x64\x1c\x79\xea\x08\x5c\xd4\x8d\x93\xa1\x4c\xba\x96\x46\x13\x3a\xaf\x0f\x0e\xc0\xc7\xfe\x52\x0e\xae\x71\x51\x00\x4a\x8a\x1b\xa5\x72\x68\x9a\x56\xf8\x0a\x11\x63\x92\x04\xfc\x49\xf5\x9f\x60\x8d\x20\xe1\x40\x3a\x10\x43\x06\xc4\xd1\x2d\x8c\x64\x55\x10\x19\xa3\x27\x49\xa2\xed\xf1\xa8\x1c\x3b\xe9\xb0\xd9\xac\x33\x63\xce\x6e\x5d\xc3\x35\xec\x95\x81\xdd\xd5\xaf\x0d\xee\x28\x06\x98\x88\xa1\x1d\x13\x89\xe4\xd5\xf1\xd1\x11\xc9\x69\xe2\x04\xde\x3a\x68\x37\x5e\xe8\xe4\x00\xbb\x02\xc7\x6e\xc0\xb8\x96\x5d\xa4\x10\xb0\x3b\xcc\x06\x75\xbb\xe3\x13\x13\x94\x57\xa9\xe4\xbf\x33\xdf\xb6\xcf\xb3\xcd\x46\xa5\x02\x9f\xe9\x3b\xe5\x73\x7b\x52\x5a\x90\xc3\x82\x23\x95\xe1\x78\x82\x49\xbd\x28\xca\x16\x81\xd4\xd7\xf9\x3f\x9c\x92\xe5\x7c\x7f\x0e\x2e\xd4\x1f\x7f\x2b\x79\x8c\x6d\xe6\xe7\x7a\x94\x4c\xe3\x92\x0f\x95\x40\xdf\x7b\xfd\xf7\xe7\xe7\xc6\xc6\x7f\xa2\xeb\x1d\x7a\xb3\xe1\x88\xdc\x80\xc7\x37\x15\xc9\xab\xf2\x81\x1d\x08\xa3\x78\x3b\x92\x8e\x2b\x3c\xdb\xd6\xb7\xf5\x73\x57\x41\xcb\x2d\xfe\xb3\x98\x39\x8b\xd9\xbe\x9b\xfc\x49\x7b\xc8\xe9\xc4\x29\x73\x92\x45\x10\xed\x30\x67\xec\xad\x9b\x26\xe8\xe6\x97\xb4\x2a\xb2\xbf\x18\x16\xe8\x88\x60\x81\x61\x81\xff\x85\x98\x34\xb3\xca\x26\x25\x29\xbd\xba\x76\x5c\x63\x2f\x39\xae\x2e\x0a\x9c\x4a\x69\x40\x07\xed\x1e\x26\x58\x2d\x13\xd7\x03\x68\x91\xf0\x90\x77\xc7\xe2\xdc\x0c\xf7\xe0\x43\xb0\x7d\x77\x81\x0f\x03\x99\x39\x19\x92\xd9\x0d\xc6\xe7\x63\xa9\x9b\x5d\x50\xb6\x7a\xcb\x3d\x45\xe2\xc0\x0b\xc5\xdd\xd9\x37\x45\xb0\x1c\x77\x62\x02\x9d\x14\x7b\x72\xfd\xc2\x41\x45\xf0\xb7\xca\xe6\x25\x72\xcc\x44\x59\xe5\x90\x28\x06\x7e\x1c\xa0\x73\x39\x3d\xd6\xe1\xc6\x3a\xa7\x5d\xda\x93\x86\x40\xdb\x29\x79\x6d\x37\x61\x3b\x8f\x1b\x2b\xcb\x05\xa9\x83\x62\xde\x2b\xbf\xdc\x46\x61\x27\x48\x38\x5c\x72\x24\x1e\x46\x61\x1e\x99\x08\x67\xc0\xee\xca\x61\x5a\x0b\x53\x17\x38\x04\x38\xbb\x0f\xa5\x0c\x6d\xb7\x97\x90\x65\x29\xcd\x50\xd6\xdd\x78\xd5\x82\x1f\xac\x88\x5b\xef\xb6\xd3\xa5\x18\x8d\x90\x6d\x5d\x60\x24\x52\x0e\x92\x45\x09\xf3\xb8\x43\xe2\x89\x1a\x73\x5d\xd0\xb6\xf2\x94\xe1\x52\xb4\xa5\xc6\x37\x34\xf5\x73\x0d\x9a\x56\x6a\xa5\x53\x7d\x64\x24\xd8\xce\x97\x50\x8f\x78\x43\xd3\x81\x45\x44\xb1\x8b\xbe\x8d\xf2\x33\x3f\x25\x34\xa3\xe9\xd9\xbc\xbb\x2c\x28\xf0\x89\xae\x50\x7a\xcb\x87\xdf\xed\x5c\xea\x8b\xa7\xff\x07\xd3\xaf\x02\xa7\x5f\xf9\x16\xc1\xcf\x87\xa6\xd4\x50\xe4\x17\xa0\xe4\xd0\xe5\x42\xf1\xdf\x53\x8b\xe1\x3d\x5f\x8b\xe4\xa4\x64\x98\x88\x3c\x9a\xff\xf6\x33\x5f\xfe\xcc\x7f\x9f\xcb\x74\xbd\xdd\x82\x94\x83\xb4\x20\xbd\x52\xc7\x3d\xa7\x08\x8c\x14\x1b\xef\xd0\xf1\xc4\x1f\x88\x20\x06\x05\xfa\x03\x09\x81\x18\x48\x7a\xe1\xc2\xc1\x01\xf8\x03\x09\x29\x62\x6f\x89\xea\xa6\x66\xbd\x0e\x66\x55\x61\x28\x45\xf8\xaa\xbb\xc2\xee\x6d\xd1\xd9\x08\xc5\x28\xf6\xe9\xd8\x72\xb1\xaf\x52\xbd\xc0\xf6\xf6\x9f\x4e\x90\xdf\x57\xc1\xc9\x16\x15\x9c\x8c\xa8\xa0\xd9\x64\x74\x2e\x78\xbf\x5a\x18\x21\x1a\x39\x8b\xc6\xa0\x3e\x9a\x9d\x68\x58\x13\xe0\x10\x38\x18\x3a\x33\xa0\x3b\x01\x20\xc9\x40\x34\x36\x0b\xe2\x7e\x93\x2e\xf4\xc6\x46\x6d\x83\x59\x3c\xd7\xa0\xe1\xad\x47\x0e\xba\xb4\xfd\x51\x66\x6b\x44\xf7\x9a\x80\xef\x98\xb0\x41\x79\xb7\xee\xe2\xa6\xd3\x56\xe9\x38\x57\x69\xb3\x1e\x1c\x83\xc3\x43\xf0\xc2\xc9\x9d\x0f\x0e\x00\xa1\x05\x26\x62\x09\x56\x54\x1f\x95\xf1\xa6\xd1\xa6\x27\x3b\x6a\x16\xda\xe5\x81\xf3\xaf\x7b\xe0\xb5\x75\xfa\xfb\x03\xfb\xfe\xb1\x04\xcf\xa4\xe3\xf8\x70\x99\xe5\x74\x29\x22\x92\x39\xe8\x6a\x37\xeb\xe7\xa5\xcc\x2a\x82\x04\xa9\xdd\xaa\x64\xde\xd6\x24\x8d\xf6\x5b\x41\xf9\x35\x16\xe9\x25\xc8\xef\x4b\xf6\x14\x72\xe4\xef\xc0\x4b\xaf\x5d\xcb\x31\xa0\x09\x70\x08\x9e\x45\x43\x2a\x8a\xa7\xa8\xc8\x18\x9b\x97\x26\x67\x3e\x86\x52\x3a\x58\x96\x85\x2e\xc9\x13\x4a\x00\xc1\x45\x1b\xbe\x42\xf0\x3c\x40\x9f\xa6\xb4\x3d\x31\xe1\x51\xc4\x23\x33\x33\xb7\x79\x79\xec\x6e\xeb\x2a\x2f\xe4\xed\xa9\xe8\x4e\xd5\xdb\xbc\x51\x8f\x33\x40\x9c\x83\x9f\x34\x65\x77\xd3\x3b\xe2\x6f\xbf\x55\xb0\x88\xdc\x9d\x30\x76\x4c\x5f\x42\x82\xd3\x68\x9e\x42\x22\x97\xa0\x52\x29\x2f\x67\x74\x0d\x20\xd0\x52\x5c\x63\x71\x09\x32\x9c\xe7\x88\x21\x22\x9a\x13\x9b\xb9\x57\x9d\xe2\x54\xa5\xe7\x9a\x7a\x14\xa0\xdf\x78\xd6\x3d\x22\xed\xca\xc2\x47\x56\xdd\x9f\x0e\x95\x39\x9d\x32\xda\xd8\xea\xfc\x9c\x0f\x39\xd7\xac\xf1\x20\xcf\xb1\xda\x1f\xbd\xd2\x95\x39\xf6\x56\x19\x10\xce\x90\x5e\x7d\xd3\x8a\x69\x7d\x90\x9c\xb2\xb5\x0e\xf6\xb8\xa0\x0c\x65\x32\x8a\xd7\xce\xa3\xeb\x4f\x15\x43\xe1\xa9\x80\x21\x25\x13\x66\xc6\x28\xb3\x5e\xa2\x7e\x28\x0f\x69\x9d\xea\xad\x82\x6d\x6c\x08\xf7\xad\xc2\x0c\x65\x6f\xb7\x75\xb4\x69\xd5\xa4\x69\xee\x1c\x44\x7e\x66\x90\x70\x2c\xa5\xf6\xda\x92\xb7\xdf\x4b\xca\x51\x5b\x11\x33\xe0\x4f\x86\x27\xbf\xb7\x0c\x60\xd5\x06\x3b\xd7\xbb\xc1\xdc\xb1\x39\x62\xcc\x67\xdd\xea\xc3\xa2\x32\x41\xa0\x1f\xef\x8f\x78\x40\xfc\x52\xe1\xeb\xf9\x4b\x47\x55\xcd\xe9\x8c\x0f\x5f\xc8\xc1\x71\xeb\x2c\x4e\x32\x31\x28\x8c\xc0\x6b\x34\x49\x94\xcf\x78\x8d\x1e\xa3\x20\xe8\xbb\x40\x8c\xc0\x62\x92\x30\x6f\xcd\xa0\xc7\x28\x10\x26\x02\xad\x10\x9b\x24\xcf\x11\x11\x8f\x51\x94\xbc\xa0\x50\x4c\x12\xe4\x9d\x1c\xf1\x48\x44\xd9\x26\x19\x43\xf9\x80\x5c\xc3\x8c\x26\xed\x2a\x39\xc2\x32\xea\xb0\x8a\x26\x68\x9b\x32\x10\x79\x7c\xbd\xc7\x5c\xcc\xe3\x0e\xf0\x03\x2c\xe7\xb1\x65\xd8\x04\x5d\xbc\xba\x70\x8e\x82\x87\x77\xa5\x96\xc7\x56\x4a\x5e\x5d\xec\x16\x29\x48\x2c\x37\x38\x1a\x15\x30\x79\x55\x14\xf4\x1a\x65\xaf\x2f\x29\x4e\x11\x0f\xf1\x26\xbd\xec\x1e\x11\x75\x1e\xdc\x71\x26\xbd\x8a\x47\x23\x3e\xb5\x68\x4b\x3d\x72\xdc\x3f\x14\x93\x1e\x03\xe7\xf3\x05\x98\x9f\x4b\x6c\xf5\x42\x45\xd2\xaf\x2a\x41\x57\x26\x9b\xcc\xb6\x78\xe6\x5d\xcc\xdc\x32\x01\x59\x90\x0e\x8e\xa1\x4c\x6b\x49\xd8\x5c\x5a\xa8\x62\x4a\x97\xc6\xb9\x16\xcf\xd9\x17\x1f\x42\xb2\x95\x00\xc9\x07\xf8\xfd\x3d\x22\x2b\x71\x09\x5e\x84\xc8\xf6\x01\x7e\xc7\xeb\x6a\xad\x87\x84\x4a\x28\xa1\x2d\x1d\x09\x51\x87\x64\x0f\x26\x12\x26\x93\x44\xc2\xe4\x96\x22\x35\x74\x1e\x5e\x24\xf8\x5d\x5d\x01\x04\x2f\x92\x17\x63\x41\x52\xf8\x92\x6f\x8c\x38\x61\xc5\x6f\x6c\xf8\xc5\x5c\x10\xbc\x3f\x79\x4d\x75\x31\x94\xe9\xe0\xfd\x76\x21\xa3\xeb\xa8\xc3\x76\x7c\xdf\x76\xda\xe5\x88\xf7\x69\x35\xed\xa7\xd3\xad\x66\xb9\x78\x00\xab\x05\xf2\x7c\x1b\xa3\xb5\x5c\xff\x20\xa3\x35\x67\xc7\x09\xe8\xdd\x6a\x56\x67\xcb\xea\x56\xf1\xb6\xab\xcd\xad\x26\x24\xba\xb5\x95\x56\x89\xee\x1c\x17\xb7\xf2\x6b\x60\x68\x78\x15\x2c\xe7\xfe\x48\x3c\x15\xa0\x05\x4f\xe0\xab\x46\x54\xc5\x59\x53\x75\xd0\x09\x69\xab\x08\xf7\x62\xf2\xeb\x8a\x0b\xba\xb6\x55\xc4\x16\x43\xd2\xd6\x30\xd6\xb0\x2c\x31\x59\xa9\xdb\xcd\xea\xc8\xaa\xc5\xf4\x41\x37\x25\xe6\xff\x60\xde\x5e\x55\xef\xb1\xd3\xa9\x70\x58\xac\xc3\xb6\x30\x78\xad\x45\xe8\x98\x8e\x4d\xc9\x4b\x09\x8b\x18\x4b\x22\x71\x53\x22\xb7\x0a\xa2\x6a\x58\xdd\x8c\x79\x19\x16\x7c\x35\x37\x75\xc6\x10\x05\xe2\x69\x91\x98\x43\xb8\xc9\xe3\xea\x61\x7f\x19\x72\x1f\x53\x5d\xf5\x63\xf8\x18\xfc\xee\x14\x59\x4d\x61\xcd\xef\xe2\x16\x7d\x0c\x0e\x34\x30\xb6\x19\x8d\x7a\xa3\xec\x99\x14\x2e\xc2\xef\x26\xc8\x16\x9c\xe3\x54\xb9\xc9\x3b\xca\x9a\xa2\x85\x57\x10\x6f\xa0\x5e\xf7\xe6\x08\x4e\x57\xb9\xdb\x5b\xfe\xea\xd6\xfc\x57\x74\x63\x8b\x33\xbb\xce\x9f\xc6\x78\x88\x14\xa2\x7e\x69\x7b\x84\x9d\xb6\xbc\x7d\xb5\x00\xf4\xab\xf1\xe5\x51\xc2\x6d\x7d\xe6\x03\x2c\x4f\x25\xa9\xb3\x97\x72\x58\x4f\xd3\x57\xae\x92\x0f\x0e\xc0\x5f\x08\xa4\xb4\x2a\x32\xa5\xdb\x1c\x93\x0c\x60\xb1\x00\x9c\x82\x02\x89\x5f\x38\x48\x2f\x51\xfa\x15\x50\x73\x39\x8f\x5e\x23\xa6\x7d\x17\x93\x0c\x7d\x47\x19\xe0\x25\x4a\xc1\x1a\x96\xae\xcd\xb6\xf1\xf9\x5e\xa2\x78\x0d\x39\x1a\x60\xd8\x5e\x24\x1e\x54\x08\xf7\x6c\x98\x57\x45\xe1\xd8\x88\xfb\x3d\xd7\xb0\x0c\xb4\xd6\x08\xad\x28\x96\x38\x4e\xb5\xb1\xce\x42\x6d\x15\x20\xbe\x27\xf5\x6c\xf7\x95\x37\xaf\x7f\xef\xfe\x1b\x2c\x55\xa1\xba\x51\x83\x74\xe1\x6d\xd8\x76\x7f\x4b\xe1\xd3\x3b\x9c\xa2\x85\x4d\x77\x17\x99\x54\x38\x74\xae\x5b\x35\x23\x24\x0b\x9d\xe3\xc1\x7d\xf7\x3b\xa2\xee\xd6\x39\x5f\xee\x9c\x56\xee\x45\x82\xfd\xd1\xfc\x4e\xfe\x73\xe1\xcb\x7e\x9a\x26\xb3\x34\x0f\x57\xe7\x82\x95\x9f\xbb\x2e\x47\x72\xea\xfd\xba\x9e\x94\xf7\xb6\xc1\x57\x33\xac\x6e\x76\xf1\x45\x5f\xb6\x4e\x82\xdc\x72\xe7\x36\x2c\x07\x93\xe9\xad\xd2\x59\x02\x83\xb7\x8e\xe4\x3f\xaf\x61\x39\x62\xae\x30\x12\x0c\x29\xcb\x7d\x24\xc5\x8d\x47\xc1\x81\x6b\x09\x3a\x3d\x83\xb0\x7b\x17\x5d\x9c\x76\x17\xae\xb1\x77\x7a\x4e\xc1\x6e\x43\xd9\x2e\x76\x05\x57\xd8\xd5\x7d\x40\xaf\xb7\x77\x21\x30\x09\x27\x58\x32\x94\x76\xad\xdd\x42\xad\x28\x4e\xaf\x40\xbc\xde\x75\x96\x16\x71\x03\x5e\x0e\x5c\x0b\xe9\xdc\x05\x09\xa2\xe4\x9c\x11\xd8\x26\x03\xd2\xbc\xb7\xed\x41\xe8\xde\xe1\x42\x20\xa6\xce\x8b\x9d\xd6\x16\xaa\x91\x7a\xbd\xc2\xf0\x52\x86\xf0\x8a\xfc\x3f\xf2\x7c\xb2\x85\x1a\xbc\x6e\xaf\x20\xbc\xe6\x5e\x88\xd3\xa2\x21\x1a\x5f\xd3\x1a\x84\xcb\xb9\x0c\xe7\xb4\xb6\x50\x8d\xd3\xeb\x15\x84\xd7\x2d\xe6\x34\x8d\x0d\x70\xd9\x2f\xf8\x04\x22\xed\x4d\x13\x0b\x5b\xf6\xea\x0f\x41\x18\x9d\x02\x4d\x8b\xd2\x02\x97\xfd\x22\x4e\x20\xd2\x3e\x9b\x06\xb6\xec\x25\xdc\x21\x18\xbb\x2b\xa7\xb3\x60\x4e\x5a\x27\xd5\xc2\xd4\x75\xf4\x06\xa8\x79\x73\xfb\x04\x21\x3d\x66\x78\x0d\xd9\x4d\xc7\xcd\x5b\xa8\x46\xeb\xf5\x0a\xc2\xfb\x09\xc1\xac\xbb\xa0\x5b\xd8\xd2\x14\x3f\x9b\x1e\x81\x18\xfd\x43\x44\x8d\x51\xc3\x96\xdd\x72\x6a\x10\xc6\x93\xde\x54\x3c\x71\xa6\xe2\xc9\xa4\xa9\x78\xa2\x4f\x7c\x5d\x5c\x0a\x62\x70\xd9\xd6\x30\x5c\xd5\x85\xb9\x78\xd4\x22\xd3\x20\xfb\xc5\x6a\xd3\x21\xcc\x73\x7a\xc7\xb5\xf2\x5f\x03\xd4\x2c\xba\x7d\xc2\x90\x76\x58\x74\xf8\xdb\xc9\x9c\xa1\x30\x9e\x9a\xee\x8e\x9b\x87\xd3\x8c\x1f\x10\x40\x8f\x10\x7e\xdc\x91\xb4\xce\xeb\x92\xa7\x30\xfa\x29\x8c\x7e\x0a\xa3\x9f\xc2\xe8\xa7\x30\x1a\x3c\x85\xd1\x4f\x61\xf4\x53\x18\x6d\x31\x3e\x85\xd1\x01\x08\xff\x1b\xc3\xe8\x4d\xff\x13\x9c\x3b\x7c\x81\xa0\x8f\x60\xc2\xbf\xff\x1f\x7e\x72\x26\x14\x83\xfe\xb0\x7b\x12\xbd\xd3\xb3\x5d\x57\x8e\xef\xed\x11\x9a\x29\x7c\xfd\x47\x9f\xa2\x99\xf6\x60\xc3\xed\xc4\xbb\xd5\xb3\x34\x53\x48\x3c\xc8\xe3\x34\x3f\x42\x33\x0f\xf4\x50\xcd\xed\x75\x77\xb7\xe7\x6a\x76\xce\xae\x1f\xf0\x68\xcd\x34\x03\xfc\xaf\x3e\x5d\x33\x4d\x4b\x8f\xfb\x6b\x5d\xfd\xe9\xdb\x71\x01\xb1\xff\xdd\xf5\xa4\xbd\xc1\x7b\xc5\xe6\x61\x27\xbd\xe1\xf5\x71\xb9\x5d\xd2\x70\xb5\xd5\x01\x6f\xf3\x9c\xcc\x34\xed\xdc\xfe\x51\x99\xdd\xe1\xc7\xc0\x23\x32\xfd\xcf\x23\xb7\xbd\x26\x93\x04\x45\x1d\xde\xa3\x32\x03\xf3\x60\xb7\xff\x0f\x3e\x2e\x23\x58\x85\xfc\xfb\x69\x3f\xee\x7d\x99\x20\xc5\xba\xaf\xcc\x04\xe8\x28\x69\x1e\x9b\xd9\xdd\x37\x8a\x83\x3e\xc7\xdb\x78\x01\xc0\xee\x01\x1b\xeb\x38\x41\xcf\x9a\x18\x5f\xe9\x7d\xec\x17\xf0\x1d\xdb\x43\xbc\x71\x12\xfa\x6a\x89\xc7\xf6\x8e\xb7\x38\xc2\x45\xb9\xcd\x13\x26\x38\x0f\x7e\x8f\xa3\xff\x79\x89\xfb\x74\x49\xed\xaa\xeb\xf9\x03\x3d\x89\x12\xfa\xc8\xc9\x7d\xeb\xf7\x47\xbd\x78\xf2\x6c\xe8\xc9\x93\x3b\x3f\x62\x12\x22\xe1\x9d\xd6\xf8\xa1\xad\xbe\x54\x90\x0e\x67\xc6\x2e\xb7\x61\x70\x68\x8b\x56\x90\xa1\x4f\xd0\xcd\x16\xbd\xf3\xd1\xac\x46\xd9\x93\x4e\x75\xcc\x9c\xe9\x7d\x15\xdd\xff\xc0\xb5\x12\xa3\x9f\xb8\x6e\xff\xc2\xd5\xf9\xaa\xb5\xbf\xeb\xb7\xf1\xd6\xbf\x03\x00\x00\xff\xff\x72\xa9\xb5\x86\x92\x5a\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 23186, mode: os.FileMode(420), modTime: time.Unix(1540341090, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

