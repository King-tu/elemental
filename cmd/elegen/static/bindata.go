// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x5d\x6b\xf3\x36\x14\xbe\xf7\xaf\x38\x0b\x61\xd8\xd0\xb8\x37\x63\x17\x1d\xb9\x28\xa5\x85\xc0\x52\x4a\x0a\xbb\x09\xbd\x50\x9d\x63\x47\x4c\x96\x8c\x24\xb7\x33\xc6\xff\x7d\xc8\x96\x3f\xe4\x7a\xa9\xd3\xb5\x7d\xe1\xcd\x55\x2c\x9d\x2f\x3d\xcf\xd1\x73\x94\x91\xe8\x6f\x92\x20\x94\x25\x84\x8f\xa8\xc3\x1b\xc1\x63\x9a\xe4\x92\x68\x2a\x78\x78\x4f\x52\x84\xaa\xf2\x3c\x9a\x66\x42\x6a\x58\x24\x22\x24\x99\x90\xa8\x45\x48\xc5\x25\x32\x4c\x91\x6b\xc2\x16\x9e\xf7\x42\x24\xf8\x1e\x00\x00\x3d\x20\xd7\x54\x17\xc6\x59\x6d\x49\x06\x6b\x48\x49\xb6\x57\x5a\x52\x9e\x3c\x75\x3e\xe1\xc6\xda\x41\x59\xbb\x99\x5f\x59\xae\x40\x12\x9e\x60\x53\xcc\x63\x86\x11\x8d\x69\x54\x17\xa3\x4c\x21\xbd\x21\xd0\x18\xd4\x51\xe4\xec\xb0\xc3\x84\x2a\x8d\xd2\xb1\x86\x10\x96\xe1\x43\xfe\xcc\x68\xb4\x15\x07\x74\x7d\x57\xb0\xec\x4b\x84\xab\x35\x84\xc6\x86\x85\xb7\xfd\xe2\x6a\xe0\xb0\x28\x4b\x6b\xb0\x43\xa5\xcd\x76\x55\x2d\xae\x4c\x0d\xc3\x30\x55\xd5\x1e\xe8\xc2\x49\x85\xfc\x30\xce\x3e\x58\xaa\x3c\x07\xb3\x88\x68\x4c\x84\xa4\x3f\x21\x70\x22\x97\x11\x7e\x09\x78\x84\x51\xa2\xbe\x10\xb1\xd5\x37\x42\x56\x96\xb6\xaa\x25\xbd\x80\x65\x7d\xb2\x81\xd3\x75\x73\x52\x70\x31\x6e\xed\x3e\x0f\xd8\x49\xac\x03\xcf\xbb\xbc\x84\xba\x90\xbf\x50\x2a\x73\x70\x89\x3a\x97\x5c\x81\x3e\x22\x44\xb9\x94\xc8\x35\xbc\xd8\x3d\x11\xd7\xcb\x69\x5d\xb8\x17\xe7\x3c\x72\x7c\xfd\x00\x62\x26\x88\xfe\xfd\x37\x28\x6d\x9c\x4e\x84\xae\x1f\x36\x1b\x1e\x8b\xb0\x4d\x53\x55\x86\x6a\x5d\x64\x36\xdc\x96\x70\x92\xa0\x04\xa5\x65\x1e\xe9\xb2\xf2\xea\xf0\x7e\xec\xec\x06\xd0\x9e\xfc\x4e\x8a\xd4\x80\xe1\x73\x83\x48\xd3\x1c\x01\x4c\x76\x47\x7d\x54\x5b\xcd\x58\xc7\xf6\xc6\xfd\xc9\x9b\x93\xed\xa6\xb9\xc6\x85\x6f\xef\x73\x71\x7e\x56\x47\x09\xf6\x6d\x9c\x79\xe9\xeb\x36\xf1\x9b\xa6\x98\x9d\xb8\xbf\x45\xfb\xfa\xef\xcc\x54\xbc\xf0\x09\xef\xcf\xe7\xd3\x89\x4c\x41\x9b\x8a\xc6\x40\x61\x0d\x71\xf8\x86\x1a\xc2\x8b\xe0\x0f\xf8\x85\x86\x1b\x75\x9b\x66\xba\xf0\x83\xc1\x5d\x6d\xa1\x71\x14\x73\x2a\x54\x87\xfb\xd9\xe1\xec\x9a\x1b\xce\xe2\xc8\x8b\xe0\x1d\x2c\x62\x4a\x9e\x19\xfa\x2d\x77\x93\x10\x8c\xd7\x1a\x9f\x16\x19\xf5\x4a\x75\x74\xec\xd8\xb7\xd5\x76\x6a\x70\x42\xa3\x3e\xac\x4f\x11\x51\xcd\xdc\x7f\x23\x48\xbd\x68\x5c\x8d\x41\xbb\xc7\xd7\xff\x70\xf1\x03\x6f\x42\x36\x46\x9f\x07\x8c\x49\xce\xf4\x9b\xb0\x9c\x32\xcb\xc6\x1c\xa0\x0d\x37\x8f\x75\xc3\x39\xbd\x77\x1a\xe1\x11\xc3\x96\xb2\x11\xe1\x4d\x37\x07\xf3\xf8\x56\x1f\x21\x5c\x7d\x1a\xe3\x5c\xe8\x96\x88\x8d\xda\x09\xa1\x7f\x4c\x47\xfc\x3a\xe5\xf0\xc0\x72\x49\x18\x54\xd5\x9f\x54\x19\x81\x7e\xbf\x33\xbe\xa4\x51\xd4\x59\x9d\xa2\x4e\xb6\x8a\x3a\xbb\x57\x76\xc8\x1a\xe2\x8e\x34\x53\xfe\x30\xab\xb3\xd3\x30\x24\xc7\x7a\x2c\xa7\x6c\x4c\x2e\xf3\xd2\x4e\xed\x04\x5c\x3b\x29\xcd\x24\x34\x23\xda\x6e\x0e\xa7\x73\x6d\x36\xa8\x60\x3b\x70\x6b\xa7\x73\xf3\xe5\x14\x3a\x34\xeb\xe7\x74\x9b\xbd\xf2\xea\x7c\xd7\x8c\x59\x60\x28\xaa\x2e\x2b\x61\x0c\xf0\x1f\xaa\x34\xe5\x49\xdb\xe5\x14\x95\x4d\xe6\xf8\xf8\x01\xec\xa7\x5f\x6b\x43\x40\xa6\x4c\xbe\xff\x3d\x77\xf2\x72\x9c\xf7\x78\xad\x2c\x7a\xf5\xdc\xbd\x13\xb2\x3b\xf7\x10\x42\x43\x9e\x1d\xcd\x10\x0b\x59\x7f\x27\xf4\x05\xfb\x97\x42\x87\xe8\x38\xce\x69\x79\xda\x3f\x35\xb7\xe1\x3d\x3d\x9a\x01\xeb\xf7\x0a\x4e\x5b\x78\xf9\x7f\x1f\xcb\x27\xd9\x9a\x23\x52\xee\xdb\xc1\x48\x53\xe5\xfd\x1b\x00\x00\xff\xff\xb6\x1f\x7f\xe7\x51\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3921, mode: os.FileMode(420), modTime: time.Unix(1533248747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x6f\x1b\x37\x12\x7f\xd7\x5f\xc1\x13\xdc\x56\x3a\xc8\xeb\x3c\xab\xe7\x02\x39\xc7\x2d\x8c\x8b\x1b\x23\x0e\xd2\x07\xc3\xa8\xe9\xdd\x91\xcc\x78\x45\x6e\xb8\x5c\xc5\x3e\x61\xff\xf7\x03\x3f\x97\xdc\x0f\x89\x4a\xed\xc2\x38\xd8\x0f\xad\x3d\x9c\xf9\xcd\x17\x39\x1c\x92\x9b\x02\xa7\xf7\x78\x09\x68\xb3\x41\xc9\x25\x88\xe4\x84\xd1\x05\x59\x56\x1c\x0b\xc2\x68\xf2\x3b\x5e\x01\xaa\xeb\xd1\x88\xac\x0a\xc6\x05\x9a\x8c\x10\x42\x68\xbc\x58\x89\xb1\xfe\xad\x7c\xa4\xe9\x78\xa4\x7f\x5f\xb2\x04\x17\x8c\x83\x60\x09\x61\x47\x90\xc3\x0a\xa8\xc0\xb9\xe6\xdc\x6c\x10\xc7\x74\x09\x28\xb9\x2c\x20\x4d\x3e\x3d\x16\x70\xc1\xd9\x9a\x64\xc0\x4b\x74\x58\xd7\x1a\x42\x5a\x81\xea\xda\x89\x00\xcd\xd4\x60\x1f\xc4\x67\x9c\x93\x4c\x99\xb9\x07\xd0\x74\x34\x3a\x3a\xd2\xce\x4a\x8c\x73\x96\x41\x9e\x9c\x52\x41\xc4\xa3\xf1\xf5\x8c\x66\xf0\x00\x25\xca\x49\x29\x4a\x24\xee\x00\x61\x21\x38\xb9\xad\x04\xa0\x94\xad\x0a\x56\xd1\x0c\x11\xcd\x94\x8c\xd6\x98\x47\xa1\x1d\xa3\xab\xeb\xab\xeb\x52\x70\x42\x97\x68\x63\xac\x3a\x34\xfe\x1c\x90\x19\x3a\x70\xd8\xf3\xe3\x00\xce\x22\x18\xcf\x3c\x29\x27\x61\x86\x2c\xbe\x86\x77\x61\xa8\xeb\xf1\x4c\x51\xea\x99\x43\x80\x46\xca\x04\xa7\xae\x47\xf5\x68\x34\xda\x6c\xd0\x41\x8e\x05\x94\xe2\x33\xf0\x92\x30\xda\x98\xf3\x5e\x91\xdf\xda\x60\x94\x96\x41\xa6\xc7\xa5\x46\xb9\x02\xb4\x5a\x49\xb9\xdb\x8a\xe4\xd9\x29\xad\x56\xa5\x86\x68\x43\xd7\xb5\x49\x86\x92\x50\x73\x02\xd5\x35\xe2\x50\x70\x28\x81\x9a\xf0\x17\xac\x2c\xc9\x6d\x0e\x68\x8d\xf3\x0a\x4a\xb4\x60\xdc\x4b\xc9\xd8\x89\x3b\xcb\x4c\xe8\xc7\xc9\x48\x48\xc4\x0e\xbe\x8e\xd2\x68\x94\x32\x5a\xda\x29\xed\x85\x95\xe2\x15\xcc\xd0\x81\xd2\x26\xbd\xd0\xc2\x9f\xb5\x72\x13\x34\x63\x36\xd5\x9a\xda\x16\x6b\x51\xc9\xa0\x7f\xab\xeb\xc4\x86\xda\x89\x74\xac\x3a\xd6\xae\x58\x89\x71\x2b\x39\xd3\x51\xf3\xfb\xce\x29\x9c\x81\xfa\xb3\x6d\x97\xa3\xb3\x85\xfa\x9b\xdd\x7e\x81\x54\x44\x4c\x62\x2b\x77\x8c\xdc\xaa\x4e\x1c\x51\x4f\x37\xc9\x3a\x6f\x26\x9d\x07\xf5\x11\x4a\x21\x47\xdd\x3c\x3c\xc1\x02\x96\x8c\x3f\xce\xfb\x58\x59\xc5\x53\x97\x41\xcd\x7f\xc1\xc9\x1a\x0b\x89\xde\x62\x37\x03\x75\x3d\xb3\x73\x97\x2c\x10\x65\x22\x5c\x3f\xe5\x47\xc6\x44\x33\xd7\xfa\xbd\xbc\xc8\x2b\x8e\x73\x54\xd7\xef\x49\x29\xfc\xb8\x61\x55\x08\x64\xc4\x76\xcb\xba\xf9\x16\xa3\xe3\xea\xfa\x9f\x83\x9c\x26\xc7\x5e\x1e\x45\xc5\xa9\x4e\x22\xe9\x4d\x62\x89\x08\x55\x7f\x4a\x6b\x93\xd1\xa2\xa2\x29\x9a\xb0\x48\x5b\xa6\x4e\xd3\x64\xda\x9f\x61\x95\x07\x6d\xc5\x30\x66\x33\x51\x46\xda\xfe\x13\x56\x34\xb6\x63\x54\x30\x42\x05\x70\x24\x18\xc2\x28\x95\x63\xd2\xe0\x38\x13\xf7\x77\x49\x2a\xef\x71\x67\x41\xf0\x6d\x0e\xa5\xf5\x49\x99\x31\x3f\x46\xb8\x28\x80\x66\x93\x38\xf0\x4d\x3d\x43\x2c\x49\x92\xa9\x1f\x96\x1f\x25\x94\x71\xfc\xad\x42\x33\xa0\x65\x90\x26\xc1\xf4\x9e\x82\x28\x7c\xd3\xda\x4d\x1e\x9f\x2b\x0e\xda\x96\x89\xd5\x9f\x24\x49\x7f\x48\x76\x86\x8a\x55\xe2\x2f\x46\x4a\x56\xee\x3f\x67\x32\x14\x12\x48\x97\x5b\x6b\x57\xb3\x69\x49\x3d\x4e\x0d\xab\x84\x12\x48\x26\xdb\x56\xcb\x54\xe3\xd7\xc1\x3c\x65\x95\x30\xe9\x50\xeb\x2d\x65\x74\x0d\x5c\xf8\xd9\x50\x33\x91\x0e\xf9\xfd\x7d\xe1\x96\xff\x1d\x9e\x76\xca\x92\x30\x9e\x5b\x38\x37\xb5\x1f\x36\x22\x60\xe5\xc5\x6d\x6b\xc4\x24\xef\xf6\x98\xbc\x83\x05\xae\x72\xf1\x81\x67\xc0\x83\xfa\x92\xe9\x01\xc4\xe4\x88\xec\x56\x16\x04\xf2\xac\xb4\xd3\x34\x65\x54\x00\xfd\x8e\xc0\xf8\x0a\x27\x53\xe4\x35\x43\xbe\x81\xdd\x1e\xa6\xd5\xf5\x7d\x30\x66\x35\x7d\x48\xbb\xab\xb0\x3d\xa0\xdb\x8b\xc2\xdd\x24\xdc\x56\x75\x88\x74\x48\x2c\x80\x1f\x8d\xb5\xa1\xfd\x55\xef\x0d\xf6\x64\x8a\x08\x15\x7d\x05\x15\x44\xf2\xf6\xe2\xec\x8c\x2e\x58\xe2\xb5\x47\xba\xb5\xb2\xdb\xfe\xae\x7d\xbf\xbd\xdf\xaf\x24\x8b\x34\x1d\xb7\xc5\xec\x9e\xbc\x7b\xd3\x32\x0d\x53\x95\x4a\xab\x5b\xb9\xd8\x9e\x83\xcd\x06\xad\xf0\x3d\x48\x26\xd5\x8b\x8f\xbc\xc6\x53\xb9\xaf\x54\x59\x09\x19\x96\x9b\x2f\x25\xa3\xf3\xf1\xe1\x18\xdd\xaa\x5f\xfe\x54\x0e\x98\x14\x8c\x6f\xb4\x94\x3c\x71\x24\xe7\x95\x80\x07\x93\xb6\xdf\xe1\xdb\x8e\xa0\xd8\x0d\x48\x96\xdc\xe1\x32\x22\xed\x52\x69\xdd\x01\x38\x99\x6e\x07\x69\x65\xf7\xc7\x6d\xbc\xcd\x34\xf7\x83\x31\xdf\x32\x25\x66\x23\x6f\x16\x07\x07\x08\xd9\x13\xcb\xfa\x50\x32\xee\x75\xe9\x68\xb2\x23\x57\xd3\x60\xc1\x48\x4c\xb2\x40\xe5\x1d\xab\xf2\xec\x0f\x4e\x04\x9c\x51\x22\x08\xce\xc9\x7f\x81\xa3\x03\xd3\xc6\x4b\x55\x7a\x59\xb5\xf2\x7e\x90\x5c\x54\xb7\x39\x49\xa5\x37\xa8\x05\x7b\x40\x28\x51\x15\xef\xdb\x36\xd8\xb6\x14\x59\x18\xc1\x80\xde\x47\x0b\x4e\x35\x71\x24\xbb\xf2\x7b\x1b\xad\xa1\x6e\xd9\x2e\xfd\xad\x93\xe0\x89\x5a\x2a\xd4\xe9\xa9\xec\x26\xd1\xaa\xda\xfa\xd8\x10\x58\xfa\x53\x89\x2a\x4a\xbe\x56\xb6\x65\x94\x32\x7b\x5a\x2f\x45\x26\x53\x14\x56\x6a\xdd\x66\x6b\x59\xcf\x1a\x3b\x8b\xec\x4e\x93\x38\x05\x0d\x53\x72\xa2\x37\x61\xc8\xec\x82\x73\x49\xc9\x4b\x68\x43\x8c\xc7\xed\xf3\xaa\x0e\xc1\x25\x08\x4f\x6f\x09\xe2\x79\x42\x10\xa8\x99\x90\xcc\x84\x61\x1a\x19\x87\xb8\x00\xa0\x63\x44\xb2\x7e\x37\xfb\xb6\xa3\x3b\xcc\xb3\x94\x65\x90\xb5\x37\x26\x55\x29\xa3\x5d\xfb\xfe\xdd\x68\x5b\xe7\x60\x0f\x4a\x03\x1d\x44\x94\x75\xca\xbc\x17\xde\x2a\xf8\x89\xd7\x0e\xbc\x83\x32\xe5\xa4\x10\xcd\xa5\xc6\x3b\x96\x86\x5d\x15\x4b\x2b\x55\x03\x14\x8f\xec\xe8\x9a\x59\x1a\x9b\xb5\x77\x2c\xed\x59\x8c\xaa\x44\xc2\xd7\x41\x7b\xc6\x57\x94\x65\x2c\xbd\x1e\xb7\x97\x97\x22\x5f\xea\xbb\x90\x60\x19\x86\x6c\x37\x32\x02\x65\xfa\x6f\x9c\xde\x0b\x92\xde\x97\x5b\x1c\xbf\xe9\x4e\x64\xaf\x7b\x51\x5e\xc6\xac\x3b\x65\x52\xc7\x53\x63\xce\x62\x25\x92\xcb\x82\x13\x2a\x16\x93\xf1\xbf\x7e\x28\xe7\x3f\x94\xbf\x8c\xe5\x21\xa3\xa9\xb7\x2a\x8b\x0d\x49\x17\xb1\xe9\xc8\xbf\xa6\xda\xd5\xbf\xe8\xf6\xc5\x6d\x84\xbf\x01\x05\x8e\x05\xfc\x06\x42\x1e\x60\x93\xce\x3e\x77\x74\x84\x7e\x03\x21\xfd\xea\x2c\x70\x7f\x16\xf4\x32\x98\x15\xcc\x21\x05\xb2\x6e\xd7\xa7\x83\x2d\x81\x1a\xd0\x38\x99\x86\x7a\xec\x05\x53\x18\x47\x5d\x9e\x3a\xf5\x38\x68\x38\xfb\x42\x70\xb9\x25\x04\x97\x03\x21\x70\x25\x7a\x49\xd6\x40\x9f\x38\x0a\x03\x4a\x27\xde\x72\xee\x8d\x87\xab\xe3\xfd\x91\x40\xc7\xc8\x43\x08\x66\x72\x78\x11\x67\xae\xa1\xd5\xfe\x43\x32\xd0\x8e\xa6\x15\xe7\x40\x05\x22\x74\xc1\xf8\x4a\x2f\xfa\x52\x30\x0e\x99\xac\xb8\xfa\x0a\x40\x77\xd5\x15\x87\xf8\xb2\x6d\x54\xc9\x96\x82\x73\xc6\xad\x07\xea\x8f\x32\x3c\x4c\x9e\x2a\xda\xc6\x2e\xe5\xaf\x15\xe1\x90\x9d\x6e\x63\xec\xbb\x63\xdf\xba\x42\x9a\x4d\x50\xdd\xb9\x7d\xe2\x98\x96\x44\x7a\x1d\x8c\x25\xa7\x0f\x05\x2b\xa1\x69\xfb\x0d\xf9\xa3\xb1\x29\xe4\x96\x85\x4c\x25\x68\xac\x57\xff\xd8\x0e\xcb\x31\xce\x43\xd3\x6d\x3c\x2c\x94\xa9\x1c\x61\x25\x1f\xc8\xef\xf4\x67\x85\xf7\x8f\x63\x44\x49\xee\x9d\xa5\x5b\xa1\x72\xc7\xea\x90\x3e\x93\xc2\xf6\x80\x1d\x6e\x13\xbd\xce\x08\xb2\x82\xbd\x5c\xf9\x44\x56\xf0\x12\x1d\x81\x07\x01\x9c\xe2\x7c\x2f\x67\x4e\x8d\xd0\x4b\x74\x88\x50\x01\x4b\xe0\x7b\xf9\x73\x46\xc5\x4b\x74\x65\x91\x33\x2c\xf6\x72\xe4\x57\x29\xf1\x42\x5c\xe9\x7a\x96\xbc\xcd\x73\xf6\x0d\xb2\x93\x3b\x46\xd2\xe6\xed\x65\x9b\x63\xba\x02\x9c\x51\x75\x0b\xd7\xf2\x4b\x17\x94\xc9\x80\x7b\xb3\xa6\x9f\x94\x72\x5f\x18\xa1\x1d\x03\x6e\xc6\x33\x34\xbe\x91\x68\xf5\x4c\xed\x0e\x6f\x2b\xc1\x96\x66\x63\xcc\xb6\x04\x09\x5a\xc1\x81\x3d\xf2\xdb\x18\x81\x79\x54\x0c\x2e\xb0\xdc\xa1\x69\x5c\x5a\x67\xaa\xbf\x6b\xeb\xb8\xd1\xee\x79\x25\xfa\x39\x3c\x5b\x0a\x94\x9c\xe3\x87\xf7\x40\x97\xe2\x0e\xbd\x89\xf1\xed\x1c\x3f\x90\x55\xb5\xd2\x22\xb1\x1e\x4a\x6a\xa3\x47\x52\x16\x38\x2f\xe1\xd9\x5c\x22\x74\x2f\x97\x08\xfd\x4e\x97\x9c\x9e\xe7\x77\x09\x3f\xa8\xf7\x4f\xf4\x26\x79\x33\xb4\x5f\xc7\x57\x1f\x93\xc4\x3d\x8a\x8f\xcb\xe1\x67\xf3\x3a\xfa\x74\xfe\x9a\x03\x4f\xac\xd1\xd1\xa5\x7f\x26\x1b\xbd\x49\xcb\xec\xe9\x53\xe7\x69\xd7\x44\x7c\xca\xac\xe9\x79\xba\x7f\xd6\xac\x15\xcf\x90\xb5\x48\x9b\xbf\x27\x69\x8d\xd5\x7f\x53\xd2\xdc\xfd\x6d\xd2\xf3\xa9\x07\x99\xa1\x03\xf5\xf8\xd3\xfb\xd5\x4b\x27\x12\x12\x6e\x65\xbd\x55\xae\x7b\x57\xb6\x8d\xff\x9a\x18\xbb\xd3\x47\xfb\x79\x38\xb0\xb5\x47\x44\x21\x70\x78\xed\x5c\x55\x96\xb5\xbe\x8b\x69\x02\xe1\x7f\x95\x71\x52\x95\x82\xad\xec\xfb\x5e\x83\x90\x74\x23\x34\x39\x50\xf7\x5c\x0d\xce\x39\x2e\x0a\x42\x97\x89\xf9\x3f\x1a\x37\x9f\x30\xb5\x8d\x99\xba\xe0\xb2\x27\x0e\x17\x59\xa0\x1c\x68\xab\x7d\x9a\xa2\x5f\xd0\x1b\x87\x6d\x4e\xf0\x21\x8b\x81\xf4\x31\xa0\x47\xd6\x49\x43\x47\xca\x5e\x0b\x91\xdc\xde\xb3\x16\x90\x92\x05\x49\x95\xd7\xbf\x32\xee\x0e\x83\xc1\x9d\x86\xa3\x06\xec\xee\x8a\x4b\x1f\xf9\x9b\xef\x75\xd4\xf7\x2f\xf7\xf0\x68\x0f\xbd\xbb\x2e\x83\x86\x6c\x98\x28\x20\x7b\x25\xdb\x2c\xfd\x01\x73\x36\x2e\x32\xeb\x19\x62\xf7\x66\x0a\x0c\x2a\x6e\xce\xbd\xe7\xb8\xb8\x92\xaa\xae\x7f\x96\x62\x9d\x30\xae\xfd\x08\x1e\x1d\xa1\x3f\x00\xa5\xac\xca\x33\x75\x24\x5e\x10\x9a\x21\x22\x66\xa8\x64\x28\x07\xf1\x53\x89\xd2\x3b\x48\xef\x11\x33\x9f\x6a\xb0\x6f\xc0\x51\x8a\x4b\x30\xdf\x93\x65\xa8\x2c\x20\x45\x2b\x5c\xc4\x3e\x0e\xbc\x97\x10\x27\xb8\x84\x1e\x83\xed\xb7\x08\xbd\x01\x29\x83\x1c\x2e\xaa\x3c\xf7\x72\x54\x86\x9c\x2b\x5c\x44\x66\x6b\x40\xd7\x64\x2a\x31\xae\x74\xb2\xae\x63\x73\x15\xe1\x7e\xe0\xf5\x68\xf7\x87\x51\x01\x7f\xe7\xb5\x14\x17\xea\xad\xd4\x85\x41\x4e\xe1\x6d\x68\xbb\x3f\x9c\x0a\xf5\x1d\xef\x13\x85\x4d\xbb\x24\xee\x75\x21\xe3\xbd\xdf\x39\x09\x69\x42\xeb\xda\x2e\xf8\x5c\xb2\xbd\x0f\x8c\xe7\x3b\x97\x95\x7f\xf5\x7e\x38\x78\x58\x91\x3f\x3e\x7d\xde\x3d\x73\xc8\x23\x47\x80\xd5\x7a\xb7\x0b\x0f\x62\xf3\x81\x03\xe2\x61\x5d\xef\x75\x88\x6b\x3a\x09\x27\x56\xbb\x2d\x69\xd6\xf5\xad\x75\xda\x6b\xac\xf3\x07\xe6\xbd\x27\xc3\xad\xde\x59\x05\xbd\xaf\x63\xf2\x27\x18\x98\x0f\xa4\x2b\x4e\x05\x07\x95\xb9\x0f\x34\x7f\x0c\x34\x78\x74\xed\x41\x8b\x33\x0a\x3d\x78\x1a\xf2\xc6\x7d\xba\x46\x6f\x71\xee\x83\x6e\xfb\xb2\x36\xba\xa2\x2b\x74\xf5\xc0\x1c\x70\x9b\x17\xe6\x24\x5e\x55\xc1\x21\x6d\xe7\xb9\xa1\x5a\x27\x3c\xae\x48\xdc\xe0\xa1\xa8\x01\x76\xe4\x79\xcf\x83\x4b\xeb\x95\x25\x4a\x93\x77\xeb\x6a\x87\x0c\x49\xdb\xde\x8c\x47\xc1\xfd\x4a\x72\x01\x1c\xdf\xe6\x41\xe4\x1b\xaa\x06\x0d\xb8\xe2\x70\x19\x07\xb2\xa4\xff\x81\x60\x36\x36\x54\x83\xeb\x73\x45\xe1\x9a\x97\x1a\x6f\x44\x53\x34\x9e\x1b\x8d\xc2\xf2\x1e\x77\xbd\xd1\x86\xaa\x31\x03\xae\x28\x5c\xff\x4e\xc2\x0d\x3a\xe2\xbc\x7b\x6f\x11\x09\xda\x59\x20\x96\x36\xef\x1c\xa3\xa3\x10\xbd\x7b\x86\x06\xd2\x12\xe7\xdd\xbb\x88\x48\xd0\xae\x99\x86\x36\xef\x9c\x1b\x63\x10\xdb\x35\xd3\x2b\x95\x7b\x55\x48\x55\x92\xda\x13\xdd\x11\xb5\x6d\x3e\x4f\x14\xe8\x05\x27\x2b\xcc\x1f\x5b\xd3\xbc\xa1\x6a\xd8\x80\x2b\x0a\xf7\x23\xe0\xac\x5d\xca\x2d\x6d\x6e\xee\xf0\x1c\x47\x24\x62\xf8\x2c\xa3\x11\x35\x6d\xde\xbe\x15\x8c\x42\xbc\xec\x2c\xc5\x4b\x6f\x29\x5e\xee\xb5\x14\x2f\xf5\x1b\x9a\x8f\xa5\x28\x06\xcb\x8e\xc6\x61\x55\xb7\xe6\x29\xb0\x01\xd3\x24\xfb\x61\xba\x63\x88\x9b\x39\x9d\x07\x30\xf9\xe3\x88\xda\x44\x9f\x27\x0e\xb4\x65\xa2\x67\xdf\x4e\xe3\x86\xfe\xc1\x47\xeb\x43\x93\xfd\x0f\x18\x7f\x43\xeb\x3c\xa0\xf8\x65\xf7\xd0\xfa\x44\x97\xbc\x36\xd0\xaf\x0d\xf4\x6b\x03\xfd\xda\x40\xa3\xd7\x06\xfa\xb5\x81\x7e\x6d\xa0\xd1\x6b\x03\xfd\xda\x40\xff\xbf\x36\xd0\xff\x0b\x00\x00\xff\xff\x49\x4d\x98\xfa\x40\x3f\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16192, mode: os.FileMode(420), modTime: time.Unix(1533322982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

