// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1543916004, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\xdc\x36\x92\xcf\x9a\x5f\x81\x9d\x52\xbc\x43\xef\x88\xf2\xf3\x64\xb5\x55\x3e\xc7\x49\xa9\xce\x4e\x54\x91\x2f\xfb\xe0\x72\xc5\x10\xd9\x1c\x21\xe6\x00\x34\x00\xca\xd6\x4d\xcd\x7f\xbf\xc2\x07\x09\x80\x1f\x33\xa0\x2c\xf9\x74\x75\xf2\x43\x32\xc2\x47\xa3\xbf\xd0\xe8\x6e\x80\x5d\xe1\xec\x13\x5e\x03\xda\x6e\x51\x7a\x09\x32\x7d\xc5\x68\x41\xd6\x35\xc7\x92\x30\x9a\xfe\x8a\x37\x80\x76\xbb\xd9\x8c\x6c\x2a\xc6\x25\x5a\xcc\x10\x42\x68\x5e\x6c\xe4\xdc\xfc\x12\xb7\x34\xb3\x3f\xd7\x2c\xc5\x15\xe3\x20\x59\x4a\xd8\x29\x94\xb0\x01\x2a\x71\xd9\xf4\x12\x79\x5d\x5f\xa5\x19\xdb\x9c\x6e\x88\xcc\xae\xa1\x2c\xaf\x4f\x33\x56\xdd\x0a\xc9\xeb\x4c\xd6\x1c\xcc\xc0\xed\xf6\x04\x71\x4c\xd7\x80\xd2\xcb\x0a\xb2\xf4\xdd\x6d\x05\x17\x9c\xdd\x90\x1c\xb8\x50\xa8\x68\x68\x0a\x5b\xb4\xdb\xb9\x29\x40\x73\x74\x62\x7b\xbb\x20\xfe\xc0\x25\xc9\x35\x3d\x91\x80\x76\xbb\x59\x32\x9b\x6d\xb7\xe8\xb8\xc4\x12\x84\xfc\x03\xb8\x20\x8c\xa2\xd5\x99\x85\xf8\x46\x37\xbf\x94\x92\x93\xab\x5a\x82\x68\x06\x28\x4e\x6d\xb7\x76\xf1\x63\xb2\x44\xc7\x40\xeb\x8d\x9a\x77\x55\x93\x32\x7f\x4d\xeb\x8d\x30\x20\xba\xa0\x77\xbb\xd9\xe9\xa9\x12\x82\x9e\xa1\xa9\x46\xbb\x1d\xe2\x50\x71\x10\x40\xa5\x40\xf2\x1a\x50\xc5\x84\x20\x57\x25\xa0\x1b\x5c\xd6\x20\x50\xc1\x38\xc2\x0d\x16\x9a\x18\x33\xbd\xc5\xcc\xca\x6f\x9e\xce\xa4\x82\xd8\x83\x2f\x24\x27\x74\x3d\x9b\x65\x8c\x8a\x46\xba\x8e\x7d\xc7\x14\x6f\x60\x89\x8e\xf5\x6a\x8a\x0a\x33\xf9\x0f\xb3\xb8\x65\xa1\x45\x9b\x9a\x95\xba\x18\x9b\xa9\x6a\x80\xf9\xb5\xdb\xa5\x76\x11\x37\xa5\x87\xd5\x99\x21\xa5\x99\xd1\x08\xc7\xc9\xc6\xfd\x9e\x29\x6c\x49\x81\x28\x93\x56\x36\x6f\x59\x0e\x65\xfa\x13\x48\x9c\x5d\x43\xee\x18\xeb\xf7\xbe\xa6\x92\xc8\x5b\xcb\x9c\xf3\x1c\xf4\x9f\x5d\xd4\xdb\x76\x56\xe8\xbf\xd9\xd5\x5f\x90\xc9\x74\x76\x83\x79\x1c\xbc\x33\xd4\x6e\x82\xb4\x6d\xdc\x6a\x62\xd4\xd0\x15\x6a\x35\xd0\x03\xf5\x3b\x08\xa9\x7a\x77\xbb\xf9\x52\x0f\x7d\x85\x25\xac\x19\xbf\x5d\x0d\x0d\x65\x35\xcf\x5a\x21\x9b\xf1\x17\x66\x43\xaf\xfa\xa0\x6d\x8f\x1b\xc9\xc9\x0d\x96\x6a\x64\x77\xa0\xe9\xd8\xed\x96\xb3\xdd\x44\x5e\x6f\xb7\x43\x23\xce\xc5\xef\x8c\xc9\x43\xb2\xb8\x28\x6b\x8e\x4b\xb4\xdb\xbd\x21\x42\xfa\xd2\xc0\xa8\x54\x2d\xac\x88\x98\xdb\x2a\x7a\xcc\x1a\xef\x3f\x3c\x1f\x1d\xa9\x08\x3e\x3d\x45\x9e\x76\xc8\x9a\x53\xa3\x1a\x64\x50\x35\x04\x22\x54\xff\xa9\xb0\x4d\x67\x45\x4d\x33\xb4\x60\x91\xb8\x24\xed\x4a\x8b\x64\x58\x6f\xb4\xcc\x0c\x16\xe3\x30\x9d\xfa\xcd\x0c\xfe\xaf\x58\xe5\x70\xc7\xa8\x62\x84\x4a\xe0\x48\x32\x84\x91\x32\xbf\x1a\xe1\x38\x14\xa7\x93\xa4\x16\x1f\x20\xa7\x20\xf8\xaa\x04\xd1\xd0\xa4\xd1\x58\x9d\x21\x5c\x55\x40\xf3\x45\x1c\xf0\xed\x6e\x89\x58\x9a\xa6\x89\xcf\x96\x67\x0a\x94\x25\xfc\xa5\x86\x66\x81\x8a\x40\x4c\x92\xe9\x3f\x31\xa2\xf0\xc5\xac\x6e\xe5\xf8\x50\x7c\x30\xb8\x2c\x9a\xf5\xd3\x34\x1d\x66\xc9\x41\x56\xb1\x5a\x7e\x23\xa7\xd4\x91\xf1\xe7\x52\xb1\x42\x01\x32\x76\xbe\xc1\xcb\xd8\xa6\x66\x9d\x76\x19\x56\x4b\x3d\x21\x5d\xec\xdb\x2d\x89\x81\xbf\x0b\xf4\x94\xd5\xd2\x8a\x43\xef\xb7\x8c\xd1\x1b\xe0\xd2\x97\x86\xd6\x44\x3a\x46\xf7\xdd\xd8\xad\xfe\x3b\xae\x76\x1a\x93\x90\x9f\x1b\xfc\x09\x16\x7b\x86\x2f\x51\x09\x74\xc1\x12\xc7\x42\xa2\xa6\xbd\xf8\x11\x11\xf4\x4f\xdb\xf7\x23\x22\xff\xf8\x47\xc8\xc2\xf7\xe4\x03\x3a\x43\xec\x3d\xf9\xb0\x97\x35\x3f\x41\x81\xeb\x52\xfe\xc6\x73\xe0\x81\x99\xc9\x4d\x07\x62\xaa\x87\xd0\x35\x2a\x08\x94\xb9\x68\xb4\x35\x63\x54\x02\xbd\x03\x7f\xfc\x05\x17\x09\x7a\xff\xc1\xb8\x01\x1d\x1b\xd3\x34\x3b\x92\x5a\xd7\xc6\xac\xf2\x9b\x45\xcb\xf9\x41\x5d\xaf\xa6\xf1\xc8\xda\x83\x2e\x3c\xaa\xc2\x63\xdd\xb0\xc8\xb0\xe4\x1d\xbb\xac\x30\x17\x10\xb0\x23\xd2\xa8\x5b\x25\x83\x5c\xa9\x96\x01\x13\xbb\xaf\x4f\x4f\xd1\x6f\x7d\x53\x8e\xbe\x90\xb2\x44\x8c\x96\xb7\x9a\xe5\xd8\x76\xad\xc9\x0d\x50\x2b\x92\x14\xfd\xca\xcc\x4f\xb4\x01\x4c\x05\x52\x0a\xc4\xc1\x36\x09\xb8\x83\x90\x1a\x16\x2c\xac\xd0\xd3\x34\x35\xf2\x78\x54\x8a\x9d\x76\xd0\x6c\xed\xcc\x98\xb2\x37\xaa\xe1\x0b\xf6\xc6\xb6\x7d\xab\x5e\x5b\xd8\x8b\x04\x11\x2a\x87\x4e\x4c\x90\xe9\xcb\x8b\xf3\x73\x5a\xb0\xd4\x73\xbc\x8d\xd3\x6e\xb5\xd0\x8b\x01\x0e\x39\x8e\x5d\x87\x71\xa3\x86\x28\x22\x70\x77\x5a\xe3\xd4\x1d\xf6\x4f\xac\x53\x5e\x67\x0a\xff\xce\x7e\xdb\xbf\xcf\xb6\x5b\x1d\x0a\xbc\x63\x3f\x6b\x9d\x3b\x56\xd4\xa2\x02\x97\x02\x74\x84\x13\x10\xa6\xf8\xa2\x57\x6e\x00\x28\x7e\x7d\xfc\x4b\x30\xba\x9a\x9f\xcc\xd1\x95\xfe\xf1\xa7\xa6\xc7\xca\x66\xfe\xd1\xcc\x52\xf1\x5e\xfa\xb6\x96\xf0\xb5\x37\xfe\x64\xfe\xd1\xca\xf8\x57\xf8\x72\x80\x6f\x8d\x3b\xa2\x0e\xe0\xf1\x43\x45\xe1\xaa\x75\xe0\x00\xc0\x45\xb2\x1f\x48\x47\x15\x9e\xed\x1b\xeb\xf4\xdc\x67\xd0\x6a\x8f\xfe\x2c\x67\x9e\x31\x3b\xf1\x83\x3f\x25\x0f\xb5\x9d\x04\xe3\x5e\xb0\x88\x16\x07\xc4\x99\x04\x76\xd3\x3a\xdd\xe2\x9a\xd5\x65\xfe\x6f\x4e\x24\x9c\x53\x22\x09\x2e\xc9\x7f\x03\x57\x62\xd6\xd1\xa4\x5a\xca\x58\xd7\x8e\x6a\x1c\xa7\x17\xf5\x55\x49\x32\x45\x0d\xea\x80\x3d\x26\x94\x68\x33\xf1\x65\x00\x2c\xc8\x00\x78\x77\x2e\x29\xec\xf4\xa0\x7d\xa8\xed\xc4\x37\xf0\x71\x4d\x76\x4f\xc6\x44\x76\x83\xfe\xf9\x58\xe8\xd6\x18\x94\xbd\xda\x72\x4f\x9e\x38\x0a\x5c\x71\x7f\xf7\x4d\x21\xac\x20\x1d\x9f\xc0\x04\xc5\x01\x5d\x7f\x17\xa8\xa6\xe4\x73\xdd\xc4\x25\x6a\xce\x44\x5a\xd5\x94\x45\x82\x42\x3f\xc0\xc4\x72\x66\xae\x87\x4d\xa3\x9c\x8d\x69\x4f\xdb\x05\xdc\xa0\xf4\x55\x73\x08\x37\xfb\xb8\x95\xb2\x32\x48\x1d\x10\xf3\x5e\xfa\xe5\x2e\x0c\xbb\x04\xe9\x61\x29\x40\x3e\x0c\xc3\x82\x65\x16\x24\x47\xcd\xa9\x1c\xc7\xb5\x38\x76\xa1\x33\x44\xf2\xfb\x60\xca\xd0\x71\x7b\x8d\x79\x9e\xb1\x1c\xf2\xee\xc1\xab\x0d\x7e\x34\x23\xee\x7c\xda\x4e\xa7\x62\xd4\x43\x6e\xf2\x02\x23\x9e\x72\x14\x2d\x9a\x98\xc7\xed\x12\x4f\xe4\x98\xaf\x82\x4d\xaf\xc8\x38\xa9\xa4\x4b\x35\xfe\xc4\xb2\x30\xd6\x60\x59\xad\x2d\x9d\x1e\xa3\x3c\x41\xb7\x5f\x62\x35\xe2\x27\x96\x0d\x18\x11\x8d\x2e\x7c\x1e\xc5\x67\xfe\x9e\xb2\x9c\x65\x1f\xe6\x5d\xb3\xa0\x9b\x2f\x4d\x86\x32\x30\x1f\xe1\xb0\x8f\x8a\x5f\x22\xfb\x0f\x9c\x7d\x92\x24\xfb\x24\xf6\x10\xfe\x71\x68\x4b\x0d\x79\x7e\x11\x4c\x8e\x35\x17\x1a\xff\x1e\x5b\x2c\xee\xc5\x46\xa6\x97\x15\x27\x54\x16\x8b\xf9\x3f\x7f\x10\xab\x1f\xc4\xbf\xe6\x2a\x5c\x77\x47\x90\x56\x10\xd7\x64\x2c\x75\xd2\x53\x8a\x48\x4f\xb1\xd5\x0e\xe3\x4f\xfc\x02\x14\x38\x96\xf0\x0b\x48\x09\x1c\xa5\x3d\x77\xe1\xf4\x14\xfd\x02\x52\x91\xd8\x33\x51\xdd\xd0\xac\x37\xc0\x5a\x15\x0e\x19\x90\x9b\xae\x85\x3d\xde\xc3\xb3\x91\x15\x17\x49\xb8\x4e\x93\x2e\x0e\x59\x6a\x0c\x6c\xef\xfc\xe9\x38\xf9\x7d\x16\x5c\xee\x61\xc1\xe5\x08\x0b\xda\x43\xa6\xe2\xac\x02\xae\x9c\x83\x08\x46\xa0\x5a\x28\x4d\x70\x31\xa4\x3e\xa2\xe2\xd9\x33\x82\xcd\xc2\xb3\x26\x83\x8c\x6a\x8f\xa8\x61\x16\xa1\x33\xe4\x41\xe8\x6c\x8d\xee\xce\xc0\x34\x47\x8b\xb1\xed\x91\xf4\xbb\x4c\x06\x38\xb1\xfc\x1c\x0c\xef\x85\x69\x1a\x3e\x93\xd4\xa4\xeb\x66\x3c\xe4\x4d\xf2\xe8\x5e\x23\xf3\x03\x3b\x39\x2a\x20\x37\x43\xfc\x38\xbb\x61\x3a\x29\x74\x3c\x6d\x26\x27\xe8\xec\x0c\xbd\xf0\x82\xea\xd3\x53\x44\x59\x49\xa8\x5c\xa1\x35\x33\x97\x6d\xa2\xed\x6c\xe2\x96\x03\xc9\x0c\xb3\x17\x90\xf7\xaf\x7b\x13\xb6\xd7\x2e\x84\x13\xfb\xfa\xb1\x42\xcf\x86\x15\x67\xd9\x5b\xb3\xe3\xdd\xef\xfc\x8c\x80\xa8\x54\xc4\x11\x45\xcb\xce\xcf\x58\x16\x2e\x5f\x69\x05\xe0\x68\x15\x5f\x88\xcc\xae\x51\x71\x5f\xe4\x67\x58\x40\x78\x3a\xaf\x82\x7e\x43\x47\x9f\x19\x7a\x13\x3d\x5b\x0c\xb3\x29\x99\xc4\x26\x2b\x73\x51\xd9\x98\xfa\x02\x2b\x0a\x71\x55\x95\x26\x65\x4f\x19\x45\x94\x94\xce\xbd\xc5\xe8\x79\x04\x4f\x6d\xea\x7b\x62\x40\xa4\x17\x5f\xd8\x0d\xba\x4f\xd9\x13\xff\xd8\xd7\x71\xa3\x70\xb7\xa6\x07\xd9\xdf\xc4\x95\x66\x9e\x6d\x24\x05\xfa\x9b\x59\xd9\x3f\x14\xcf\xc5\xeb\xcf\x35\x2e\x17\xfe\x49\x99\x78\xe2\xaf\x30\x25\xd9\x62\x9e\x61\xaa\x2c\x51\xa5\x99\x57\x70\xb6\x41\x18\x19\x2a\xbe\x10\x79\x8d\x72\x52\x14\xc0\x81\xca\xf6\x46\x67\x1e\x64\xaf\x04\xd3\xe1\xbb\x59\x7d\x11\xc1\xdf\x64\xd6\xbd\x42\xed\xd2\x22\x46\x8c\xef\xdf\xce\xb4\x38\xbd\x34\xdb\x98\x91\x7e\x3e\x02\x62\xd6\xea\x50\xa8\x5b\xa3\x11\x84\x76\xac\xa1\xea\xdc\x10\xe5\x00\x95\xb9\x14\x21\x07\x2e\x45\xf4\x65\x6e\xac\x6b\x68\x17\x8a\x4d\xd5\x90\x02\x31\x65\x23\x0d\x4f\x8e\x8e\x1a\x97\x90\x94\xb3\xa3\xdd\x6c\x76\x64\xf3\x9b\xfb\x53\x39\xbb\xd9\x11\x4b\x9b\x95\xcf\xa9\x64\x0b\x56\xcb\x64\x36\x3b\x1a\x48\xc1\xbb\x41\x8a\x78\x02\x22\x3c\xb2\x09\xb5\x3b\xc7\x9c\x2d\x7b\x69\x98\xcc\x94\x06\xb5\x43\xe3\xb7\xb3\xd9\x91\xc4\x7c\x0d\x72\x89\x80\xeb\xd4\x52\xf0\x82\x22\xd5\x1c\x66\xc9\xec\x48\x79\xdc\x9c\x3b\xa5\x3a\x3a\x32\x1b\x22\xf0\x37\xff\x8b\xea\xf3\x49\x32\x2d\x73\x2d\xf2\x7d\xeb\xaf\xd0\x0f\x62\xae\x17\x4e\x12\x23\x84\xe7\xe6\x9a\xe8\xb9\xc1\x69\xdf\xf5\x90\xde\x1a\x36\x01\x6c\x5e\x63\xe8\xc0\x9c\xe4\x96\xcf\x59\xcd\xcd\x36\xa4\x05\xe3\x1b\x13\x83\x08\xc9\x38\xe4\x8e\xf3\x8e\xcc\xe8\x08\xd5\x2e\xb5\x48\x14\xd6\x8c\x37\xca\xa5\xff\xd0\x86\xc9\xd9\xb2\xd7\xba\x6d\xdb\x44\x16\x9f\x6b\xc2\x21\x7f\xbd\x6f\x60\x13\xed\x4f\x3a\x61\xbc\xfb\xf1\x77\x1c\x53\x41\x14\xd5\x41\x5f\xfa\xfa\x6b\xc5\x04\xb8\x44\xad\x6d\xfe\xdd\xe2\x14\x8e\x56\x71\x95\x76\xef\xe6\xc6\x17\x99\x7b\xa6\xc6\xaa\x88\x43\xbd\xe1\x47\x03\xca\xc6\x26\x61\x18\x3a\x62\x78\x92\x1f\x43\x8d\x72\xbe\x49\xc0\xaa\xf6\xd2\x30\x6c\x37\x6a\xe3\x2c\x94\x17\xe3\x0e\x12\x23\xc9\x06\x26\x91\xf2\x8e\x6c\xe0\xf1\x10\xc2\x38\x5a\x38\x62\xe0\xab\x04\x4e\x71\x39\x4f\xfc\xd6\x92\x08\x39\x4f\x26\x90\xf8\xda\x82\x79\x3c\x64\x3a\x62\x08\x95\xb0\x06\x3e\x49\x64\xe7\x54\x3e\x46\x52\x8a\x92\x61\x39\x89\x90\x9f\xd5\x8c\x47\x42\xca\x3e\xca\x38\x14\x03\x74\x0d\x23\x9a\x3a\xdb\x39\x82\x32\x74\x50\x85\x3b\xef\x0f\x0e\xc5\x1b\xbd\x19\x3a\x8d\x6f\x71\x35\x4f\x1a\x84\x6d\x14\x20\xea\x2b\xef\xdd\xc2\xb0\x8b\xe4\x70\x74\x54\x8a\xfa\xea\x30\x49\x51\x64\xf9\x9e\xfa\x28\x81\xe9\xcb\xb2\x64\x5f\x20\x7f\x75\xcd\x48\x06\x22\x46\x9b\x8c\x31\x3e\xa7\xfa\xf1\x42\x47\x99\x8c\x6d\x1f\x8b\x2b\x96\x2e\x2f\xa9\xe6\xfd\xc5\x08\xed\x21\xf0\x71\xbe\x44\xf3\x8f\x0a\xda\x6e\xa9\x4f\xf9\x97\xb5\x64\x6b\x9b\xfa\xc8\xf7\x68\xe6\xb7\x88\xd9\x21\x81\x79\x14\x0f\x2e\xb0\x54\x36\x2e\x6e\x2f\x2d\x75\xe6\xaf\xbb\xc6\xc7\x81\xe6\xb7\x20\x04\x5e\x83\xe9\x55\x9d\xde\x59\xfa\x10\x74\xaf\x25\x4a\xdf\xe2\xaf\x6f\x80\xae\xe5\x35\x7a\x11\x43\xf9\x5b\xfc\x95\x6c\xea\x8d\x99\x12\x4b\xbf\x6a\x75\xeb\xa8\x16\x7d\xdf\xfb\x60\x24\x11\x3a\x89\x24\x42\xef\x48\x52\xbb\xce\xc3\x93\x84\xbf\xea\xd7\xac\xe8\x45\xfa\x62\xcc\xb1\x8a\x3f\x10\xac\x10\x27\x9c\x07\xad\x0c\xff\xb0\x6f\x5d\xef\x8f\x5e\x9b\x28\x8f\x45\x3a\xfa\x34\x5e\x2a\x8f\x7c\xd1\x41\x3b\xb9\x6f\x39\x1d\x52\xc4\xfb\x94\x9a\xd1\xd3\xe9\x52\x6b\xb0\x78\x00\xa9\x45\xe2\x7c\x17\xa1\x39\xac\xbf\x93\xd0\xda\x67\x10\x29\xea\x3d\xd0\xd7\xcf\x24\xf4\x03\xf9\x7d\xaf\xf4\x1d\x27\x14\xb8\x4d\x43\xad\x26\xdd\x7b\xf9\xe0\xe8\x37\x8d\xb1\xce\x57\x34\x9d\x27\x23\xde\x56\x04\x17\x02\x82\x6f\x5a\x52\x35\x66\x6d\x82\xcc\x04\xb1\x8e\x11\xfe\x1b\xfb\x57\xb5\x90\x6c\xd3\xe4\xbd\x1d\x84\xd4\xa5\xdb\x36\xb8\xaa\x08\x5d\xeb\x87\xfa\xfa\xf6\xd5\x41\x7a\x6b\xba\x52\xfb\x7f\x34\x77\x9f\x67\xf4\xd0\xe9\x24\xe3\x1a\xa8\xc3\xb2\xb0\x70\x1b\x89\xb0\x31\x1e\xdb\x0c\xad\x26\x16\x38\x4f\x17\xf2\xb6\x02\x3f\x61\xa7\x53\xae\xdd\x28\x7b\x15\xe7\x9a\xb5\x8f\xce\xc6\x00\x45\xc2\x71\x40\xec\x7d\xf2\xe4\x79\xbb\x61\x7d\x19\x52\x1f\x7b\x1f\x10\x7a\xf8\x09\xfa\x97\x77\x2d\x60\xd3\x54\xe1\x10\x3f\x3f\x69\x61\xc0\xc0\xdc\x76\x36\xf4\x66\x79\xb9\xb4\xf8\xc7\x15\x15\x64\xa4\x20\x99\x56\x93\x9f\x19\x6f\x13\x1d\xc1\x15\x4e\xdb\x1a\x0c\x6f\x6f\x93\x4d\xee\xcc\x7d\xb0\xa2\x3f\x00\xf9\x04\xb7\x4d\x42\xe7\xd0\x55\xea\x18\x0e\x0b\x0d\xa8\x7f\x19\x33\x82\x8e\x4b\x31\xde\x2c\x11\xfb\x64\x75\x79\x74\x61\x97\xd3\x79\x8b\xab\xf7\x6a\xa9\x0f\x3f\xaa\x69\x3d\x4e\xdf\xf8\x4c\x3e\x3d\x45\xff\x06\x94\xb1\xba\xcc\x35\x6f\x0b\x42\x73\x44\xe4\x12\x09\x86\x4a\x90\x7f\x17\x28\xbb\x86\xec\x13\x62\xf6\x9d\x29\xfb\x02\xdc\xe8\x2e\xa1\x39\x7c\x85\x1c\x89\x0a\x32\xb4\xc1\x95\x2f\xb3\x7d\x78\xbe\x51\x20\x5e\x61\x01\x03\x08\x37\x6f\xe2\x07\x19\x22\x02\x19\x16\x75\x59\x7a\x32\x12\xe1\xc8\x0d\xae\x22\xa5\x35\xb2\xd6\x22\x51\x30\xde\x1b\x61\x7d\x88\x95\x55\x04\xf9\x01\xd5\x2e\xd7\x58\xc3\xa8\xb6\x9a\xab\x93\x11\xe5\xb4\x57\x8e\x44\x20\x22\x10\x46\x37\xc0\x6f\x11\xce\x6f\x30\xcd\x20\x47\x8a\x01\x1a\x3d\x79\x8d\x25\xba\x65\xb5\xbd\x4b\xd6\x92\xa6\x00\x39\xba\xaa\x25\x22\x14\x09\xb6\x01\x05\x48\x4f\x6f\x58\x89\x6a\x01\x5a\xd4\x71\xef\x53\x6c\x26\x33\x24\x24\x54\x79\xfd\x4d\x47\x81\x33\xd8\xb6\x09\x74\x6b\x70\xf5\xb0\x6d\xe7\x10\x8a\xcc\x55\xee\xbb\x05\xdb\x7f\xd9\x3e\x60\xfe\x06\x6d\xcf\x81\x07\xb6\x81\x48\x7b\xaf\x6d\x71\xa5\xaf\xbd\x5a\xd1\x2a\x41\xee\x4f\xcb\x1f\xfa\x72\x2b\x5c\xef\x6c\x8a\xa2\x6e\xbb\x07\xfd\xa4\x7c\xb0\xf7\xb8\xb3\x9d\xa1\x50\xe8\x3c\x46\x38\xf1\xbf\x5a\xec\x32\x7d\xbe\x3a\x68\xf9\xfc\x67\x4b\x27\xa3\x01\xba\xfa\xe7\xb7\xaf\xfa\x01\xb5\x0a\xa4\x03\x58\x9d\x9b\xcc\x30\xf9\xb0\x1a\x49\x8a\x9c\xec\x76\x93\x12\x17\xce\x3f\x6e\xa7\xed\x5a\x47\x6b\xd9\xa7\xad\x93\xe1\x70\xd8\xf9\x1d\xab\xc1\x6c\xc8\x5e\xea\x9a\x05\x06\xd5\x5e\xfd\x0b\x3a\x56\x23\xe2\x8a\x5b\x82\x83\x96\xdc\x6f\xb4\xbc\x0d\x56\xf0\xda\x0d\x05\x9d\x91\x51\xd0\x83\x67\x75\x5e\xbf\xdf\x6e\xa0\x77\x46\x4e\x81\xde\x44\x1b\x5d\xe8\xba\x5d\x43\xd7\xaf\x8f\x83\xd1\xc1\xf3\xe3\x34\x7e\xc1\x8a\x43\xd6\x95\xb6\x6b\x6d\x48\xf1\x46\x45\xc2\x0d\x1e\xcf\x39\xc0\x6d\xf3\x6a\xe0\x11\x5a\xe7\xe5\x59\xd4\x4a\xde\xd5\x4f\xd3\x65\x9b\x0c\xee\xae\x3f\x0a\xdc\xcf\xa4\x94\xc0\xf5\x25\x9f\xd7\xeb\x5a\x0d\xd0\x60\x54\x1c\x5c\xc6\x81\xac\xe9\x7f\x42\xa0\x93\xae\xd5\xc2\xf5\x47\x45\xc1\xb5\xaf\xd0\xbc\x1e\xd3\x62\xe0\xb5\xbd\x51\xb0\xbc\xa7\xb7\x5e\xaf\x6b\x35\x30\x83\x51\x51\x70\xfd\x7c\x5b\xdb\xd9\x36\xae\xfa\x39\xb9\x48\xa0\xbd\x6d\xd2\xb4\xad\x7a\x29\xa2\x28\x88\x5e\x0e\xcd\x81\x6c\x1a\x57\xfd\x3c\x5b\x24\xd0\x3e\x9a\xb6\x6d\xd5\xcb\x89\xc4\x40\xec\x5a\x4e\xcf\x60\x4e\xb2\x93\xda\x30\x75\x15\xbd\x6d\x34\xb8\xf9\x63\xa2\x80\x5e\x70\xb2\xc1\xfc\xb6\xa3\xe6\xae\xd5\x80\x0d\x46\x45\xc1\xfd\x1d\x70\xde\x35\xe8\x4d\xdb\xca\xe6\xa7\xdb\x11\x91\x10\xc3\xbb\x61\x03\xd1\xb4\xad\xba\x19\xef\x28\x88\x97\x90\x71\x08\x3e\xe4\x30\x2d\xcd\x87\x30\xb6\x37\x12\x56\x77\x5b\x5f\x7a\xdb\xfa\x72\xd2\xb6\xbe\x34\x8f\x02\x7c\x58\xba\xc5\xc2\x6a\x7a\xe3\x60\xd5\x57\xf6\x65\xa4\x03\x66\x9a\x9a\x6f\xed\xdb\x01\x71\x5a\xd8\xbb\xd1\x57\xff\xda\x46\x83\xa2\x3f\x26\x0e\x68\x07\x45\x0f\xbf\x83\xc8\xd9\x15\xc6\x33\x11\x87\x7d\xf0\xe1\xa8\xf2\x3b\x38\xe3\x23\x0b\x3f\x6e\xaf\xdc\x84\xf1\xe9\x93\x4b\xfe\xe4\x92\x3f\xb9\xe4\x4f\x2e\xf9\x93\x4b\x8e\x9e\x5c\xf2\x27\x97\xfc\xc9\x25\x6f\x20\x3e\xb9\xe4\x4f\x2e\xf9\x41\x97\x7c\xdb\xff\x10\xf1\x1b\x3e\xb7\x32\xb7\x77\xf1\x55\x50\x86\x0b\x6f\xc5\x42\x30\xe5\x2d\x26\xad\xf7\xfe\xc3\xa1\x0f\x2b\xee\xad\x14\xd7\x14\xbc\xfe\x57\x0b\x72\x4d\x2b\x5b\x73\x37\xf2\xee\x54\x9c\x6b\xca\x12\x0f\x52\xa2\xeb\x7b\x70\xe6\x81\xca\x75\xdd\x9d\x77\xdf\x56\xb4\xeb\xe0\xee\xfa\x0e\xa5\xbb\xa6\x09\xe0\xff\x6b\x01\xaf\x69\x5c\x7a\xdc\x35\x0b\xcc\x77\xbe\x17\x25\x26\x61\xf5\x89\x49\x67\x43\x50\xcb\xeb\x61\x37\xbd\xc5\xf5\x71\xa9\x5d\xda\x62\xb5\x57\x01\xef\x52\x54\x6b\x1a\x77\xee\x5e\x5a\xeb\xb0\xfb\x31\x50\x4a\xab\xff\x2d\xf8\xbe\x9a\x5a\x69\x94\xd7\x11\x94\xd6\x1a\xd8\x07\x87\xf5\x7f\xb0\xc4\x96\xe4\x35\x84\x4f\x1b\xbf\x5f\x95\xad\x28\xc6\xfa\xb5\xb6\x22\x78\x94\xb6\x25\xb7\x0e\x8f\x5d\x24\x51\x1f\x1d\x6f\x03\x07\xe0\xf0\x84\x6d\xa3\x38\x51\xc5\x9d\xac\xae\xf4\x3e\x69\x8e\xf8\x5a\xf7\x21\x2a\x3d\xc5\xd6\x6e\x0a\xd0\x3e\x50\x91\x28\x9e\x94\xbb\x14\x72\x22\x45\x74\x55\xa2\xfe\x77\x4b\x7e\x01\xa7\x9d\xcf\xae\xe7\x0f\x54\x18\x2a\xb6\xd4\xd3\x7d\xf3\xf7\x7b\xd5\x7d\x7a\x36\x54\xf8\xe9\x9b\x4b\x39\xc5\x50\xf8\x4d\x36\x7e\xe8\xa8\xaf\x74\x4b\x07\x33\x2b\x97\xbb\x20\x38\x74\x44\xeb\x96\xa1\x7a\x1b\xf6\x88\x3e\x58\x3a\xb0\x65\xf6\xa4\x1b\xa2\x76\xcf\x74\xeb\x3f\xd8\x97\xcf\xe1\x81\x3e\xfa\x29\xff\xa1\x2f\xf9\x7b\xe7\x49\x78\xf4\xff\x1f\x2b\xfb\xd3\xca\xf8\xc1\x8a\xff\x8c\x31\xf4\x71\x56\xff\xc1\x79\xce\x41\xb4\xe1\xc0\x70\x31\xa0\x28\xa6\x3d\x5c\x49\xa0\x67\xdb\xc3\x35\x81\x22\x0b\x49\x44\xfb\x1e\xb1\xf6\xc0\x2f\x2a\x11\xe5\x86\xb4\x5b\x37\xa6\xb4\x44\x94\x9f\xf2\x60\x05\x26\x1e\x8c\x59\xae\xd8\x44\xcc\xac\x87\x2f\x39\x71\x18\x8b\x88\xc2\x13\x31\x95\x59\x7c\x95\xfd\x9f\x00\x00\x00\xff\xff\x69\xb6\xda\x49\xf6\x64\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 25846, mode: os.FileMode(420), modTime: time.Unix(1551996232, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1541454909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

