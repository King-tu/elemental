// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1515709395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xcf\x6b\xe3\x3a\x10\xbe\xfb\xaf\x18\x42\x79\x38\xd0\x38\x97\xc7\x3b\x14\x7a\x28\xe5\x15\x02\xdb\x52\x5a\xd8\x4b\xe9\x41\x75\xc6\xee\xb0\xb2\x14\xa4\x49\xbb\x45\xf8\x7f\x5f\xfc\x43\xb2\x93\x38\x5e\xef\xa6\xbb\x39\xd9\xf2\xcc\x37\x9f\xe6\xfb\x46\xca\x46\xa4\xdf\x44\x8e\xe0\x1c\x24\x8f\xc8\xc9\xb5\x56\x19\xe5\x5b\x23\x98\xb4\x4a\xee\x44\x81\x50\x96\x51\x44\xc5\x46\x1b\x86\x59\x4e\xfc\xba\x7d\x49\x52\x5d\x2c\xc5\x46\x1b\x64\xbd\x20\x95\x2e\x51\x62\x81\x8a\x85\x9c\x45\x51\xb6\x55\x29\x90\x22\x8e\xe7\xe0\x22\x00\xa8\xb0\x8d\x50\x39\x36\x15\x1e\x37\x98\x52\x46\x69\x5d\xc1\x56\xe8\x55\x4c\x40\x48\x1e\x30\x27\xcb\x68\x56\x6b\x54\x4c\xfc\x11\x3b\x97\xfc\x5f\x3f\x55\x6c\xca\xd2\xaf\xcf\x9d\x03\x54\xeb\x0a\xa0\x8c\xa2\xe5\x12\x6e\xf5\x1a\xe5\x57\x34\x96\xb4\x02\x83\xbc\x35\xca\x02\xbf\x22\xa4\x5b\x63\x50\x31\xbc\xb5\xdf\x74\x56\x2f\x17\x55\x7c\xd2\xf0\xed\xe7\xc6\x73\xc8\xa4\x16\xfc\xdf\xbf\xe0\x5a\x9c\xd0\x9e\xab\xfb\xd5\x4a\x65\x3a\xf1\x65\xca\x12\x9a\xe2\x0d\xab\x8c\xc4\x8b\xc4\x1b\x1d\xc8\x07\x1e\x02\x14\xbe\x03\x29\xcb\x42\xa5\xe8\x29\xf4\xb3\x20\xd3\xa6\x5e\xcc\xe9\x0d\x15\x90\x47\x50\xa2\xc0\x96\xe5\x91\x22\x71\x88\xb5\x6c\x48\xe5\xf3\x5e\x37\xfb\x29\x2e\x8a\x00\xec\x3b\x71\xfa\xda\xc1\x4f\x97\x08\x20\x15\xb6\x71\x4a\xa7\x07\x74\x82\xd4\x6e\xb9\x68\x43\xc1\x77\xee\x0e\xdf\x0f\x32\xe2\x79\x5b\x74\xe1\x15\xac\x5e\xd7\x98\x89\xad\x64\x8f\xd0\xe6\x2b\x92\x11\x80\xd7\x78\xaf\x03\xd7\x82\x31\xd7\xe6\x84\x36\xa7\x1e\xe1\x78\x9b\x7d\x91\x38\xc4\x4e\x6f\x73\x48\xf9\xc4\x36\x7b\x3e\x7f\xb8\xd5\xd7\x5a\x31\x2a\xfe\x75\x63\x8b\xa1\xd4\x09\xee\x1e\x2f\x38\x66\xf2\x81\xcc\x93\xbd\xee\x1c\x50\x06\x4a\x33\x24\x2b\xfb\xa0\x35\xc3\xe2\xa4\x39\xf8\x67\x37\xfe\x5e\x6e\x8d\x90\x50\x96\x5f\xc8\xb2\xeb\x8a\xee\xc8\xf4\x69\xaa\x4d\x98\x93\x29\xaa\x0d\x0d\xcb\x78\xc1\xb1\x99\xf9\x89\x6a\xbf\x35\x3a\x27\xa8\x76\x74\xac\xfe\x92\x72\x57\x52\xb6\x5c\x08\x6d\x27\x94\x94\x80\xdf\xc9\x32\xa9\xdc\x1b\x99\xd0\xb6\xcd\xdf\xc9\x89\xe7\xf0\xf4\xbc\x7f\x24\xd5\xae\x8f\x42\xc9\xa1\x00\x17\x18\x4f\x6b\xf0\x70\xff\xce\x0f\xf7\x5d\xef\xec\x4d\x18\x10\x92\x84\x45\x7b\x2b\x36\x70\x09\x85\xd8\x3c\x35\x66\x18\x26\x3b\x91\x4a\x15\x74\x86\x1d\x93\x8b\xcb\x1d\x62\x8b\x10\xd6\x42\x9d\xd1\x39\x9c\xd5\x44\xea\xd0\xab\x86\x92\x47\x9b\x39\xe7\xbf\x96\xe5\xec\xa2\x4a\xeb\x83\x8f\x6e\xb3\xf7\xd2\xbf\xa4\xf8\xe3\xc6\xe8\xa2\xae\xb3\xf3\x6f\x24\x6c\x55\x58\xab\x53\x12\x8c\x6b\x60\xdd\x9b\xb2\x9a\xc6\xce\x55\xd4\x83\x8a\x1b\x92\xc7\x6e\xa0\x3d\xb9\xbb\xc6\x3f\xd5\x8f\xcf\xc1\x6b\xf5\xfa\xe0\x79\x2e\x65\xcd\xa5\x4d\x3d\x72\x6e\x07\xff\xed\xe3\x74\xc7\xf4\x21\xb5\xca\x9f\x0d\x71\x18\x3d\x9e\x27\xa8\x3f\x3e\xcb\x7b\x73\xe6\xab\xba\xa9\x6e\x38\x74\xc4\x79\x58\xdf\x9b\xec\xea\x37\x30\xf2\x65\x4f\x84\x6a\xcc\xcb\xe8\x47\x00\x00\x00\xff\xff\x3a\xcb\x38\xd5\x69\x0b\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 2921, mode: os.FileMode(420), modTime: time.Unix(1518474163, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\xdb\x38\x12\x7f\xf7\xa7\xe0\x09\xdd\x5d\xfb\xe0\x28\x7d\xf6\x5e\x16\x28\xd2\x74\x11\x5c\xbb\x0d\xea\x5e\xef\xa1\x28\x36\x8c\x34\x76\xd8\x4a\xa4\x4a\x51\x6e\x72\x86\xbe\xfb\x81\x7f\x45\xca\x92\x25\x67\x93\x6d\x1f\xfc\x12\xc4\x43\xf2\x37\x7f\x39\x9c\x21\x55\xe0\xe4\x0b\x5e\x03\xda\x6e\x51\xbc\x04\x11\x9f\x33\xba\x22\xeb\x8a\x63\x41\x18\x8d\xff\xc0\x39\xa0\xba\x9e\x4c\x48\x5e\x30\x2e\xd0\x74\x82\x10\x42\xd1\x2a\x17\x91\xfe\xaf\xbc\xa7\x49\x34\xd1\xff\xaf\x89\xb8\xad\x6e\xe2\x84\xe5\xa7\xb8\x60\x1c\x04\x3b\x21\x34\x39\x85\x0c\x72\xa0\x02\x67\x7a\xc9\x76\x8b\x38\xa6\x6b\x40\xf1\xb2\x80\x24\x7e\x7f\x5f\xc0\x15\x67\x1b\x92\x02\x2f\xd1\x49\x5d\x6b\x2c\x29\x0e\xaa\x6b\xb7\x04\x68\xaa\x06\x67\x93\xc9\xc4\x21\x3c\x23\x73\xf4\x0c\x68\x95\xa3\xc5\x19\x8a\x2f\x68\x95\x97\x52\xd8\xd3\x53\xb9\x42\x0d\x28\x78\x54\xd7\x88\x43\xc1\xa1\x04\x2a\x4a\x24\x6e\x01\x15\xac\x2c\xc9\x4d\x06\x68\x83\xb3\x0a\x4a\xb4\x62\x1c\x61\x21\x38\xb9\xa9\x04\x28\xee\x7a\xf9\x0b\x4b\x33\x86\x88\xe2\x89\x90\x88\x3b\xf8\xa5\xe0\x84\xae\x27\x93\x84\xd1\xd2\x9a\x69\xbb\x3d\xb1\x82\x52\x9c\xc3\x1c\x3d\x53\xdc\xa4\xb0\x7a\xf1\x07\xcd\xdc\xe8\x6c\xc4\xa6\x9a\x53\x5b\x62\xbd\x54\x4e\xd0\xff\xd5\x75\x6c\x6d\xe3\x96\xec\x48\x75\xa6\x55\xb1\x2b\x02\x6b\x2a\x63\x36\xff\x1b\xab\x69\xa7\x5c\x50\x41\xc4\xbd\xd1\xf9\x32\x05\xf5\xb3\x2d\x91\xa3\xb3\x95\xfa\xcd\x6e\x3e\x43\x22\xe2\xc9\x06\xf3\x21\xa4\x33\xe4\x82\x22\x76\xc4\xad\x92\x4e\x4e\x5d\x20\x17\x03\x0a\xe4\x1d\x94\x42\xd2\xeb\x3a\x9a\xab\x49\xe7\x58\xc0\x9a\xf1\xfb\x45\x38\x89\x55\x3c\x71\x9e\xd2\x33\xaf\x38\xd9\x60\x21\x11\xdd\x44\x43\xaa\xeb\xf9\xa4\xd6\xd1\x44\x56\x88\x32\x61\x86\x2f\xcb\x77\x8c\x89\x26\x8e\xda\x7a\x5c\x65\x15\xc7\x19\xaa\xeb\xd7\xa4\x14\xbe\x4d\x30\xca\x24\x85\xad\xf6\xae\x72\xf1\xb3\x1f\xf7\xe3\xa7\x7f\x76\xcc\x31\x7e\x3a\x67\x54\x00\x15\x9e\x63\x44\xc5\xa9\xf6\x0a\xe9\xf4\x4a\x89\x08\x55\x3f\xa5\x88\xf1\x64\x55\xd1\x04\x4d\xd9\xa0\x18\xb3\x36\xab\xe9\xac\xdb\x73\xca\xd6\x5a\x8c\x2e\xd0\xc6\xf5\x13\xab\x41\xd1\x88\x8d\x51\xc1\x08\x15\xc0\x91\x60\x08\xa3\x44\x8e\x49\x59\x87\xa4\x3b\x4c\x8f\x22\x14\x3e\x50\x6c\x45\xb0\x4c\x06\x46\x0f\x25\xc0\xe2\x0c\xe1\xa2\x00\x9a\x4e\x87\xc0\xb7\xf5\x1c\xb1\x38\x8e\x67\xbe\x11\x7e\x96\x20\x46\xd9\x17\x0a\xc7\xc0\x95\x81\x57\x04\x53\x3f\x31\xa2\xf0\x4d\xf3\x35\x6e\x7b\x4c\xdd\x35\xff\xa9\xe5\x19\xc7\x71\xdb\x87\x5a\xff\x91\xe6\x61\x95\x78\xb0\x75\x64\x9e\xfd\x73\x2e\xd5\x97\x10\x3a\x39\x5a\xb9\xf4\xfe\xb7\x1c\x1c\x03\x56\x09\xb5\x20\x9e\x76\xef\x88\x99\x46\xae\x83\x18\x64\x95\x30\xc6\x57\xbb\x29\x61\x74\x03\x5c\xf8\xb6\x57\xb1\x46\x77\xa2\x59\xab\x5a\x1e\x6a\x62\xf9\xb7\x63\x6f\x78\x68\x2d\xeb\xed\x99\xb9\xad\x7d\x53\x11\x01\xb9\x67\xab\xbd\x56\x92\x73\xf7\x5b\xe3\x25\xac\x70\x95\x89\xb7\x3c\x05\x1e\xa4\x8d\x54\x0f\x20\x26\x47\x08\x5d\xa3\x15\x81\x2c\x2d\x6d\x38\x26\x3a\x1c\x0e\x31\x89\xcf\x6a\x3a\x43\x1f\x3f\xe9\x23\xb2\x95\x2c\x2c\xb9\x51\xab\x55\x1f\xbc\x35\x02\xb9\x93\xb8\x29\x12\xdc\x21\x11\xa6\xfc\xf0\x8c\xd3\xd6\xd0\xda\x7f\x00\x5e\x12\x46\x03\xc5\x37\x86\xf6\x70\x45\x0d\xea\x74\x86\x08\x35\x6e\xf6\x33\x21\x88\xf8\xc5\xd5\xe5\x25\x5d\xb1\xd8\xf2\xaf\x95\x40\xde\xd9\xdb\x7f\xf8\xb6\x0f\xdd\x9c\xa5\x90\x49\x61\x31\xda\x39\x1e\xf7\x9d\x2e\xa6\x46\xa9\x12\x29\xe1\x76\xeb\x5b\xb8\x65\xd9\xed\x16\xe5\xf8\x0b\x48\xaa\x2a\xc1\x26\xb2\x8c\xb1\x82\x4a\x6b\xbe\x91\x22\x58\x55\xa4\xca\xd7\x9f\x4b\x46\x17\xd1\x49\x84\x6e\xd4\x3f\x7f\x2a\x21\x8d\x61\xa3\x6b\xbd\x4a\x16\x8a\xf1\x9b\x4a\xc0\x9d\x71\xc6\x1f\xf0\xad\x57\x65\x7b\x2e\xc8\xac\xd8\xb5\xeb\xa5\x2c\xca\x41\xbd\x20\xd3\x59\xdf\xc2\x56\x00\xfe\xdc\x3d\xab\x89\x47\x5f\xdd\xc5\x1e\x97\xce\x77\x23\xd8\x96\x7d\xaa\x28\x94\xb6\x67\x5c\x55\xaa\xa1\xd9\x2f\x29\x11\x04\x67\xe4\x7f\x7e\x01\xdc\x2a\xed\x14\xe3\x00\xa7\xc5\xb0\x23\xda\x3b\xcb\x83\xbe\xa2\xcd\x86\x7b\x8f\xd1\x66\xe8\x2f\x56\x00\x68\xa7\x04\xb0\x79\xaf\x95\x88\x74\xad\x1a\x48\xf7\x4b\x89\x2a\x4a\xbe\x56\xb6\xb8\x91\x6b\x46\x4b\x2c\x27\x4f\x67\x28\x4c\x3e\xba\xe6\x33\xf5\x5e\x23\x87\x35\xbe\x4d\x9b\xb1\x83\x6e\x26\xc9\x93\x51\x9e\x25\x90\xda\x40\xb4\xa5\x3e\x64\x25\xb4\x21\xa2\xa8\x19\xd6\x1e\xd2\xca\x2f\x41\x78\x7c\x4b\x10\x8f\xad\x7c\xc0\x60\x4a\x52\x63\x80\xd9\x48\x0b\x8c\x53\x1d\x9d\x21\x92\x76\x2b\xd8\x95\x6a\x6f\x31\x4f\x13\x96\x42\xda\x4e\xba\x2a\x5f\x8c\x50\xaa\x23\xd3\x8e\xcc\xb5\xfb\x8e\x3e\x5b\xb5\xf7\x1c\x81\x03\x72\x29\xc1\x7e\xb4\xb3\xce\xf7\xee\x4b\x28\x13\x4e\x0a\x61\x8c\x21\x2d\xc1\x92\xf0\xec\x67\x49\xa5\x36\xb4\x9a\x23\xeb\x8e\x26\xfc\x86\x9d\xf2\x92\x25\x1d\xfb\xeb\x44\x0a\x00\x5f\x3b\x64\x88\x3e\x52\x96\xb2\xe4\x53\xd4\xde\x2b\x8a\xbc\xd4\x7d\x74\xb0\xa7\xc2\x69\xd7\x4e\x90\x50\xb3\xeb\xdd\x40\xf4\x4e\x58\xa5\xc6\xfe\x1d\xa3\x38\xef\xa8\x62\xb8\xae\x72\x11\x2f\x0b\x4e\xa8\x58\x4d\xa3\x7f\xfd\x54\x2e\x7e\x2a\x7f\x8b\x64\x65\xdb\xe4\x45\xe5\x9a\x86\xa4\x13\xcf\xcc\xb8\xa3\xe7\xc0\xd5\xe7\xad\xf4\xd5\xef\x20\x64\x07\xa4\x3d\xf4\x3b\x08\x29\xe6\xce\x7e\xf3\xbd\xd6\x39\xc1\x6c\x28\x0e\x09\x90\x4d\x3b\x51\x3c\xeb\xd4\xbb\x87\xd7\x74\x16\x72\xb0\x57\x0a\xa1\x59\x74\x9e\xd8\x49\x89\x41\x75\x63\x83\xd1\x57\x70\xd9\xa3\xa0\xcb\x84\x6b\xb2\x01\xfa\x68\x3a\xf6\xb0\x9b\x7a\x1b\xaa\x53\x5b\x97\x2e\xbb\xf5\x44\x67\xc8\x43\x08\x02\x2e\xbc\x58\xf9\x80\x33\x92\x62\xa1\x12\x3c\x49\x41\xab\x98\x54\x9c\x03\x15\x88\xd0\x15\xe3\xb9\xde\x7c\xa5\x60\x1c\x52\x99\xde\x74\x63\xa8\x8f\xfb\x8a\xc3\x98\xec\x68\x98\xc8\x13\x9a\x73\xc6\xad\xec\xea\x47\x19\x36\x1d\x17\x8a\xb6\xb5\x1b\xeb\x6b\x45\x38\xa4\x17\xfb\x26\x76\xdd\xdd\x85\x81\xdc\x1c\x2b\xea\x32\xe5\x3d\xc7\xb4\x24\x52\xc1\x60\x2c\xbe\xb8\x2b\x58\x09\x4d\x39\x69\xc8\xef\x8c\x10\xe1\x6c\x99\x41\x94\x2f\x22\xbd\x2b\x23\x3b\x2c\xc7\x38\x0f\x65\xb5\x06\xb0\x50\x66\x47\x87\x69\xb3\xc7\x95\xb3\x5f\x15\xde\x3f\xce\x10\x25\x99\xd7\x64\xb5\x6c\xe3\xfa\xad\x90\x3e\x97\x8b\x6d\xe7\x15\xe6\xe4\x4e\x65\x04\xc9\xe1\x20\x55\xde\x93\x1c\x7e\x44\x45\xe0\x4e\x00\xa7\x38\x3b\x48\x99\x0b\xb3\xe8\x3b\x2b\xd4\xab\x5e\xfc\x22\xcb\xd8\x37\x48\xcf\x6f\x19\x49\x9a\xd8\xde\xa7\x9a\x0e\xb5\x4b\xaa\xee\x01\x5a\x6a\xe9\xc8\x9d\xf6\x68\x37\x6f\xca\x02\xb9\xee\x33\x23\x74\x47\x80\xeb\x68\x8e\xa2\x6b\x89\x56\xcf\x55\xc6\x79\x51\x09\xb6\x06\x0a\x1c\x0b\xb5\x63\xfa\x6c\x04\x2d\xdb\xc0\x01\x4e\x6e\x84\xc0\x7c\x94\x0d\xae\xb0\x4c\xf0\x74\x9c\x57\xe7\xfa\x1c\x6f\xf1\xb8\xd6\xea\x79\xb9\xe0\x29\x34\x5b\x0b\x14\xbf\xc1\x77\xaf\x81\xae\xc5\x2d\x7a\x3e\x46\xb7\x37\xf8\x8e\xe4\x55\xae\x97\x8c\xd5\x50\x52\x1b\x3e\x92\xb2\xc2\x59\x09\x4f\xa6\x12\xa1\x07\xa9\x44\xe8\x03\x55\x72\x7c\x9e\x5e\x25\x7c\xa7\xde\x48\xd0\xf3\xf8\x79\xdf\xc1\xb0\xca\x18\x16\xa3\xf2\x8f\x71\xe2\x2b\xb9\xe0\x40\x1f\x7e\x30\x2f\x28\x8f\xa7\xaf\x29\x6c\xc7\x0a\x7d\x49\x47\x8b\x4c\xa8\x98\xb6\xc4\x9e\x3d\xb6\x9f\x86\x02\xf1\x31\xbd\xa6\xe3\xf4\x70\xaf\x59\x29\x9e\xc0\x6b\x23\x65\x7e\x88\xd3\x1a\xa9\xff\x3e\xa7\xfd\xa8\xc5\xd7\x5f\x49\x1f\xdf\xb5\xd8\x7a\x1c\xc1\xbf\x63\x71\xf5\x48\xb1\xd5\x39\xd8\x31\x95\xac\x50\x06\xb4\x55\xba\xcd\xd0\x6f\xe8\xb9\x93\xc9\x34\x9c\xe1\x14\xff\xad\xc3\x60\x40\xc7\x5a\xb7\x1a\x76\x56\xd9\xbb\x07\x92\xd9\x9b\xb9\x02\x12\xb2\x22\x89\xea\xc7\x5e\x31\xee\x7a\x9c\xa0\xf9\x76\xd4\x60\xba\xbb\x3b\xd1\xdd\x6b\xf3\x41\x81\xba\xc5\xfd\x02\xf7\xb6\x8b\xeb\xbf\x84\xe8\xe3\x3e\x55\x10\xf6\x12\xaf\x71\x7f\x8f\x20\xaa\xf5\x23\x2b\xb4\x99\x23\xf6\x45\x06\x4c\x37\xc3\xa6\x81\x7b\x83\x8b\x8f\x92\xc5\xa7\x5f\xe5\x82\xad\x6f\x9b\xcd\xc4\x58\xeb\xf4\x14\xfd\x17\x50\xc2\xaa\x2c\x55\x2d\xde\x8a\xd0\x14\x11\x31\x47\x25\x43\x19\x88\x5f\x4a\x94\xdc\x42\xf2\x05\x31\xf3\xd4\xcc\xbe\x01\x47\x09\x2e\x01\x11\x9a\xc2\x1d\xa4\xa8\x2c\x20\x41\x39\x2e\x26\x03\x57\xc5\xaf\xe5\xd2\x73\x5c\x42\x87\x80\xf6\x51\xb5\x53\xf1\x32\xf0\xd2\xaa\xca\x32\xcf\x0b\x65\x38\x33\xc7\xc5\xa0\x3f\x7a\xb8\x4c\x67\x72\xf5\x47\xed\x8e\x4f\xe3\xbc\xb1\x57\xe1\x40\xcf\xc9\xbe\xaf\x31\x82\x99\x3b\xaf\x43\xb8\x50\x6f\x43\x4e\x65\x19\x90\xdd\x38\xfb\xbe\xd3\x08\x79\x9c\x1d\xa2\xab\x52\xb5\xf9\xf0\xc5\xde\x6b\x92\x35\xa1\x38\x5b\x32\x99\x7a\x76\x6f\x0d\xa2\xae\xd4\x14\x2d\x06\xc3\xdc\xee\x6f\x73\xdd\xd8\xd9\xb1\x20\xe4\x53\x17\xbb\x6d\x87\xec\x3a\x3c\x1c\x2f\x49\x79\x4b\x55\x1f\xb6\xe8\xe9\x0f\x4f\xea\xfa\xa0\x1e\xae\x29\x24\xdc\xb2\xda\x25\xc4\x79\x5b\xa7\x56\xab\x67\x25\xf3\xc9\x8b\xce\xa6\xb0\x57\x2b\x07\xbd\xc1\x24\xc3\x37\x24\x23\xe2\xde\x43\xf6\xa8\xe6\xfb\x9a\xd6\xc4\x68\x10\xf9\xfc\x16\x53\x0a\x59\x33\x60\x08\x06\xaf\x19\x1e\x01\xd5\xf5\xdc\x82\x50\x40\x5e\xf4\x44\xd0\x30\x38\x07\x15\x48\x6f\x69\xe6\x59\xc0\xa7\x6a\xd3\xb6\xe6\x0d\xe2\x06\x6f\x0d\x6e\xd4\xa7\x6a\xdc\xd6\xbc\xb1\xb8\xb6\x42\x74\xa3\x7d\x75\xc3\x49\x9b\xb7\x5a\xe9\xe2\xb8\x05\x27\x25\xf2\x1e\x23\x35\xc5\x44\x2a\x25\x59\x67\x88\xaa\xe1\x90\x3b\xad\xf2\x07\x70\xee\xba\xb8\xed\x72\xea\x76\x8b\x12\x5c\x10\xa1\x64\x44\x53\x7d\xc8\x04\x78\xb3\x07\x0a\x6e\x8b\xdc\x43\x44\x3f\xa9\xeb\xc8\x73\xa4\xd5\x27\x1a\xc9\xff\x40\x56\x1d\x9c\x02\x46\xa8\x9b\x53\x3b\x92\x7a\x42\xab\xe0\x90\x84\x49\xa6\xa1\xd9\x70\xf5\xe6\x8c\x08\xd6\xe0\xe1\xc9\x42\x3a\xa2\xc9\xc5\xad\x57\x9c\x41\x58\xef\xfe\x58\x0f\x18\x82\x16\xb1\x19\x1d\x04\x7a\x45\x32\x01\x5c\x7d\xd9\xe4\xc6\x1a\x9a\x86\x0b\xe6\x0c\x23\x32\x0e\x64\x4d\xff\x0d\x5e\x32\x69\x68\x06\xd1\x9f\x33\x06\x31\xc7\x22\x40\xcb\xb1\x30\xf9\xce\x0d\x0e\x27\xba\xe6\x75\x49\xd3\xf5\x6f\x2d\x91\x1b\x1b\x44\xf1\x1e\x8a\xdd\x58\x43\xd3\x68\xc1\x9c\x61\x44\x59\x18\x7a\x60\xf2\xa7\xc1\x31\x23\x83\x10\xfe\x0d\x9b\x19\x72\xa4\xc5\xee\x1d\xdc\x08\xb8\x56\x7a\xb5\x94\xc5\xce\x65\xd0\x20\x96\x77\x53\x66\xc1\x2c\x69\xb1\x7b\x97\x36\x02\xae\x2d\x9a\xa1\x2c\x76\x6e\x3c\x86\xb0\xc2\xd3\xd4\x3b\x44\x47\x9f\x9d\xea\xd0\x0a\x77\x8f\x23\x69\x79\xfc\x19\x83\x70\x57\x9c\xe4\x98\xdf\x07\x7b\xa7\xa1\x69\xc0\x60\xce\x20\xe2\x3b\xc0\x69\x78\xb0\x5b\xca\xc2\xdc\x32\xbb\xf1\x11\x58\xe1\x05\x89\xc4\xd2\x94\x45\xfb\xc6\x7a\x10\x6b\xd9\xda\x8b\x4b\x6f\x2f\x2e\x47\xef\xc5\xa5\x7e\x29\x6c\x50\xd4\x6f\x83\x62\xc7\x86\x51\xaa\x1b\xf3\xd4\x69\x61\x34\xc1\x7e\x58\xed\x86\x87\xe3\x61\xe7\xbd\x0f\x21\x47\xd2\x62\xf9\x33\x86\xe1\x02\xb1\x3c\x99\x46\x0b\xf4\x1f\xfd\xd9\x8c\xa3\xeb\xdf\x52\x14\x33\xd4\x2b\x85\xa2\xef\x7c\xd2\x72\x48\xab\xfa\x44\x8d\x59\x0f\xb3\xbf\xa7\x43\x33\xa5\xd6\xb1\x3d\x43\xc7\xf6\xec\xd8\x9e\x1d\xdb\xb3\x63\x7b\x76\x6c\xcf\x8e\xed\xd9\xb1\x3d\xdb\x0f\x71\x6c\xcf\x8e\xed\xd9\xb1\x3d\x3b\xb6\x67\x4f\xda\x9e\xfd\x3f\x00\x00\xff\xff\x48\x39\x53\x65\xc5\x3e\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16069, mode: os.FileMode(420), modTime: time.Unix(1518474220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x6b\xdb\x30\x14\xc7\xef\xfa\x14\x7f\x4c\x19\x09\xa4\xf6\xce\x81\x1c\x46\x07\xa5\x87\x8d\x91\xb2\x53\xc8\x41\x95\x5f\x1c\x51\xfb\xc9\xc8\xcf\x19\x41\xe8\xbb\x8f\xd8\x49\x9b\x30\x97\x30\x5c\x4a\x8f\x7a\xf2\xfb\xbd\xff\x4f\x12\xae\xb5\x79\xd6\x05\x21\x04\xa4\x8f\x24\xe9\x9d\xe3\x8d\x2d\x5a\xaf\xc5\x3a\x4e\x7f\xea\x8a\x10\xa3\x52\xb6\xaa\x9d\x17\x24\x85\x95\x6d\xfb\x94\x1a\x57\x65\xba\x76\x9e\xc4\xdd\x5a\x36\x19\x95\x54\x11\x8b\x2e\x13\xa5\x8c\xe3\x46\xc0\x2e\x77\xe6\x51\xbc\xe5\x02\x0b\x24\xab\x6e\xbd\x4e\x90\x65\x60\x57\x5a\x96\x39\x76\xda\x9b\x2d\x99\xe7\x59\x4e\x3a\x37\x2e\x27\xa5\xd4\x4e\x7b\x78\x2a\xbb\xe9\xcd\xd6\xd6\xcd\x92\x0a\xdb\x88\xdf\xe3\x65\x44\xba\x1c\xda\x57\x2a\xcb\x70\xb1\x03\x4f\xd2\x7a\x6e\x20\x5b\x42\xe5\x72\x2a\x2f\xc9\xa9\xda\xb4\x6c\x2e\x7b\x26\xd3\x6b\x73\x10\x94\xc2\x11\x3d\x9c\x54\x45\xd5\x93\x2d\x5b\x99\x4c\x4f\x0d\x43\xac\xc5\xb5\x69\x21\x1e\x9a\x43\x80\xd7\x5c\x10\x6e\x88\xc5\xca\xfe\x70\x2b\x33\xdc\x9c\x98\x98\x2f\xfa\xbb\xbb\xd4\x8f\xf1\xad\xb9\xab\x10\xce\x48\x31\x3e\xe4\xfd\x6a\x8d\x05\xbe\x0c\x27\x0a\x0a\x38\x04\xb9\x85\xdd\xa0\x10\x4c\x4a\xe2\xd7\x04\xe9\xb7\xb2\x74\x7f\x9a\x3b\x4f\x5a\x68\x8a\xaf\xfd\x6c\xe0\xbc\x3c\x47\xa5\xeb\x55\xd3\xbd\x88\xf5\x93\x73\x25\x7a\x66\x4f\x3d\xfa\xd5\xda\x13\xcb\x41\xe8\x95\x7d\x4f\x82\xc4\x74\x8c\xe4\x04\x06\x92\x10\x5e\x3e\x8f\x31\xc1\x1c\xe2\x5b\x9a\x9d\x21\x89\xf3\xd3\xe7\x71\xa6\x06\xaa\x57\x6c\x7e\xd7\xf9\x90\x4d\x5f\x1e\x67\xd3\x76\x8c\x91\x36\x7d\x9c\x5f\x5a\xcc\xf6\x13\xa4\xf9\xbf\xb3\xfd\x4e\x25\x0d\x9c\x6d\x5f\x1e\x67\x93\x77\x8c\x0f\xb5\xb9\x27\xf9\x47\x65\x49\xe2\x2d\xed\x46\xca\x14\x24\x1f\x6d\xf2\x43\xf3\xfe\x4d\x9b\xc3\xe6\x68\xa3\x4a\xf3\xfe\x5d\xde\xfe\x03\x6f\xdc\x67\x48\x73\x51\x8d\xfd\x0f\xfb\xb8\x8e\xea\x6f\x00\x00\x00\xff\xff\xf1\xb5\xf1\x24\x61\x07\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 1889, mode: os.FileMode(420), modTime: time.Unix(1518473635, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

