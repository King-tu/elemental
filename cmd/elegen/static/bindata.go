// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x5d\x6b\xf3\x36\x14\xbe\xf7\xaf\x38\x0b\x61\xd8\xd0\xb8\x37\x63\x17\x1d\xb9\x28\xa5\x85\xc0\x52\x4a\x0a\xbb\x09\xbd\x50\x9d\x63\x47\x4c\x96\x8c\x24\xb7\x33\xc6\xff\x7d\xc8\x96\x3f\xe4\x7a\xa9\xd3\xb5\x7d\xe1\xcd\x55\x2c\x9d\x2f\x3d\xcf\xd1\x73\x94\x91\xe8\x6f\x92\x20\x94\x25\x84\x8f\xa8\xc3\x1b\xc1\x63\x9a\xe4\x92\x68\x2a\x78\x78\x4f\x52\x84\xaa\xf2\x3c\x9a\x66\x42\x6a\x58\x24\x22\x24\x99\x90\xa8\x45\x48\xc5\x25\x32\x4c\x91\x6b\xc2\x16\x9e\xf7\x42\x24\xf8\x1e\x00\x00\x3d\x20\xd7\x54\x17\xc6\x59\x6d\x49\x06\x6b\x48\x49\xb6\x57\x5a\x52\x9e\x3c\x75\x3e\xe1\xc6\xda\x41\x59\xbb\x99\x5f\x59\xae\x40\x12\x9e\x60\x53\xcc\x63\x86\x11\x8d\x69\x54\x17\xa3\x4c\x21\xbd\x21\xd0\x18\xd4\x51\xe4\xec\xb0\xc3\x84\x2a\x8d\xd2\xb1\x86\x10\x96\xe1\x43\xfe\xcc\x68\xb4\x15\x07\x74\x7d\x57\xb0\xec\x4b\x84\xab\x35\x84\xc6\x86\x85\xb7\xfd\xe2\x6a\xe0\xb0\x28\x4b\x6b\xb0\x43\xa5\xcd\x76\x55\x2d\xae\x4c\x0d\xc3\x30\x55\xd5\x1e\xe8\xc2\x49\x85\xfc\x30\xce\x3e\x58\xaa\x3c\x07\xb3\x88\x68\x4c\x84\xa4\x3f\x21\x70\x22\x97\x11\x7e\x09\x78\x84\x51\xa2\xbe\x10\xb1\xd5\x37\x42\x56\x96\xb6\xaa\x25\xbd\x80\x65\x7d\xb2\x81\xd3\x75\x73\x52\x70\x31\x6e\xed\x3e\x0f\xd8\x49\xac\x03\xcf\xbb\xbc\x84\xba\x90\xbf\x50\x2a\x73\x70\x89\x3a\x97\x5c\x81\x3e\x22\x44\xb9\x94\xc8\x35\xbc\xd8\x3d\x11\xd7\xcb\x69\x5d\xb8\x17\xe7\x3c\x72\x7c\xfd\x00\x62\x26\x88\xfe\xfd\x37\x28\x6d\x9c\x4e\x84\xae\x1f\x36\x1b\x1e\x8b\xb0\x4d\x53\x55\x86\x6a\x5d\x64\x36\xdc\x96\x70\x92\xa0\x04\xa5\x65\x1e\xe9\xb2\xf2\xea\xf0\x7e\xec\xec\x06\xd0\x9e\xfc\x4e\x8a\xd4\x80\xe1\x73\x83\x48\xd3\x1c\x01\x4c\x76\x47\x7d\x54\x5b\xcd\x58\xc7\xf6\xc6\xfd\xc9\x9b\x93\xed\xa6\xb9\xc6\x85\x6f\xef\x73\x71\x7e\x56\x47\x09\xf6\x6d\x9c\x79\xe9\xeb\x36\xf1\x9b\xa6\x98\x9d\xb8\xbf\x45\xfb\xfa\xef\xcc\x54\xbc\xf0\x09\xef\xcf\xe7\xd3\x89\x4c\x41\x9b\x8a\xc6\x40\x61\x0d\x71\xf8\x86\x1a\xc2\x8b\xe0\x0f\xf8\x85\x86\x1b\x75\x9b\x66\xba\xf0\x83\xc1\x5d\x6d\xa1\x71\x14\x73\x2a\x54\x87\xfb\xd9\xe1\xec\x9a\x1b\xce\xe2\xc8\x8b\xe0\x1d\x2c\x62\x4a\x9e\x19\xfa\x2d\x77\x93\x10\x8c\xd7\x1a\x9f\x16\x19\xf5\x4a\x75\x74\xec\xd8\xb7\xd5\x76\x6a\x70\x42\xa3\x3e\xac\x4f\x11\x51\xcd\xdc\x7f\x23\x48\xbd\x68\x5c\x8d\x41\xbb\xc7\xd7\xff\x70\xf1\x03\x6f\x42\x36\x46\x9f\x07\x8c\x49\xce\xf4\x9b\xb0\x9c\x32\xcb\xc6\x1c\xa0\x0d\x37\x8f\x75\xc3\x39\xbd\x77\x1a\xe1\x11\xc3\x96\xb2\x11\xe1\x4d\x37\x07\xf3\xf8\x56\x1f\x21\x5c\x7d\x1a\xe3\x5c\xe8\x96\x88\x8d\xda\x09\xa1\x7f\x4c\x47\xfc\x3a\xe5\xf0\xc0\x72\x49\x18\x54\xd5\x9f\x54\x19\x81\x7e\xbf\x33\xbe\xa4\x51\xd4\x59\x9d\xa2\x4e\xb6\x8a\x3a\xbb\x57\x76\xc8\x1a\xe2\x8e\x34\x53\xfe\x30\xab\xb3\xd3\x30\x24\xc7\x7a\x2c\xa7\x6c\x4c\x2e\xf3\xd2\x4e\xed\x04\x5c\x3b\x29\xcd\x24\x34\x23\xda\x6e\x0e\xa7\x73\x6d\x36\xa8\x60\x3b\x70\x6b\xa7\x73\xf3\xe5\x14\x3a\x34\xeb\xe7\x74\x9b\xbd\xf2\xea\x7c\xd7\x8c\x59\x60\x28\xaa\x2e\x2b\x61\x0c\xf0\x1f\xaa\x34\xe5\x49\xdb\xe5\x14\x95\x4d\xe6\xf8\xf8\x01\xec\xa7\x5f\x6b\x43\x40\xa6\x4c\xbe\xff\x3d\x77\xf2\x72\x9c\xf7\x78\xad\x2c\x7a\xf5\xdc\xbd\x13\xb2\x3b\xf7\x10\x42\x43\x9e\x1d\xcd\x10\x0b\x59\x7f\x27\xf4\x05\xfb\x97\x42\x87\xe8\x38\xce\x69\x79\xda\x3f\x35\xb7\xe1\x3d\x3d\x9a\x01\xeb\xf7\x0a\x4e\x5b\x78\xf9\x7f\x1f\xcb\x27\xd9\x9a\x23\x52\xee\xdb\xc1\x48\x53\xe5\xfd\x1b\x00\x00\xff\xff\xb6\x1f\x7f\xe7\x51\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3921, mode: os.FileMode(420), modTime: time.Unix(1533344871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x4f\x24\x37\x12\x7f\x9f\xbf\xc2\xd7\x22\xc9\xcc\x69\x68\xf6\x79\x72\x44\xda\x63\x77\x23\x74\x4b\x82\x96\xd5\xe6\x61\x85\x82\xe9\xae\x19\x1c\x7a\xec\x8e\xed\x66\xe1\x46\xfd\xbf\x9f\xfc\xd5\x6d\xf7\xc7\x8c\x87\x40\xc4\x49\xf0\x90\x40\xd9\xfe\xb9\xea\x57\xd5\xe5\xf2\xc7\x96\x38\xbb\xc5\x2b\x40\x9b\x0d\x4a\x2f\x40\xa6\x27\x8c\x2e\xc9\xaa\xe2\x58\x12\x46\xd3\x5f\xf0\x1a\x50\x5d\x4f\x26\x64\x5d\x32\x2e\xd1\x74\x82\x10\x42\xc9\x72\x2d\x13\xf3\x9b\x78\xa0\x59\x32\x31\xbf\xaf\x58\x8a\x4b\xc6\x41\xb2\x94\xb0\x23\x28\x60\x0d\x54\xe2\xc2\xf4\xdc\x6c\x10\xc7\x74\x05\x28\xbd\x28\x21\x4b\x3f\x3f\x94\x70\xce\xd9\x1d\xc9\x81\x0b\x74\x58\xd7\x06\x42\x69\x81\xea\xba\x19\x02\x34\xd7\x8d\x43\x10\x5f\x70\x41\x72\xad\xe6\x1e\x40\xb3\xc9\x64\xb3\x39\x44\x64\x89\x28\x93\x16\xe8\x8c\xe5\x50\xa4\xef\x40\xe2\xec\x06\x72\x65\xee\xd1\x91\xe1\xa3\x6d\x7d\x4f\x25\x91\x0f\x96\x8e\x53\x9a\xc3\x3d\x08\x54\x10\x21\x05\x92\x37\x80\xb0\x94\x9c\x5c\x57\x12\x50\xc6\xd6\x25\xab\x68\x8e\x88\xe9\x94\x4e\xee\x30\x8f\x42\x3b\x46\x5f\x2f\xbf\x5e\x0a\xc9\x09\x5d\xa1\x8d\x55\xfc\xd0\x9a\x7c\x40\xe6\xe8\xa0\xc1\x5e\x1c\x07\x70\x0e\xc1\x1a\xef\x8d\x6a\x46\xd8\x26\x87\x6f\xe0\x1b\xa6\xea\x3a\x99\x6b\x49\x3d\x6f\x10\xa0\x1d\x65\xf9\xab\xeb\x49\x3d\xf1\x9a\x26\x9b\x0d\x3a\x28\xb0\x04\x21\xbf\x00\x17\x84\xd1\x56\xb1\x8f\x5a\xfc\xd6\xd1\x22\x5c\x07\x3b\xcc\x33\x0a\x68\xb5\x56\xe3\xae\x2b\x52\xe4\xef\x69\xb5\x16\x06\xa2\x0b\xdd\xb8\x45\x8f\xd0\x01\x84\xea\x1a\x71\x28\x39\x08\xa0\xd6\x11\x25\x13\x82\x5c\x17\x80\xee\x70\x51\x81\x40\x4b\xc6\x3d\xe7\x24\xcd\xf0\x46\x33\xeb\x84\x24\x9d\x48\x85\xd8\xc3\x37\x7c\x4d\x26\x19\xa3\xc2\xc5\xbf\x47\x30\xc5\x6b\x98\xa3\x03\x3d\x9b\xb2\xc2\x0c\xfe\x62\x26\xb7\xf4\x59\xb5\xa9\x99\xa9\xab\xb1\x19\xaa\x3a\x98\xdf\xea\x3a\x75\xa4\x37\x43\x7a\x5a\x1d\x1b\x53\xdc\x88\xa4\xe3\xa6\xd9\xa4\xfd\xfd\x29\xe2\x3d\x07\xfd\x67\x57\xf5\x46\xce\x96\xfa\x6f\x76\xfd\x07\x64\x32\x22\xe2\xdd\xb8\x63\xd4\x64\x89\xb4\x11\x9a\xd8\x54\x5d\x17\x6d\x84\x7a\x50\x9f\x40\x48\xd5\xda\x04\xed\x09\x96\xb0\x62\xfc\x61\x31\xd4\x95\x55\x3c\x6b\x9c\x6c\xfa\x9f\x73\x72\x87\xa5\x42\xef\x74\xb7\x0d\x75\x3d\xd7\x81\xbe\x0f\x83\x9b\xcd\x50\x8f\x53\xf1\x89\x31\xb9\x8b\xe1\xf3\xa2\xe2\xb8\x40\x75\xfd\x91\x08\xe9\x73\x8c\x75\x86\x51\xec\xee\x1e\xdb\x84\x6f\xcc\x1c\x5f\x2f\xff\x39\xda\x53\x19\x7c\x74\x84\x3c\x9f\xcb\x8a\x53\xe3\x70\x32\xe8\x70\x81\x08\xd5\x7f\x2a\x6d\xd3\xc9\xb2\xa2\x19\x9a\xb2\x48\x5d\x66\xcd\x4c\xd3\xd9\x70\x34\x68\x9f\x19\x2d\xc6\x31\xdb\xa0\x9a\x18\xfd\x4f\x58\xd9\xea\x8e\x51\xc9\x08\x95\xc0\x91\x64\x08\xa3\x4c\xb5\x29\x85\xe3\x54\xdc\xdf\x24\x35\xf9\x80\x39\x4b\x82\xaf\x0b\x10\xce\x26\xad\xc6\xe2\x18\xe1\xb2\x04\x9a\x4f\xe3\xc0\x37\xf5\x1c\xb1\x34\x4d\x67\x3e\x2d\xdf\x2b\x28\x6b\xf8\x5b\x8d\x66\x41\x45\xe0\x26\xc9\xcc\x62\x85\x28\x7c\x33\xb3\x5b\x3f\x3e\x17\x0f\x46\x97\xa9\x9b\x3f\x4d\xd3\x61\x4a\x76\x52\xc5\x2a\xf9\x17\x99\x52\x0b\xc1\xef\x73\x45\x85\x02\x32\xd9\xdb\xe9\xd5\xae\x86\x6a\x9e\x66\x1a\x56\x49\x3d\x20\x9d\x6e\xfb\x5a\x66\x06\xbf\x0e\xe2\x94\x55\xd2\xba\x43\x7f\x6f\x19\xa3\x77\xc0\xa5\xef\x0d\x1d\x89\x74\xcc\xee\xc7\xd1\xad\xfe\x3b\x1e\x76\x5a\x93\x90\xcf\x2d\x3d\x37\xb5\x4f\x1b\x91\xb0\xf6\x78\xdb\xca\x98\xea\xbb\x9d\x93\x77\xb0\xc4\x55\x21\x7f\xe5\x39\xf0\x20\xbf\xe4\xa6\x01\x31\xd5\xa2\xca\xa0\x25\x81\x22\x17\x2e\x4c\x33\x46\x25\xd0\x47\x10\xe3\x4f\x38\x9d\x21\xaf\xca\xf2\x15\xec\x17\x47\x9d\x8a\xf3\x57\xab\x56\x5b\xd6\x74\x8b\x14\x57\x7f\x36\xeb\x56\xb8\xf2\x84\xab\xb4\xa1\xc8\x50\xe2\x00\x7c\x36\xee\xac\xec\xaf\x5a\x6f\xb1\xa7\x33\x44\xa8\x1c\x4a\xa8\x20\xd3\xb7\xe7\xa7\xa7\x74\xc9\x52\xaf\xda\x32\x95\x9a\xd5\xd5\x2f\xfb\x76\x54\x0b\xdd\x2a\x61\xad\xba\x28\x23\x70\x77\x98\x5b\xc9\x77\x2f\x5f\xb6\x12\xab\x32\xa5\x7f\xc7\x2b\xdb\xbd\xb1\xd9\xe8\xfa\xef\x33\xfb\xa0\x42\x09\x1d\x28\x6b\xf5\xd6\x20\x30\x49\x31\xa2\xe7\x74\x43\x15\x53\x57\x7f\x08\x46\x17\xc9\x61\x82\xae\xf5\x2f\xbf\x6b\x4b\xac\x57\x92\x2b\x33\x4a\x6d\x80\xd2\xb3\x4a\xc2\x7d\xaf\xff\x61\x72\x65\xbd\xfb\x0b\x7c\xdb\xc1\x98\x5b\xa7\x54\x66\x1e\xcf\x36\x4a\x57\xed\xfd\x1d\x80\xd3\xd9\x76\x90\x4e\x10\x7c\xbf\xad\x6f\xfb\x35\xf8\x04\x2d\xb6\x44\xce\x7c\xe2\x05\x7b\xb0\x81\x51\x9e\x50\x69\x44\x30\xee\xed\x0d\xd0\x74\x87\x23\x67\xc1\x77\x65\xab\x31\x71\xc3\xaa\x22\xff\x8d\x13\x09\xa7\x94\x48\x82\x0b\xf2\x5f\xe0\xca\xc1\x7a\xf3\xa0\xa6\x32\x5f\x5f\x27\x28\x0e\xd2\xf3\xea\xba\x20\x99\xb2\x06\x75\x60\x0f\x08\x25\x3a\x31\x7e\x1b\x80\x05\x19\x80\x77\xc7\x92\xa5\x1d\x1e\xc8\x87\x64\xc1\xde\x2a\x4e\x64\xbf\xc6\x98\x42\x7e\xb0\x70\x1b\xab\xd4\x5d\x2a\xd9\x1a\x2d\x4f\x54\xa2\xa1\xa0\x46\x0b\xf7\x91\xf1\x86\x2d\x49\x67\xcd\x30\x7b\xa0\xc0\xae\x1f\x04\xaa\x28\xf9\xb3\x72\x05\xab\x1a\xb3\xa7\xad\x6a\xc8\x74\x86\xc2\x75\xc2\x14\xf9\x66\xac\xa7\x8d\x0b\x4e\xb7\xce\xa5\xcd\x04\x6d\xa7\xf4\xc4\x94\x00\x90\xbb\xef\xb8\xf1\x72\x21\xa0\x0b\x91\x24\xdd\x6d\xf8\x63\x08\xbb\x00\xe9\x69\x29\x40\x3e\x0f\x61\xc1\x34\x53\x92\x5b\xd2\x66\x91\xac\xc5\xd1\x85\x8e\x11\xc9\x9f\x82\x94\xa1\x85\xf6\x06\xf3\x3c\x63\x39\xe4\xdd\x25\x57\x27\xfc\x68\x22\x1e\xbd\xce\xee\x6f\xc5\x68\x05\xe5\x36\x8c\x23\x95\x54\x94\x2d\xda\x98\x97\x5d\x32\xed\xc9\x98\x1f\x82\xae\x55\x64\x9c\x94\xb2\x3d\x59\x7a\xc7\xb2\xb0\x16\x65\x59\xa5\x33\x9d\xee\xa3\xea\xe0\xf6\x7b\x89\x8d\x88\x77\x2c\x1b\x48\x22\x5a\x5d\xf8\x73\x54\x9f\xe4\x2b\x65\x39\xcb\x2e\x93\x6e\x5a\xd0\xe2\x0b\x73\x20\x15\xa4\x8f\xb0\xdb\x95\xe2\x4b\x64\xff\xc6\xd9\xad\x24\xd9\xad\xd8\x62\xf8\xd5\xd0\x27\x35\x54\xf3\x45\x90\x1c\x9b\x2e\xb4\xfe\x3d\x5a\xac\xee\xcb\xb5\x4c\x2f\x4a\x4e\xa8\x5c\x4e\x93\x7f\x7d\x27\x16\xdf\x89\x9f\x12\xb5\x8f\x6b\x97\x20\x1d\x20\xad\xc8\x64\xea\x59\xff\x68\x32\xae\x46\x6c\xa2\xc3\xd4\x13\x3f\x03\x05\x8e\x25\xfc\x0c\x52\x02\x47\x69\xaf\x5c\x38\x3a\x42\x3f\x83\x54\x26\xf6\x52\x94\x1f\x3d\x83\x1d\x6c\x56\xe1\x90\x01\xb9\xeb\x66\xd8\x83\x2d\x9c\x8d\xcc\x38\x9d\x85\xf3\xb8\xd3\xc1\x90\x52\x93\x60\x7b\xeb\x4f\xa7\xbc\xef\x53\x70\xb1\x85\x82\x8b\x11\x0a\x9a\x45\x66\x45\xee\x80\x3e\x31\x0b\x23\x93\x4e\xbd\xa4\x31\xc8\x47\xb3\x12\x0d\x33\x81\x8e\x91\x87\xd0\xf9\x02\xfc\x4d\x8f\xbd\x70\xd0\x2b\x28\xc9\xc1\x18\x9a\x55\x9c\x03\x95\x88\xd0\x25\xe3\x6b\x93\x2c\x84\x64\x1c\x72\xb5\x0a\x98\x03\x17\xb3\x73\xa9\x38\xc4\x2f\x25\x76\x2a\x55\x70\x71\xce\xb8\xb3\x40\xff\x21\xc2\xad\xfb\x7b\x2d\xdb\xb8\x14\xf0\x67\x45\x38\xe4\xef\xb7\x75\x1c\xba\x4d\xd9\xfa\x85\xb4\xcb\xb8\x4e\x00\x9f\x39\xa6\x82\x28\xab\x83\xb6\xf4\xfd\x7d\xc9\x04\xb4\x3b\x2a\x2b\xfe\x64\x75\x0a\x7b\xab\x04\xa8\x1d\x94\x98\x44\x90\xb8\x66\xd5\xc6\x79\xa8\xba\xe3\xc3\x41\xd9\x24\x12\xae\x17\x23\xfe\x9d\xfd\xa8\xf1\xfe\x71\x8c\x28\x29\xbc\x93\x8b\x0e\x55\xcd\x21\x46\x28\x9f\xab\xc1\xee\x38\x23\x5c\x8c\x06\x8d\x91\x64\x0d\x7b\x99\xf2\x99\xac\xe1\x25\x1a\x02\xf7\x12\x38\xc5\xc5\x5e\xc6\xbc\xb7\x83\x5e\xa2\x41\x84\x4a\x58\x01\xdf\xcb\x9e\x53\x2a\x5f\xa2\x29\xcb\x82\x61\xb9\x97\x21\x1f\xd4\x88\x17\x62\xca\x36\xcb\x38\x2c\x07\xec\x1a\x56\x34\x6d\xb3\xe4\x88\xca\xd0\x51\x15\xf6\x60\x9b\x71\x34\x0d\xf4\xfa\x48\x84\x4c\x66\x1d\xe1\x19\x2e\x93\x99\x53\xd8\x1e\x96\x8a\xea\xda\x3b\x2b\x1d\x5e\x73\x5a\x1d\x5b\x2b\x45\x75\xbd\xdb\xa4\x28\xb3\x5a\xd3\xb6\x18\x98\xbe\x2d\x0a\xf6\x0d\xf2\x93\x1b\x46\xb2\xf6\xb6\x72\x5b\x34\x99\xb4\x7b\x4a\xf5\x41\x73\x27\x98\x4c\x16\x9f\x8e\xc4\xd4\xbc\xdd\x2a\xa8\x71\x7f\x30\x42\x7b\x0a\x5c\x25\x73\x94\x5c\x29\xb4\x7a\xae\x97\xe4\xb7\x95\x64\x2b\x5b\x8d\xe4\x5b\x22\xf3\xaf\xb8\xb9\x55\x02\xf3\x28\x0e\xce\xb1\x2a\x8b\x68\xdc\xb7\x34\xd7\xc5\x78\x77\x8e\x2b\x63\x9e\xb7\x2e\x3e\x87\x65\x2b\x89\xd2\x33\x7c\xff\x11\xe8\x4a\xde\xa0\x37\x31\xb6\x9d\xe1\x7b\xb2\xae\xd6\x66\x48\xac\x85\x4a\xda\xce\xa3\x24\x4b\x5c\x08\x78\x36\x93\x08\xdd\xcb\x24\x42\x1f\x69\x52\x33\xcf\xf3\x9b\x84\xef\xf5\x8b\x01\xf4\x26\x7d\x33\x56\x24\xc5\xa7\x7c\xeb\xc4\x3d\x32\x7e\xe3\xc3\x2f\xf6\x3d\xc1\xd3\xd9\x6b\x77\xa7\xb1\x4a\x47\xaf\xb7\x73\x55\x5d\x4f\x3b\x6a\xcf\x9e\xda\x4f\xbb\x02\xf1\x29\xbd\x66\xe2\x74\x7f\xaf\x39\x2d\x9e\xc1\x6b\x91\x3a\x3f\xc6\x69\xad\xd6\x7f\x93\xd3\x9a\xbb\x87\x74\xe0\x99\x14\x99\xa3\x03\x7d\xbf\x39\xf8\xa8\xac\xc7\x84\x82\x5b\x3b\x6b\xb5\xe9\xde\x75\x43\x6b\xbf\x11\xc6\x96\x57\xd1\x76\x1e\x8e\xd4\x53\x11\x2c\x04\x06\xdf\x35\xa6\x6a\xcd\x3a\x6f\xca\x5a\x22\xfc\x77\x4c\x27\x95\x90\x6c\xed\xae\xb0\x5b\x84\xb4\xcf\xd0\x54\x5f\x99\x78\x38\x67\xb8\x2c\x09\x5d\xa5\xf6\xff\x28\x69\x5f\x08\x76\x95\x99\x35\xe4\xb2\x27\xa6\x8b\x2c\x51\x01\xb4\x53\xb3\xce\xd0\x4f\xe8\x4d\x83\x6d\x8f\x4d\xc2\x2e\x16\xd2\xc7\x80\x81\xb1\xcd\x68\xe8\x8d\x72\x67\x78\xa4\x88\xbf\xcb\x51\x2d\x64\x49\x32\x4d\xcc\x07\xc6\x9b\x4d\x7a\x70\xd6\xd4\x48\x83\xee\xcd\x91\xa5\x39\x8a\x69\x1f\xc1\xe9\x47\x65\xb7\xf0\xe0\x0e\x23\x76\x9d\xd7\x8d\xe9\x30\xd5\x40\xee\xb0\xbf\xcd\x0e\x23\xea\x6c\x1a\xf2\xee\xe6\x88\xdd\xda\x28\x19\x9d\xb8\x3d\x8f\x38\xc3\xe5\x57\x35\xd5\xe5\x8f\x6a\x58\x8f\xe9\x3b\x9f\xe4\xa3\x23\xf4\x1b\xa0\x8c\x55\x45\xae\xb9\x5d\x12\x9a\x23\x22\xe7\x48\x30\x54\x80\xfc\x41\xa0\xec\x06\xb2\x5b\xc4\xec\x83\x25\xf6\x0d\x38\xca\xb0\x00\xfb\x5c\x33\x47\xa2\x84\x0c\xad\x71\xd9\x3b\xbc\x1f\xd1\xf3\xa3\x82\x38\xc1\x02\x06\x14\x76\x2f\x72\x06\x09\x11\x81\x0f\x97\x55\x51\x78\x3e\x12\x61\xcf\x35\x2e\x23\xbd\x35\x32\xd7\x74\xa6\x30\xbe\x1a\x67\x5d\xc6\xfa\x2a\xc2\xfc\xc0\xea\xc9\xee\xc7\x01\x41\xff\xde\x4b\x01\x5c\xea\x77\x02\x0d\x0d\x2a\x84\xb7\xa1\xed\x7e\x6a\x18\xce\x77\xbc\x0f\x0b\x9b\x6e\xd6\xdc\xeb\xa0\xcc\xbb\x9e\x6e\x46\x28\x15\x3a\xc7\xa9\xc1\x83\xe5\xee\x52\x91\x2c\x76\x7e\x56\xfe\xc5\xcb\xe1\xe8\x7e\x46\xfd\xf8\xf2\x45\x7f\x5b\xa2\x76\x25\x01\x56\xe7\x42\x3a\xdc\xab\x2d\x46\xf6\x90\x87\x75\xbd\xd7\x3e\xaf\x2d\x36\x9a\x61\x75\xb3\x6a\xcd\xfb\xb6\x75\x36\x84\xad\x76\x7e\xc3\x62\x70\xf3\xb8\xd5\x3a\x37\xc1\xe0\x2d\xad\xfa\x09\x1a\x16\x23\xee\x8a\x9b\x82\x83\xf6\xdc\xaf\xb4\x78\x08\x66\xf0\xe4\xc6\x82\x4e\xcf\x28\xf4\xe0\x62\xd0\x6b\xf7\xe5\x06\xbd\xd3\x73\x1f\x74\x57\xba\x75\xd1\xb5\x5c\xa3\xeb\xf7\x13\x41\xef\xe0\x01\x45\x1a\x3f\x61\xc9\x21\xeb\x7a\xbb\x95\x3a\x53\xbc\x5e\x91\xb8\xc1\xf5\x5f\x0b\xdc\x88\x17\x03\xd7\x68\x9d\xbb\xb3\xa8\x99\xbc\x33\x71\xd7\x64\x45\x46\xf7\xb6\x3d\x0a\xee\x03\x29\x24\x70\x7c\x5d\x04\xfc\xb7\x52\x03\x1a\xf4\x8a\xc3\x65\x1c\xc8\x8a\xfe\x07\x82\x98\x6c\xa5\x16\xd7\xef\x15\x85\x6b\xef\xd1\xbc\x16\x23\x31\x78\x4d\x6b\x14\x96\xf7\x78\xc0\x6b\x6d\xa5\x06\x33\xe8\x15\x85\xeb\x1f\x5e\x34\x8d\x8d\x70\xd1\x3f\xe0\x88\x04\xed\x7d\x26\x4e\xb6\xe8\xed\xb7\xa3\x10\xbd\x03\x89\x16\xd2\x09\x17\xfd\x43\x8b\x48\xd0\xbe\x9a\x56\xb6\xe8\x6d\x30\x63\x10\xbb\x99\xd3\x4b\x98\x7b\xe5\x49\x9d\x98\xba\x81\xde\x08\x8d\x6e\x7e\x9f\x28\xd0\x73\x4e\xd6\x98\x3f\x74\xc2\xbc\x95\x1a\xd8\xa0\x57\x14\xee\x27\xc0\x79\x37\xa1\x3b\xd9\xc2\x1e\xf6\x35\x3d\x22\x11\xc3\x4b\x33\x83\x68\x64\x8b\xee\xf1\x61\x14\xe2\x45\xef\x53\xbc\xf0\x3e\xc5\x8b\xbd\x3e\xc5\x0b\x73\xc3\xe9\x63\x69\x89\xc5\x72\xad\x71\x58\xd5\xb5\xbd\xa8\x6d\xc1\x8c\xc8\xfd\x83\x8e\xa6\x43\x5c\xe4\xf4\xae\x27\xd5\x4f\x23\x34\x2a\xfa\x7d\xe2\x40\x3b\x2a\x7a\xfa\xed\x54\x6e\xec\x5f\x55\x79\xaf\x2e\x76\xd5\xcd\xc3\xdb\x8c\xbf\xa1\x80\x1e\x99\xf8\x65\x57\xd2\x66\x5f\x97\xbe\x96\xd1\xaf\x65\xf4\x6b\x19\xfd\x5a\x46\xbf\x96\xd1\xe8\xb5\x8c\x7e\x2d\xa3\x5f\xcb\x68\x87\xf8\x5a\x46\x47\x00\xfe\x3f\x96\xd1\xde\x1f\xff\x0b\x00\x00\xff\xff\xa3\x1f\x7b\x4a\xd9\x42\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 17113, mode: os.FileMode(420), modTime: time.Unix(1533344892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

