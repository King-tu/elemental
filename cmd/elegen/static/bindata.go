// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4b\x6b\xe4\x38\x10\xbe\xeb\x57\xd4\x86\xb0\xd8\xd0\x71\x2e\xcb\x1e\xb2\xe4\x10\x86\x19\x68\xd8\x0c\x21\x81\xbd\x34\x39\x68\xdc\x65\x47\xac\x2c\x19\x49\xce\x4c\x63\xf4\xdf\x17\xc9\xf2\x43\x8e\xd3\x8f\xd9\x24\x0b\x9b\x4b\xda\x56\x3d\xbf\x2a\x7d\x55\xae\x69\xfe\x37\x2d\x11\xda\x16\xb2\x07\x34\xd9\x27\x29\x0a\x56\x36\x8a\x1a\x26\x45\xf6\x95\x56\x08\xd6\x12\xc2\xaa\x5a\x2a\x03\x67\xa5\xcc\x68\x2d\x15\x1a\x99\x31\x79\x89\x1c\x2b\x14\x86\xf2\x33\x42\x9e\xa9\x82\x84\x00\x00\xb0\x2d\x0a\xc3\xcc\xce\x29\xeb\x5b\x5a\xc3\x35\x54\xb4\xde\x68\xa3\x98\x28\x1f\x07\x9d\x6c\x1d\xe4\xa0\xf5\x6a\xee\xaf\x6d\x2f\x40\x51\x51\x62\x17\xcc\x43\x8d\x39\x2b\x58\xee\x83\xd1\x2e\x90\x51\x10\x58\x01\xfa\x49\x36\x7c\x7b\x8f\x25\xd3\x06\x55\x24\x0d\x19\x9c\x67\x77\xcd\x37\xce\xf2\x5b\xb9\xc5\x58\xf7\x02\xce\xc7\x10\xe1\xea\x1a\x32\x27\xc3\xb3\xcf\xe3\xcb\x8b\x89\xc2\x59\xdb\x06\x81\x7b\xd4\xc6\x1d\x5b\x7b\x76\xe5\x62\x98\x9a\xb1\xb6\x4f\x68\x15\xb9\x42\xb1\x9d\x7b\x9f\xbc\xb2\x24\xc2\x2c\xa7\x06\x4b\xa9\xd8\xff\x10\x38\xd9\xa8\x1c\xdf\x05\x3c\xca\x19\xd5\xef\x88\xd8\xc5\x07\x42\xd6\xb6\x21\xaa\x73\xb6\x82\x73\x9f\xd9\x44\xe9\xa6\xcb\x14\x62\x8c\x7b\xb9\xb7\x03\x76\x4f\xa3\x8a\x2d\xfe\x58\xc0\x7a\xf3\xb8\x79\xec\x7e\x7e\x38\xc6\x0e\x81\xd9\xfd\x1c\xa0\x60\x05\x70\x14\xfd\xf1\xba\x0b\x1e\xac\x5d\x0c\x37\x0e\xd9\x17\x20\x97\x55\x2d\x1b\xb1\x9d\xd4\x60\x34\x12\x29\xf6\xf6\xda\xa9\x89\x41\xdd\x5a\x1f\xa5\xfb\xbf\x1a\x81\x05\xbb\xb7\x28\x76\xd5\xb6\x80\x5c\xbb\x74\x04\xe3\xab\x9f\xac\x5b\x4a\xc8\xe5\x25\xf8\xe0\xff\x42\xa5\x1d\x98\x0a\x4d\xa3\x84\x06\xf3\x84\x90\x37\x4a\xa1\x30\xf0\x1c\xce\x64\xe1\x5f\x57\x3e\x59\x52\x34\x22\x8f\x74\x93\x14\x0a\x2e\xa9\xf9\xfd\x37\x68\x83\x9d\x61\x78\xdc\xdc\xad\xd7\xa2\x90\x59\xef\xc6\x65\x48\x88\xd9\xd5\xc1\xdc\x2d\x15\xb4\x44\x05\xda\xa8\x26\x37\xad\x25\xde\x7c\x52\x44\xa7\x29\xf4\x1d\xfb\x45\xc9\xca\x55\x33\x11\xae\xa4\x1d\xbc\x29\x2c\xde\x6a\x9f\x6a\x88\x66\x3e\x7f\x36\x4e\xfd\x91\x1c\xe3\xed\x53\x47\xbf\xbb\x24\xf0\xf0\xee\x74\xaf\x11\x83\x6f\x7a\x3b\xc7\xb9\xf7\xd7\x3b\xe9\x2e\xf3\xd1\x8e\x47\xf6\xdb\xf8\x9f\x47\xba\x12\xbb\x84\x8a\x31\xbf\x84\x2d\x78\x4a\x7b\x57\xac\x00\x06\xd7\x50\x64\x2f\x4a\x43\xc5\x2e\xfd\x03\x7e\x61\xd9\x5a\x7f\xae\x6a\xb3\x4b\xd2\xc9\x85\xea\xa1\x89\x08\x64\xc9\xd4\x80\xfb\xc9\xe6\xc2\xbb\xd8\x5c\xc0\x51\xec\xd2\x03\x58\x14\x8c\x7e\xe3\x98\xf4\xb5\x5b\x84\x60\xfe\xae\xd3\xe9\x91\xd1\xdf\x99\xc9\x9f\x86\xea\x87\x68\x07\x16\xdf\xc3\x7b\x3f\xcd\x79\x39\xd5\xdd\xbe\xf6\x62\x90\x8c\x64\x7f\x35\x07\xed\x2b\x7e\x7f\x45\x25\x49\xc9\x02\x6d\xcc\x1e\xb7\x58\xd0\x86\x9b\x17\x66\x05\xe3\xa1\x1a\xaf\x02\xdd\xd1\xe5\x7e\x8c\x23\x3a\x8e\x6e\xd5\x30\x6e\x36\xbd\x01\xbf\x94\x1e\x6a\xf2\xae\x48\xae\x17\x1e\xbc\xd9\xa8\xd7\xf7\x57\x74\xd6\x51\xa1\x45\x66\x0d\xd6\xdd\x9e\xf4\xb8\xfe\x3a\x90\xfc\x72\x38\xfa\xcd\x3a\x4c\x48\x33\xcc\x2e\x7d\x2f\xa5\xf9\x6f\x3a\xf0\xd7\x25\x85\x3b\xde\x28\xca\xc1\xda\x3f\x99\x76\x03\xe1\x70\x27\xbe\x5d\x63\x4e\xc1\x3e\xa9\x53\xf4\xde\x56\xd1\x27\xf7\xca\x3d\xf2\xae\x70\x4f\xac\xd6\xc9\xd4\x6b\x74\xd2\x55\x48\xcd\xf9\x5f\x2d\xc9\x38\x5f\xee\x8b\xac\x0a\x13\xf7\x3a\x72\xe9\x26\xaf\x5b\x09\xc2\xe1\x74\x1b\xf0\x62\x93\x08\x6e\x27\x6a\xfd\x36\xd0\x3d\x45\x81\x4e\xc5\xc6\xbd\xa0\xf7\x6e\x89\xf7\x77\xc3\x79\x00\x86\xa1\x1e\xbc\x52\xce\x01\x7f\x30\x6d\xdc\xed\x67\xc3\x79\x70\x16\xe9\x24\x8e\x29\x0e\x0e\xc4\x25\x91\x8f\xdf\xfb\xf7\x5e\x8e\xd3\x3e\x72\x6c\x40\xcf\xcf\xf9\x2f\x52\x0d\x79\x4f\x21\x74\xc5\x0b\xab\x00\x14\x52\xf9\xe7\x92\x3d\xe3\xb8\x99\x0c\x88\xce\xed\x1c\xe2\xe6\x98\x99\x5f\xe3\xa3\x23\x60\xfd\x58\xc2\x99\x6e\xe4\xff\xea\xa3\x6a\xff\x92\x7e\x04\x49\xc5\xbb\x8a\xa3\x26\x4b\xfe\x09\x00\x00\xff\xff\xec\x98\x22\xd7\x79\x11\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 4473, mode: os.FileMode(420), modTime: time.Unix(1537418981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x6f\x1b\x37\x16\x7e\xd7\xaf\xe0\x0a\x6e\x2b\x2d\xe4\x71\x9e\xd5\x75\x81\xac\xe3\x14\xc6\xc6\xad\x11\x07\xe9\x43\x10\xd4\xf4\xcc\x19\x99\xf5\x88\x9c\x92\x1c\xc7\x5e\x61\xfe\xfb\x82\xb7\x19\x72\x2e\x12\xe5\xda\x85\x17\xb0\x1f\x5a\xcd\xe1\xe1\x77\x6e\xe4\xe1\xe1\x25\x25\x4e\x6f\xf1\x0a\xd0\x66\x83\x92\x4b\x90\xc9\x09\xa3\x39\x59\x55\x1c\x4b\xc2\x68\xf2\x0b\x5e\x03\xaa\xeb\xc9\x84\xac\x4b\xc6\x25\x9a\x4d\x10\x42\x68\x9a\xaf\xe5\xd4\xfc\x12\x0f\x34\x9d\x4e\xcc\xef\x15\x4b\x70\xc9\x38\x48\x96\x10\x76\x04\x05\xac\x81\x4a\x5c\x18\xce\xcd\x06\x71\x4c\x57\x80\x92\xcb\x12\xd2\xe4\xd3\x43\x09\x17\x9c\xdd\x91\x0c\xb8\x40\x87\x75\x6d\x20\x94\x16\xa8\xae\x9b\x2e\x40\x33\xdd\x38\x04\xf1\x19\x17\x24\xd3\x6a\xee\x01\x34\x9f\x4c\x36\x1b\x74\x50\x60\x09\x42\x7e\x06\x2e\x08\xa3\x68\x79\x6c\x21\x3f\x68\xf2\x5b\x29\x39\xb9\xae\x24\x08\xc7\xa0\x34\x68\xa4\x1f\x90\x05\x3a\x00\x5a\xad\x55\xbf\xeb\x8a\x14\xd9\x29\xad\xd6\xc2\x40\x74\xa1\xeb\x7a\x72\x74\xa4\x14\xd0\x3d\xb4\xd9\xa8\xae\x11\x87\x92\x83\x00\x2a\x05\x92\x37\x80\x4a\x26\x04\xb9\x2e\x00\xdd\xe1\xa2\x02\x81\x72\xc6\x11\x76\x5a\x68\x63\x4c\xf7\x46\x33\x1b\x97\x69\x32\x91\x0a\xb1\x87\x2f\x24\x27\x74\x35\x99\xa4\x8c\x0a\x17\xb5\xcd\xe6\xd0\x59\x40\xf1\x1a\x16\xe8\x40\x4b\x53\x56\x98\xce\x9f\x8d\x70\xeb\x42\xab\x36\x35\x92\xba\x1a\x9b\xae\x8a\xc1\xfc\xaa\xeb\xc4\xb9\xba\xe9\xd2\xd3\xea\xd8\x98\xe2\x7a\x04\xc1\xd1\xb1\x69\x7f\x4f\x94\xb6\x24\x47\x94\x49\x1b\x9b\x73\x96\x41\x91\xbc\x03\x89\xd3\x1b\xc8\x5a\xc7\xfa\xad\xa7\x54\x12\xf9\x60\x9d\x73\x96\x81\xfe\xec\xaa\xde\xd0\x59\xae\xbf\xd9\xf5\x1f\x90\xca\x64\x72\x87\x79\x1c\xde\x31\x6a\xc6\x76\xd2\x10\x37\xda\x18\xc5\xba\x44\xcd\x08\xf4\xa0\x3e\x82\x90\xaa\xb5\xae\xa7\x0b\xcd\x7a\x82\x25\xac\x18\x7f\x58\x0e\xb1\xb2\x8a\xa7\x4d\x90\x0d\xff\x05\x27\x77\x58\x2a\xf4\x0e\xbb\x6d\xa8\xeb\xc5\xa4\xde\xd3\x83\x9b\xcd\x10\xc7\x99\xf8\xc8\x98\xdc\xe5\xe1\x8b\xa2\xe2\xb8\x40\x75\xfd\x81\x08\xe9\xfb\x18\xa3\x42\x51\x58\x1e\xd1\xb7\x19\xbe\x31\x32\xbe\x7c\xfd\xe7\x28\xa7\x32\xf8\xe8\x08\x79\x31\x97\x15\xa7\x26\xe0\x64\x30\xe0\x02\x11\xaa\x3f\x95\xb6\xc9\x24\xaf\x68\x8a\x66\x2c\x52\x97\x79\x23\x69\x36\x1f\x1e\x0d\x3a\x66\x46\x8b\x71\xcc\x76\x50\x4d\x8c\xfe\x27\xac\x6c\x75\xc7\xa8\x64\x84\x4a\xe0\x48\x32\x84\x51\xaa\xda\x94\xc2\x71\x2a\xee\x6f\x92\x12\x3e\x60\x4e\x4e\xf0\x75\x01\xc2\xd9\xa4\xd5\x58\x1e\x23\x5c\x96\x40\xb3\x59\x1c\xf8\xa6\x5e\x20\x96\x24\xc9\xdc\x77\xcb\xf7\x0a\xca\x1a\xfe\x56\xa3\x59\x50\x11\x84\x49\x32\xfd\x89\x11\x85\x6f\x46\xba\x8d\xe3\x73\xf9\xc1\xe8\x32\x73\xf2\x93\x24\x19\x76\xc9\x4e\x57\xb1\x4a\xfe\x45\x4f\xa9\x85\xe0\xf7\x85\x72\x85\x02\x32\xd9\xdb\xe9\x65\x32\x8e\x93\xd3\x88\x61\x95\xd4\x1d\x92\xd9\xb6\xd9\x32\x37\xf8\x75\x30\x4e\x59\x25\x6d\x38\xf4\x7c\x4b\x19\xbd\x03\x2e\xfd\x68\xe8\x91\x48\xc7\xec\x7e\x9c\xbb\xd5\x7f\xc7\x87\x9d\xd6\x24\xf4\xe7\x16\xce\x4d\xed\xbb\x8d\x48\x58\x7b\x7e\xdb\xea\x31\xc5\xbb\xdd\x27\xef\x20\xc7\x55\x21\x7f\xe5\x19\xf0\x20\xbf\x64\xa6\x01\x31\xd5\x42\xe8\x0a\xe5\x04\x8a\x4c\xb8\x61\x9a\x32\x2a\x81\x3e\xc2\x31\xbe\xc0\xd9\x1c\x7d\xf9\x6a\x56\xf5\x4e\x72\x71\xe4\xd6\xb8\x4e\x9d\xf4\xab\x55\xab\x2d\x6b\xba\x45\x8a\xab\x9a\x9a\x75\x2b\x5c\x79\xc2\x55\xda\xb8\xc8\xb8\xc4\x01\xf8\xde\xb8\xb3\xb4\xbf\x6a\xbd\xc5\x9e\xcd\x11\xa1\x72\x28\xa1\x82\x4c\xde\x5e\x9c\x9d\xd1\x9c\x25\x5e\xb5\x65\x2a\x35\xab\xab\x5a\x02\xdd\x72\xb8\xa3\x5a\xe8\x56\x09\x6b\xc5\xa2\x8c\xc0\xdd\x6e\x6e\x25\xdf\xbd\x7c\xd9\x4a\xac\x4a\x95\xfe\x9d\xa8\x6c\x8f\xc6\x66\xa3\xeb\xbf\x4f\xec\xbd\x1a\x4a\xe8\x40\x59\xab\x0b\xda\xc0\x24\xe5\x11\x2d\xd3\x75\x55\x9e\xba\xfa\x43\x30\xba\x9c\x1e\x4e\xd1\xb5\xfe\xf1\xbb\xb6\xc4\x46\x65\x7a\x65\x7a\xa9\xb2\x3d\x39\xaf\x24\xdc\xf7\xf8\x0f\xa7\x57\x36\xba\xbf\xc0\xb7\x1d\x1e\x73\xeb\x94\xca\xcc\xe3\xd9\x46\xe9\xaa\xa3\xbf\x03\x70\x36\xdf\x0e\xd2\x19\x04\xdf\x6f\xe3\x6d\x67\x83\xef\xa0\xe5\x96\x91\xb3\x98\x78\x83\xfd\xd0\xaf\xf5\x55\x24\x54\x1a\x11\x8c\x7b\x7b\x03\x34\xdb\x11\xc8\x79\x30\xaf\x6c\x35\x26\x6e\x58\x55\x64\xbf\x71\x22\xe1\x8c\x12\x49\x70\x41\xfe\x0b\x5c\x05\x58\x6f\x1e\x94\x28\x33\xfb\x3a\x83\xe2\x20\xb9\xa8\xae\x0b\x92\x2a\x6b\x50\x07\xf6\x80\x50\xa2\x13\xe3\xb7\x01\x58\x90\x01\x78\xb7\x2f\xc9\x6d\xf7\x80\x3e\x44\x3b\xf4\x13\x40\x1c\xc9\xce\xc6\x98\x42\x7e\xb0\x70\x1b\xab\xd4\x5d\x2a\xd9\x3a\x5a\x9e\xa8\x44\x43\x41\x8d\xe6\xcf\xbe\x7d\x0c\xcb\x49\x67\xcd\x30\x7b\xa0\xc0\xae\x1f\x04\xaa\x28\xf9\xb3\x72\x05\xab\xea\xb3\xa7\xad\xaa\xcb\x6c\x8e\xc2\x75\xc2\x14\xf9\xa6\xaf\xa7\x8d\x1b\x9c\x6e\x9d\x4b\x1a\x01\x2d\x53\x72\x62\x4a\x00\xc8\xdc\x3c\x6e\xa2\x5c\x08\xe8\x42\x4c\xa7\x93\xce\x20\x78\x8c\xc3\x2e\x41\x7a\x5a\x0a\x90\xcf\xe3\xb0\x40\xcc\x8c\x64\xd6\x69\xf3\x48\xaf\xc5\xb9\x0b\x1d\x23\x92\x3d\x85\x53\x86\x16\xda\x1b\xcc\xb3\x94\x65\x90\x75\x97\x5c\x9d\xf0\xa3\x1d\xf1\xe8\x75\x76\x7f\x2b\x46\x2b\x28\xb7\x61\x1c\xa9\xa4\xa2\x6c\xd1\xc6\xbc\xec\x92\x69\x4f\x8f\xf9\x43\xd0\xb5\x8a\x94\x93\x52\xb6\x27\x4b\xef\x58\x1a\xd6\xa2\x2c\xad\x74\xa6\xd3\x3c\xaa\x0e\x6e\xe7\x4b\xec\x88\x78\xc7\xd2\x81\x24\xa2\xd5\x85\x3f\x47\xf5\x99\x7e\xa1\x2c\x63\xe9\xd7\x69\x37\x2d\x68\xf2\xa5\x39\x90\x0a\xd2\x47\xc8\x76\xa5\xfc\x25\xd2\x7f\xe3\xf4\x56\x92\xf4\x56\x6c\x31\xfc\x6a\x68\x4a\x0d\xd5\x7c\x11\x4e\x8e\x4d\x17\x5a\xff\x9e\x5b\xac\xee\xf9\x5a\x26\x97\x25\x27\x54\xe6\xb3\xe9\xbf\xbe\x13\xcb\xef\xc4\x4f\x53\xb5\x8f\x6b\x97\x20\x3d\x40\x5a\x92\xc9\xd4\xf3\xde\xa0\x88\xac\x11\x9b\xd1\x61\xea\x89\x9f\x81\x02\xc7\x12\x7e\x06\x29\x81\xa3\xa4\x57\x2e\x1c\x1d\xa1\x9f\x41\x2a\x13\x7b\x29\xca\x1f\x3d\x83\x0c\x36\xab\x70\x48\x81\xdc\x75\x33\xec\xc1\x16\x9f\x8d\x48\x9c\xcd\x43\x39\xee\x74\x30\x74\xa9\x49\xb0\xbd\xf5\xa7\x53\xde\xf7\x5d\x70\xb9\xc5\x05\x97\x23\x2e\x68\x16\x99\x15\xb9\x03\xfa\xc4\x5e\x18\x11\x3a\xf3\x92\xc6\xa0\x3f\x9a\x95\x68\xd8\x13\xe8\x18\x79\x08\x9d\x19\xe0\x6f\x7a\xec\x31\xb9\x5e\x41\x49\x06\xc6\xd0\xb4\xe2\x1c\xa8\x44\x84\xe6\x8c\xaf\x4d\xb2\x10\x92\x71\xc8\xd4\x2a\x60\x0e\x5c\xcc\xce\xa5\xe2\x10\xbf\x94\x58\x51\xaa\xe0\xe2\x9c\x71\x67\x81\xfe\x10\xe1\xd6\xfd\x54\xd3\x36\x2e\x05\xfc\x59\x11\x0e\xd9\xe9\x36\xc6\xa1\x3b\x80\xad\x33\xa4\x5d\xc6\x75\x02\xf8\xc4\x31\x15\x44\x59\x1d\xb4\x25\xa7\xf7\x25\x13\xd0\xee\xa8\x2c\xf9\xa3\xd5\x29\xe4\x56\x09\x50\x07\x68\x6a\x12\xc1\xd4\x35\xab\x36\xce\x43\xd5\x9d\x3f\x1c\x94\x4d\x22\xe1\x7a\x31\x12\xdf\xf9\x8f\x1a\xef\x1f\xc7\x88\x92\xc2\x3b\xb9\xe8\xb8\xaa\x39\xc4\x08\xe9\x0b\xd5\xd9\x1d\x67\x84\x8b\xd1\xa0\x31\x92\xac\x61\x2f\x53\x3e\x91\x35\xbc\x44\x43\xe0\x5e\x02\xa7\xb8\xd8\xcb\x98\x53\xdb\xe9\x25\x1a\x44\xa8\x84\x15\xf0\xbd\xec\x39\xa3\xf2\x25\x9a\x92\x17\x0c\xcb\xbd\x0c\x79\xaf\x7a\xbc\x10\x53\xb6\x59\xc6\x21\x1f\xb0\x6b\x58\xd1\xa4\xcd\x92\x23\x2a\x43\x47\x55\xd8\xc3\xdb\x8c\xa3\x59\xa0\xd7\x07\x22\xe4\x74\xde\x21\x9e\xe3\x72\x3a\x77\x0a\xdb\xc3\x52\x51\x5d\x7b\x67\xa5\xc3\x6b\x4e\xab\x63\x6b\xa5\xa8\xae\x77\x9b\x14\x65\x56\x6b\xda\x16\x03\x93\xb7\x45\xc1\xbe\x41\x76\x72\xc3\x48\xda\xde\x56\x6e\x1b\x4d\x26\xed\x9e\x51\x7d\xd0\xdc\x19\x4c\x26\x8b\xcf\x46\xc6\xd4\xa2\xdd\x2a\xa8\x7e\x7f\x30\x42\x7b\x0a\x5c\x4d\x17\x68\x7a\xa5\xd0\xea\x85\x5e\x92\xdf\x56\x92\xad\x6c\x35\x92\x6d\x19\x99\x7f\x25\xcc\xad\x12\x98\x47\xf9\xe0\x02\xab\xb2\x88\xc6\xcd\xa5\x85\x2e\xc6\xbb\x32\xae\x8c\x79\xde\xba\xf8\x1c\x96\xad\x24\x4a\xce\xf1\xfd\x07\xa0\x2b\x79\x83\xde\xc4\xd8\x76\x8e\xef\xc9\xba\x5a\x9b\x2e\xb1\x16\x2a\x6a\x2b\x47\x51\x72\x5c\x08\x78\x36\x93\x08\xdd\xcb\x24\x42\x1f\x69\x52\x23\xe7\xf9\x4d\xc2\xf7\xfa\xc5\x00\x7a\x93\xbc\x19\x2b\x92\xe2\x53\xbe\x0d\xe2\x1e\x19\xbf\x89\xe1\x67\xfb\x9e\xe0\xe9\xec\xb5\xbb\xd3\x58\xa5\xa3\xd7\xdb\x85\xaa\xae\x67\x1d\xb5\xe7\x4f\x1d\xa7\x5d\x03\xf1\x29\xa3\x66\xc6\xe9\xfe\x51\x73\x5a\x3c\x43\xd4\x22\x75\x7e\x4c\xd0\x5a\xad\xff\xa6\xa0\x35\x77\x0f\x89\x7f\xf8\xea\xdd\x4d\xe8\xfb\xcd\xc1\xa7\x50\x3d\x4f\x28\xb8\xb5\xb3\x56\x9b\xee\x5d\x37\xb4\xf6\x1b\x62\x6c\x79\x15\x6d\xe7\xe1\x48\x3d\x15\xe1\x85\xc0\xe0\xbb\xc6\x54\xad\x59\xf3\x74\xcb\x6c\x48\x5b\x47\xf8\xef\x98\x4e\x2a\x21\xd9\xda\x5d\x61\xb7\x08\x49\x23\xe0\x60\x8d\xcb\x92\xd0\x95\x7e\x0c\xa5\x8f\x3c\x5b\xa4\x73\xd3\x94\xd8\xff\xa3\x69\xfb\xb2\xad\xa7\x8e\x17\x24\x92\xb7\xa8\xc3\xb1\xb0\xb8\x2e\x22\xec\xe9\x7c\x3c\xe4\x72\x92\xa3\x02\x68\xa7\xee\x9d\xa3\x9f\xd0\x9b\x46\x94\x3d\x7a\x09\x59\xac\x04\x1f\x03\x06\xfa\x36\xbd\xa1\xd7\xcb\x9d\x03\x92\x22\xfe\x3e\x48\xb5\x90\x9c\xa4\xda\xb5\xef\x19\x6f\x36\xfa\xc1\x79\x55\x43\x0d\xd8\x9b\x63\x4f\x73\x9c\xd3\x3e\xa4\xd3\x0f\xd3\x6e\xe1\xc1\x1d\x68\xec\x3a\xf3\x1b\xd3\x61\xa6\x81\xdc\x85\x41\x9b\x61\x46\xd4\xd9\x34\xce\xbb\x5b\x20\x76\x6b\xe3\x3f\x2a\xb8\x3d\xd3\x38\xc7\xe5\x17\x25\xea\xeb\x8f\xaa\x5b\xcf\xd3\x77\xbe\x93\x8f\x8e\xd0\x6f\x80\x52\x56\x15\x99\xf6\x6d\x4e\x68\x86\x88\x5c\x20\xc1\x50\x01\xf2\x07\x81\xd2\x1b\x48\x6f\x11\xb3\x8f\x9e\xd8\x37\xe0\x28\xc5\x02\x10\xa1\x19\xdc\x43\x86\x44\x09\x29\x5a\xe3\xd2\x8f\xd9\x36\x3d\x3f\x28\x88\x13\x2c\x60\x40\x61\xf7\xaa\x67\xd0\x21\x22\x88\x61\x5e\x15\x85\x17\x23\x11\x72\xae\x71\x19\x19\xad\x11\x59\xb3\xb9\xc2\xf8\x62\x82\xf5\x35\x36\x56\x11\xe6\x07\x56\x4f\x76\x3f\x30\x08\xf8\x7b\xaf\x0d\x70\xa9\xdf\x1a\x34\x6e\x50\x43\x78\x1b\xda\xee\xe7\x8a\xa1\xbc\xe3\x7d\xbc\xb0\xe9\x66\xde\xbd\x0e\xdb\xbc\x2b\xee\xa6\x87\x52\xa1\x73\x24\x1b\x3c\xd5\xed\x2e\x37\xd3\xe5\xce\x69\xe5\x5f\xde\x1c\x8e\xee\x89\xd4\x9f\x4f\x5f\xf6\xb7\x36\x6a\x67\x13\x60\x75\x2e\xb5\xc3\xfd\xde\x72\x64\x1f\x7a\x58\xd7\x7b\xed\x15\xdb\x82\xa5\xe9\x56\x37\x2b\xdf\xa2\x6f\x5b\x67\x53\xd9\x6a\xe7\x37\x2c\x07\x37\xa0\x5b\xad\x73\x02\x06\x6f\x7a\xd5\x5f\xd0\xb0\x1c\x09\x57\x9c\x08\x0e\x3a\x72\xbf\xd2\xe2\x21\x90\xe0\xd1\x8d\x05\x1d\xce\x28\xf4\xe0\x72\xd1\x6b\xf7\xe9\x06\xbd\xc3\xb9\x0f\xba\x2b\xff\xba\xe8\x9a\xae\xd1\xf5\x1b\x8c\x80\x3b\x78\x84\x91\xc4\x0b\x2c\x39\xa4\xdd\x68\xb7\x54\x67\x8a\xc7\x15\x89\x1b\x5c\x21\xb6\xc0\x0d\x79\x39\x70\x15\xd7\xb9\x7f\x8b\x92\xe4\x9d\xab\xbb\x26\x4b\x32\xba\xb7\xed\x51\x70\xef\x49\x21\x81\xe3\xeb\x22\xf0\x7f\x4b\x35\xa0\x01\x57\x1c\x2e\xe3\x40\x56\xf4\x3f\x10\x8c\xc9\x96\x6a\x71\x7d\xae\x28\x5c\x7b\x17\xe7\xb5\x18\x8a\xc1\x6b\x5a\xa3\xb0\xbc\x07\x08\x5e\x6b\x4b\x35\x98\x01\x57\x14\xae\x7f\x00\xd2\x34\x36\xc4\x65\xff\x90\x24\x12\xb4\x37\x4d\x1c\x6d\xd9\xdb\xb3\x47\x21\x7a\x87\x1a\x2d\xa4\x23\x2e\xfb\x07\x1f\x91\xa0\x7d\x35\x2d\x6d\xd9\xdb\xa4\xc6\x20\x76\x33\xa7\x97\x30\xf7\xca\x93\x3a\x31\x75\x07\x7a\x43\x34\xba\xf9\x3c\x51\xa0\x17\x9c\xac\x31\x7f\xe8\x0c\xf3\x96\x6a\x60\x03\xae\x28\xdc\x8f\x80\xb3\x6e\x42\x77\xb4\xa5\x3d\x30\x6c\x38\x22\x11\xc3\x8b\x37\x83\x68\x68\xcb\xee\x11\x64\x14\xe2\x65\x6f\x2a\x5e\x7a\x53\xf1\x72\xaf\xa9\x78\x69\x6e\x49\x7d\x2c\x4d\xb1\x58\xae\x35\x0e\xab\xba\xb6\x97\xbd\x2d\x98\x21\xb9\x7f\x14\xd2\x30\xc4\x8d\x9c\xde\x15\xa7\xfa\x6b\x88\x46\x45\x9f\x27\x0e\xb4\xa3\xa2\xa7\xdf\x4e\xe5\xac\x84\xf1\xad\xe9\xee\xba\x79\x78\x9b\xf1\x37\x14\xd0\x23\x82\x5f\x76\x25\x6d\xf6\x75\xc9\x6b\x19\xfd\x5a\x46\xbf\x96\xd1\xaf\x65\xf4\x6b\x19\x8d\x5e\xcb\xe8\xd7\x32\xfa\xb5\x8c\x76\x88\xaf\x65\x74\x04\xe0\xff\x63\x19\xed\x7d\xfc\x2f\x00\x00\xff\xff\xcd\x5a\x0b\x00\xd3\x41\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16851, mode: os.FileMode(420), modTime: time.Unix(1537419988, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

