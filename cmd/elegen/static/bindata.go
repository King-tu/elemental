// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x6b\xe4\x38\x17\xdd\xfb\x57\xdc\x2f\x84\x0f\x1b\x2a\xce\x66\x98\x45\x86\x2c\x42\xd3\x0d\x05\x93\x26\x24\x30\x9b\x22\x0b\xb5\xeb\xda\x11\x23\x4b\x46\x92\xd3\x5d\x18\xfd\xf7\x41\xb2\xfc\x90\xcb\xf5\x4a\xd2\xd5\xd0\xd9\xa4\xca\xd2\x7d\x9d\xa3\x7b\x74\x5d\x15\xc9\xfe\x25\x05\x42\xd3\x40\xfa\x84\x3a\xfd\x24\x78\x4e\x8b\x5a\x12\x4d\x05\x4f\xbf\x92\x12\xc1\x98\x28\xa2\x65\x25\xa4\x86\x8b\x42\xa4\xa4\x12\x12\xb5\x48\xa9\xb8\x46\x86\x25\x72\x4d\xd8\x45\x14\xbd\x12\x09\x71\x04\x00\x40\xd7\xc8\x35\xd5\x1b\x6b\xac\xee\x49\x05\xb7\x50\x92\x6a\xa5\xb4\xa4\xbc\x78\xee\x6d\xd2\xa5\xdf\x07\x8d\x33\xb3\x7f\x4d\x73\x05\x92\xf0\x02\xdb\x64\x9e\x2a\xcc\x68\x4e\x33\x97\x8c\xb2\x89\x0c\x1b\x81\xe6\xa0\x5e\x44\xcd\xd6\x8f\x58\x50\xa5\x51\x06\xbb\x21\x85\xcb\xf4\xa1\xfe\xc6\x68\x76\x2f\xd6\x18\xda\x5e\xc1\xe5\x90\x22\xdc\xdc\x42\x6a\xf7\xb0\xf4\xf3\xf0\xf0\x6a\x64\x70\xd1\x34\x7e\xc3\x23\x2a\x6d\x97\x8d\xb9\xb8\xb1\x39\x8c\xdd\x18\xd3\x15\xb4\x08\x42\x21\x5f\x4f\xa3\x8f\x1e\x99\x28\xc0\x2c\x23\x1a\x0b\x21\xe9\x6f\x08\x9c\xa8\x65\x86\x3f\x05\x3c\xc2\x28\x51\x3f\x11\xb1\xab\x33\x42\xd6\x34\x3e\xab\x4b\xba\x80\x4b\x57\xd9\xc8\xe8\xae\xad\x14\x42\x8c\xbb\x7d\x1f\x07\xec\x9e\x83\xca\xd7\xf8\x63\x06\xeb\xd5\xf3\xea\xb9\xfd\x78\x76\x8c\x2d\x02\x93\xfe\xec\xa1\xa0\x39\x30\xe4\xdd\xf2\xb2\x4d\x1e\x8c\x99\x4d\x37\x4c\xd9\x11\x90\x89\xb2\x12\x35\x5f\x8f\x38\x18\x9c\x04\x86\x9d\xbf\x66\xec\xa2\x37\x37\xc6\x65\x69\xff\x2f\x06\x60\xc1\xec\x25\xc5\x2c\x9a\x06\x90\x29\x5b\x0e\xa7\x6c\xf1\x46\xde\x92\x28\xba\xbe\x06\x97\xfc\x3f\x28\x95\x05\x53\xa2\xae\x25\x57\xa0\x5f\x10\xb2\x5a\x4a\xe4\x1a\x5e\xfd\x9a\xc8\xdd\xe3\xd2\x15\x1b\xe5\x35\xcf\x02\xdb\x38\x81\x9c\x09\xa2\xff\xfc\x03\x1a\xef\xa7\xbf\x3c\xee\x1e\x96\x4b\x9e\x8b\xb4\x0b\x63\x2b\x8c\x22\xbd\xa9\xbc\xbb\x7b\xc2\x49\x81\x12\x94\x96\x75\xa6\x1b\x13\x39\xf7\x71\x1e\xac\x26\xd0\x9d\xd8\x2f\x52\x94\x96\xcd\x98\x5b\x4a\x5b\x78\x13\x98\xed\x6a\x57\xaa\xcf\x66\x7a\xff\xac\xac\xf9\x73\x74\x4c\xb4\x4f\xad\xfc\x6e\x62\xaf\xc3\x9b\xd3\xa3\x06\x0a\xbe\xea\xfc\x1c\x17\xde\xb5\x77\xdc\x36\xf3\xd1\x81\x07\xf5\x5b\xb9\x8f\x47\x86\xe2\x9b\x98\xf0\xa1\xbe\x98\xce\x44\x4a\xba\x50\x34\x07\x0a\xb7\x90\xa7\x5b\xd4\x10\xbe\x49\xfe\x82\xff\xd1\x74\xa9\x3e\x97\x95\xde\xc4\xc9\xa8\xa1\x3a\x68\x02\x01\x99\x73\xd5\xe3\x7e\xb2\x3b\xff\x2c\x74\xe7\x71\xe4\x9b\xe4\x00\x16\x39\x25\xdf\x18\xc6\x1d\x77\xb3\x10\x4c\x9f\xb5\x36\x1d\x32\xea\x3b\xd5\xd9\x4b\xcf\xbe\xcf\xb6\x57\xf1\x3d\xba\xf7\x66\xcd\xcb\x88\x6a\xe7\xb5\xad\x8b\x64\x10\xfb\x9b\x29\x68\x5f\xf1\xfb\x0e\x93\x38\x89\x66\x64\x63\xf2\x75\x8d\x39\xa9\x99\xde\x72\xcb\x29\xf3\x6c\xec\x02\xfa\xa9\x22\x52\xe1\x5b\xe0\xde\xb6\xfc\x85\xa0\x7b\x43\x2e\x74\x7f\x0f\xa8\x47\x21\xf4\x7b\x49\x69\x8b\x7c\x0f\x35\x1f\xc6\x94\xbf\xd8\xf6\xd3\x13\x5c\x9c\x81\xfe\xf5\x83\xc1\xaa\x73\xe0\x5e\x1f\x0e\xc9\x51\xcb\xac\xed\xda\x27\xe7\x36\x50\xa5\xfd\xbd\x37\xe9\x7d\x7f\xba\x26\x52\xd0\xea\x5c\x72\x9c\x12\x1c\x28\x7e\x3e\x1d\xf5\x61\xc7\x72\xe7\xe9\x3a\xaf\x56\xfc\x7f\xce\xe0\x81\xd5\x92\x30\x30\xe6\x6f\xaa\xec\xd5\x7d\xc6\x83\xb9\x2d\x04\x47\xf3\x34\x63\xfa\xdb\xb1\xb5\x5b\x42\x7e\x21\x67\x01\xe4\x27\x75\xb7\xda\xdb\xde\xea\xe4\xfe\x7e\x44\xd6\xd2\xf7\x42\x2b\x15\x8f\xa3\x06\x2b\x2d\x4f\x72\x3a\x5d\xc9\xb9\x3d\x36\xd6\x2b\x91\x50\xfa\x79\xf6\x36\x08\x69\xe7\x5a\x3b\x70\xfb\xc5\xf1\xac\xed\xb6\x8d\x32\xb8\x1f\x99\x75\xb3\x76\xfb\x2d\x48\x74\xbc\x6d\x98\xba\xbb\xe8\x26\x72\xf1\xee\x18\xf3\xc0\x50\x54\x7d\x54\xc2\x18\xe0\x0f\xaa\xb4\x55\x6c\xda\xaf\xfb\x60\x81\x4d\x6c\xd5\xfd\xe0\xb8\x39\xb7\xe5\xfc\x6f\xd5\x7b\x5b\xe4\xb4\x9f\x10\x8c\x47\xcf\x4d\xd1\x5f\x84\xec\xeb\x1e\x43\x68\xc9\xf3\x83\x36\xe4\x42\xba\xef\x05\x7d\xc5\x61\xee\xef\x11\x9d\xfa\x39\x74\x9f\x86\xb7\xe9\x2e\x55\x3a\x02\xd6\xf3\xca\xce\xf8\x7d\xf7\x5d\x3f\x59\xec\x7f\x05\x3e\x42\xa4\xc2\x37\x01\x2b\x4d\x26\xfa\x2f\x00\x00\xff\xff\x51\x27\x8c\xfd\xd7\x14\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 5335, mode: os.FileMode(420), modTime: time.Unix(1543916004, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\x5d\x73\xdc\x36\x92\xcf\x9a\x5f\x81\x9d\x52\xbc\x43\xef\x88\xf2\xf3\x64\xb5\x55\x3e\xc7\x49\xa9\xce\x4e\x54\x91\x2f\xfb\xe0\x72\xc5\x10\xd9\x1c\x21\xe6\x00\x34\x00\xca\xd6\x4d\xcd\x7f\xbf\xc2\x07\x09\x80\x1f\x33\xa0\x2c\xf9\x74\x75\xf2\x43\x32\xc2\x47\xa3\xbf\xd0\xe8\x6e\x80\x5d\xe1\xec\x13\x5e\x03\xda\x6e\x51\x7a\x09\x32\x7d\xc5\x68\x41\xd6\x35\xc7\x92\x30\x9a\xfe\x8a\x37\x80\x76\xbb\xd9\x8c\x6c\x2a\xc6\x25\x5a\xcc\x10\x42\x68\x5e\x6c\xe4\xdc\xfc\x12\xb7\x34\xb3\x3f\xd7\x2c\xc5\x15\xe3\x20\x59\x4a\xd8\x29\x94\xb0\x01\x2a\x71\xd9\xf4\x12\x79\x5d\x5f\xa5\x19\xdb\x9c\x6e\x88\xcc\xae\xa1\x2c\xaf\x4f\x33\x56\xdd\x0a\xc9\xeb\x4c\xd6\x1c\xcc\xc0\xed\xf6\x04\x71\x4c\xd7\x80\xd2\xcb\x0a\xb2\xf4\xdd\x6d\x05\x17\x9c\xdd\x90\x1c\xb8\x50\xa8\x68\x68\x0a\x5b\xb4\xdb\xb9\x29\x40\x73\x74\x62\x7b\xbb\x20\xfe\xc0\x25\xc9\x35\x3d\x91\x80\x76\xbb\x59\x32\x9b\x6d\xb7\xe8\xb8\xc4\x12\x84\xfc\x03\xb8\x20\x8c\xa2\xd5\x99\x85\xf8\x46\x37\xbf\x94\x92\x93\xab\x5a\x82\x68\x06\x28\x4e\x6d\xb7\x76\xf1\x63\xb2\x44\xc7\x40\xeb\x8d\x9a\x77\x55\x93\x32\x7f\x4d\xeb\x8d\x30\x20\xba\xa0\x77\xbb\xd9\xe9\xa9\x12\x82\x9e\xa1\xa9\x46\xbb\x1d\xe2\x50\x71\x10\x40\xa5\x40\xf2\x1a\x50\xc5\x84\x20\x57\x25\xa0\x1b\x5c\xd6\x20\x50\xc1\x38\xc2\x0d\x16\x9a\x18\x33\xbd\xc5\xcc\xca\x6f\x9e\xce\xa4\x82\xd8\x83\x2f\x24\x27\x74\x3d\x9b\x65\x8c\x8a\x46\xba\x8e\x7d\xc7\x14\x6f\x60\x89\x8e\xf5\x6a\x8a\x0a\x33\xf9\x0f\xb3\xb8\x65\xa1\x45\x9b\x9a\x95\xba\x18\x9b\xa9\x6a\x80\xf9\xb5\xdb\xa5\x76\x11\x37\xa5\x87\xd5\x99\x21\xa5\x99\xd1\x08\xc7\xc9\xc6\xfd\x9e\x29\x6c\x49\x81\x28\x93\x56\x36\x6f\x59\x0e\x65\xfa\x13\x48\x9c\x5d\x43\xee\x18\xeb\xf7\xbe\xa6\x92\xc8\x5b\xcb\x9c\xf3\x1c\xf4\x9f\x5d\xd4\xdb\x76\x56\xe8\xbf\xd9\xd5\x5f\x90\xc9\x74\x76\x83\x79\x1c\xbc\x33\xd4\x6e\x82\xb4\x6d\xdc\x6a\x62\xd4\xd0\x15\x6a\x35\xd0\x03\xf5\x3b\x08\xa9\x7a\x77\xbb\xf9\x52\x0f\x7d\x85\x25\xac\x19\xbf\x5d\x0d\x0d\x65\x35\xcf\x5a\x21\x9b\xf1\x17\x66\x43\xaf\xfa\xa0\x6d\x8f\x1b\xc9\xc9\x0d\x96\x6a\x64\x77\xa0\xe9\xd8\xed\x96\xb3\xdd\x44\x5e\x6f\xb7\x43\x23\xce\xc5\xef\x8c\xc9\x43\xb2\xb8\x28\x6b\x8e\x4b\xb4\xdb\xbd\x21\x42\xfa\xd2\xc0\xa8\x54\x2d\xac\x88\x98\xdb\x2a\x7a\xcc\x1a\xef\x3f\x3c\x1f\x1d\xa9\x08\x3e\x3d\x45\x9e\x76\xc8\x9a\x53\xa3\x1a\x64\x50\x35\x04\x22\x54\xff\xa9\xb0\x4d\x67\x45\x4d\x33\xb4\x60\x91\xb8\x24\xed\x4a\x8b\x64\x58\x6f\xb4\xcc\x0c\x16\xe3\x30\x9d\xfa\xcd\x0c\xfe\xaf\x58\xe5\x70\xc7\xa8\x62\x84\x4a\xe0\x48\x32\x84\x91\x32\xbf\x1a\xe1\x38\x14\xa7\x93\xa4\x16\x1f\x20\xa7\x20\xf8\xaa\x04\xd1\xd0\xa4\xd1\x58\x9d\x21\x5c\x55\x40\xf3\x45\x1c\xf0\xed\x6e\x89\x58\x9a\xa6\x89\xcf\x96\x67\x0a\x94\x25\xfc\xa5\x86\x66\x81\x8a\x40\x4c\x92\xe9\x3f\x31\xa2\xf0\xc5\xac\x6e\xe5\xf8\x50\x7c\x30\xb8\x2c\x9a\xf5\xd3\x34\x1d\x66\xc9\x41\x56\xb1\x5a\x7e\x23\xa7\xd4\x91\xf1\xe7\x52\xb1\x42\x01\x32\x76\xbe\xc1\xcb\xd8\xa6\x66\x9d\x76\x19\x56\x4b\x3d\x21\x5d\xec\xdb\x2d\x89\x81\xbf\x0b\xf4\x94\xd5\xd2\x8a\x43\xef\xb7\x8c\xd1\x1b\xe0\xd2\x97\x86\xd6\x44\x3a\x46\xf7\xdd\xd8\xad\xfe\x3b\xae\x76\x1a\x93\x90\x9f\x1b\xfc\x09\x16\x7b\x86\x2f\x51\x09\x74\xc1\x12\xc7\x42\xa2\xa6\xbd\xf8\x11\x11\xf4\x4f\xdb\xf7\x23\x22\xff\xf8\x47\xc8\xc2\xf7\xe4\x03\x3a\x43\xec\x3d\xf9\xb0\x97\x35\x3f\x41\x81\xeb\x52\xfe\xc6\x73\xe0\x81\x99\xc9\x4d\x07\x62\xaa\x87\xd0\x35\x2a\x08\x94\xb9\x68\xb4\x35\x63\x54\x02\xbd\x03\x7f\xfc\x05\x17\x09\x7a\xff\xc1\xb8\x01\x1d\x1b\xd3\x34\x3b\x92\x5a\xd7\xc6\xac\xf2\x9b\x45\xcb\xf9\x41\x5d\xaf\xa6\xf1\xc8\xda\x83\x2e\x3c\xaa\xc2\x63\xdd\xb0\xc8\xb0\xe4\x1d\xbb\xac\x30\x17\x10\xb0\x23\xd2\xa8\x5b\x25\x83\x5c\xa9\x96\x01\x13\xbb\xaf\x4f\x4f\xd1\x6f\x7d\x53\x8e\xbe\x90\xb2\x44\x8c\x96\xb7\x9a\xe5\xd8\x76\xad\xc9\x0d\x50\x2b\x92\x14\xfd\xca\xcc\x4f\xb4\x01\x4c\x05\x52\x0a\xc4\xc1\x36\x09\xb8\x83\x90\x1a\x16\x2c\xac\xd0\xd3\x34\x35\xf2\x78\x54\x8a\x9d\x76\xd0\x6c\xed\xcc\x98\xb2\x37\xaa\xe1\x0b\xf6\xc6\xb6\x7d\xab\x5e\x5b\xd8\x8b\x04\x11\x2a\x87\x4e\x4c\x90\xe9\xcb\x8b\xf3\x73\x5a\xb0\xd4\x73\xbc\x8d\xd3\x6e\xb5\xd0\x8b\x01\x0e\x39\x8e\x5d\x87\x71\xa3\x86\x28\x22\x70\x77\x5a\xe3\xd4\x1d\xf6\x4f\xac\x53\x5e\x67\x0a\xff\xce\x7e\xdb\xbf\xcf\xb6\x5b\x1d\x0a\xbc\x63\x3f\x6b\x9d\x3b\x56\xd4\xa2\x02\x97\x02\x74\x84\x13\x10\xa6\xf8\xa2\x57\x6e\x00\x28\x7e\x7d\xfc\x4b\x30\xba\x9a\x9f\xcc\xd1\x95\xfe\xf1\xa7\xa6\xc7\xca\x66\xfe\xd1\xcc\x7a\xae\x02\xbe\xf4\x6d\x2d\xe1\x6b\x6f\xc2\xc9\xfc\xa3\x15\xf2\xaf\xf0\xe5\x00\xe3\x1a\x7f\x44\x9d\xc0\xe3\xa7\x8a\x42\x56\x2b\xc1\x01\x80\x8b\x64\x3f\x90\x8e\x2e\x3c\xdb\x37\xd6\x29\xba\xcf\xa1\xd5\x1e\x05\x5a\xce\x3c\x6b\x76\xe2\x47\x7f\x4a\x20\x6a\x3f\x09\xc6\xbd\x68\x11\x2d\x0e\xc8\x33\x09\x0c\xa7\xf5\xba\xc5\x35\xab\xcb\xfc\xdf\x9c\x48\x38\xa7\x44\x12\x5c\x92\xff\x06\xae\xe4\xac\xc3\x49\xb5\x94\x31\xaf\x1d\xdd\x38\x4e\x2f\xea\xab\x92\x64\x8a\x1a\xd4\x01\x7b\x4c\x28\xd1\x76\xe2\xcb\x00\x58\x90\x01\xf0\xee\x5c\x52\xd8\xe9\x41\xfb\x50\xdb\x89\x6f\xe1\xe3\x9a\xec\xa6\x8c\x09\xed\x06\x1d\xf4\xb1\xd8\xad\xb1\x28\x7b\xb5\xe5\x9e\x5c\x71\x14\xf8\xe2\xfe\xf6\x9b\x42\x58\x41\x3a\x4e\x81\x89\x8a\x03\xba\xfe\x2e\x50\x4d\xc9\xe7\xba\x09\x4c\xd4\x9c\x89\xb4\xaa\x29\x8b\x04\x85\x8e\x80\x09\xe6\xcc\x5c\x0f\x9b\x46\x39\x1b\xdb\x9e\xb6\x0b\xb8\x41\xe9\xab\xe6\x14\x6e\xf6\x71\x2b\x65\x65\x91\x3a\x20\xe6\xbd\xfc\xcb\x5d\x18\x76\x09\xd2\xc3\x52\x80\x7c\x18\x86\x05\xcb\x2c\x48\x8e\x9a\x63\x39\x8e\x6b\x71\xec\x42\x67\x88\xe4\xf7\xc1\x94\xa1\xf3\xf6\x1a\xf3\x3c\x63\x39\xe4\xdd\x93\x57\x5b\xfc\x68\x46\xdc\xf9\xb8\x9d\x4e\xc5\xa8\x8b\xdc\x24\x06\x46\x5c\xe5\x28\x5a\x34\x31\x8f\xdb\x27\x9e\xc8\x31\x5f\x05\x9b\x5e\x91\x71\x52\x49\x97\x6b\xfc\x89\x65\x61\xb0\xc1\xb2\x5a\x5b\x3a\x3d\x46\xb9\x82\x6e\xbf\xc4\x6a\xc4\x4f\x2c\x1b\x30\x22\x1a\x5d\xf8\x3c\x8a\xcf\xfc\x3d\x65\x39\xcb\x3e\xcc\xbb\x66\x41\x37\x5f\x9a\x14\x65\x60\x3e\xc2\x61\x1f\x15\xbf\x44\xf6\x1f\x38\xfb\x24\x49\xf6\x49\xec\x21\xfc\xe3\xd0\x96\x1a\x72\xfd\x22\x98\x1c\x6b\x2e\x34\xfe\x3d\xb6\x58\xdc\x8b\x8d\x4c\x2f\x2b\x4e\xa8\x2c\x16\xf3\x7f\xfe\x20\x56\x3f\x88\x7f\xcd\x55\xbc\xee\x8e\x20\xad\x20\xae\xc9\x58\xea\xa4\xa7\x14\x91\xae\x62\xab\x1d\xc6\x9f\xf8\x05\x28\x70\x2c\xe1\x17\x90\x12\x38\x4a\x7b\xee\xc2\xe9\x29\xfa\x05\xa4\x22\xb1\x67\xa2\xba\xb1\x59\x6f\x80\xb5\x2a\x1c\x32\x20\x37\x5d\x0b\x7b\xbc\x87\x67\x23\x2b\x2e\x92\x70\x9d\x26\x5f\x1c\xb2\xd4\x18\xd8\xde\xf9\xd3\xf1\xf2\xfb\x2c\xb8\xdc\xc3\x82\xcb\x11\x16\xb4\x87\x4c\xc5\x59\x05\x5c\x39\x07\x11\x8c\x40\xb5\x50\x9a\xe0\x82\x48\x7d\x44\xc5\xb3\x67\x04\x9b\x85\x67\x4d\x06\x19\xd5\x1e\x51\xc3\x2c\x42\x67\xc8\x83\xd0\xd9\x1a\xdd\x9d\x81\x69\x8e\x16\x63\xdb\x23\xe9\x77\x99\x14\x70\x62\xf9\x39\x18\xdf\x0b\xd3\x34\x7c\x26\xa9\x49\xd7\xcd\x78\xc8\x9b\xec\xd1\xbd\x86\xe6\x07\x76\x72\x54\x44\x6e\x86\xf8\x81\x76\xc3\x74\x52\xe8\x80\xda\x4c\x4e\xd0\xd9\x19\x7a\xe1\x45\xd5\xa7\xa7\x88\xb2\x92\x50\xb9\x42\x6b\x66\x6e\xdb\x44\xdb\xd9\xc4\x2d\x07\xb2\x19\x66\x2f\x20\xef\x5f\xf7\x2a\x6c\xaf\x5d\x08\x27\xf6\xf5\x63\x85\x9e\x0d\x2b\xce\xb2\xb7\x66\xc7\xbb\xdf\xf9\x29\x01\x51\xa9\x88\x23\x8a\x96\x9d\x9f\xb2\x2c\x5c\xc2\xd2\x0a\xc0\xd1\x2a\xbe\x10\x99\x5d\xa3\xe2\xbe\xc8\xcf\xb0\x80\xf0\x74\x5e\x05\xfd\x86\x8e\x3e\x33\xf4\x26\x7a\xb6\x18\x66\x53\x32\x89\x4d\x56\xe6\xa2\xb2\x31\xf5\x05\x56\x14\xe2\xaa\x2a\x4d\xce\x9e\x32\x8a\x28\x29\x9d\x7b\x8b\xd1\xf3\x08\x9e\xda\xdc\xf7\xc4\x80\x48\x2f\xbe\xb0\x1b\x74\x9f\xb2\x27\xfe\xb1\xaf\xe3\x46\xe1\xae\x4d\x0f\xb2\xbf\x89\x2b\xcd\x3c\xdb\x48\x0a\xf4\x37\xb3\xb2\x7f\x28\x9e\x8b\xd7\x9f\x6b\x5c\x2e\xfc\x93\x32\xf1\xc4\x5f\x61\x4a\xb2\xc5\x3c\xc3\x54\x59\xa2\x4a\x33\xaf\xe0\x6c\x83\x30\x32\x54\x7c\x21\xf2\x1a\xe5\xa4\x28\x80\x03\x95\xed\x95\xce\x3c\x48\x5f\x09\xa6\xc3\x77\xb3\xfa\x22\x82\xbf\xc9\xac\x7b\x87\xda\xa5\x45\x8c\x18\xdf\xbf\x9d\x69\x71\x7a\x79\xb6\x31\x23\xfd\x7c\x04\xc4\xac\xd5\xa1\x50\xb7\x46\x23\x08\xed\x58\x43\xd5\xb9\x22\xca\x01\x2a\x73\x2b\x42\x0e\xdc\x8a\xe8\xdb\xdc\x58\xd7\xd0\x2e\x14\x9b\xaa\x21\x05\x62\xca\x46\x1a\x9e\x1c\x1d\x35\x2e\x21\x29\x67\x47\xbb\xd9\xec\xc8\x26\x38\xf7\xa7\x72\x76\xb3\x23\x96\x36\x2b\x9f\x53\xc9\x16\xac\x96\xc9\x6c\x76\x34\x90\x83\x77\x83\x14\xf1\x04\x44\x78\x64\x13\x6a\x77\x8e\x39\x5b\xf6\xd2\x30\x99\x29\x0d\x6a\x87\xc6\x6f\x67\xb3\x23\x89\xf9\x1a\xe4\x12\x01\xd7\xa9\xa5\xe0\x09\x45\xaa\x39\xcc\x92\xd9\x91\xf2\xb8\x39\x77\x4a\x75\x74\x64\x36\x44\xe0\x6f\xfe\x17\xd5\xe7\x93\x64\x5a\xe6\x5a\xe4\xfb\xd6\x5f\xa1\x1f\xc4\x5c\x2f\x9c\x24\x46\x08\xcf\xcd\x3d\xd1\x73\x83\xd3\xbe\xfb\x21\xbd\x35\x6c\x06\xd8\x3c\xc7\xd0\x81\x39\xc9\x2d\x9f\xb3\x9a\x9b\x6d\x48\x0b\xc6\x37\x26\x06\x11\x92\x71\xc8\x1d\xe7\x1d\x99\xd1\x11\xaa\x5d\x6a\x91\x28\xac\x19\x6f\x94\x4b\xff\xa1\x0d\x93\xb3\x65\xaf\x75\xdb\xb6\x89\x2c\x3e\xd7\x84\x43\xfe\x7a\xdf\xc0\x26\xda\x9f\x74\xc2\x78\x17\xe4\xef\x38\xa6\x82\x28\xaa\x83\xbe\xf4\xf5\xd7\x8a\x09\x70\x99\x5a\xdb\xfc\xbb\xc5\x29\x1c\xad\xe2\x2a\xed\xde\xcd\x8d\x2f\x32\xf7\x4c\x8d\x55\x11\x87\x7a\xc3\x8f\x06\x94\x8d\x4d\xc2\x30\x74\xc4\xf0\x24\x3f\x86\x1a\xe5\x7c\x93\x80\x55\xed\xad\x61\xd8\x6e\xd4\xc6\x59\x28\x2f\xc6\x1d\x24\x46\x92\x0d\x4c\x22\xe5\x1d\xd9\xc0\xe3\x21\x84\x71\xb4\x70\xc4\xc0\x57\x09\x9c\xe2\x72\x9e\xf8\xad\x25\x11\x72\x9e\x4c\x20\xf1\xb5\x05\xf3\x78\xc8\x74\xc4\x10\x2a\x61\x0d\x7c\x92\xc8\xce\xa9\x7c\x8c\xa4\x14\x25\xc3\x72\x12\x21\x3f\xab\x19\x8f\x84\x94\x7d\x94\x71\x28\x06\xe8\x1a\x46\x34\x75\xb6\x73\x04\x65\xe8\xa0\x0a\x77\xde\x1f\x1c\x8a\x37\x7a\x33\x74\x1a\xdf\xe2\x6a\x9e\x34\x08\xdb\x28\x40\xd4\x57\xde\xc3\x85\x61\x17\xc9\xe1\xe8\xa8\x14\xf5\xd5\x61\x92\xa2\xc8\xf2\x3d\xf5\x51\x02\xd3\x97\x65\xc9\xbe\x40\xfe\xea\x9a\x91\x0c\x44\x8c\x36\x19\x63\x7c\x4e\xf5\xeb\x85\x8e\x32\x19\xdb\x3e\x16\x57\x2c\x5d\x5e\x52\xcd\xfb\x8b\x11\xda\x43\xe0\xe3\x7c\x89\xe6\x1f\x15\xb4\xdd\x52\x9f\xf2\x2f\x6b\xc9\xd6\x36\xf5\x91\xef\xd1\xcc\x6f\x11\xb3\x43\x02\xf3\x28\x1e\x5c\x60\xa9\x6c\x5c\xdc\x5e\x5a\xea\xcc\x5f\x77\x8d\x8f\x03\xcd\x6f\x41\x08\xbc\x06\xd3\xab\x3a\xbd\xb3\xf4\x21\xe8\x5e\x4b\x94\xbe\xc5\x5f\xdf\x00\x5d\xcb\x6b\xf4\x22\x86\xf2\xb7\xf8\x2b\xd9\xd4\x1b\x33\x25\x96\x7e\xd5\xea\xd6\x51\x2d\xfa\xc2\xf7\xc1\x48\x22\x74\x12\x49\x84\xde\x91\xa4\x76\x9d\x87\x27\x09\x7f\xd5\xcf\x59\xd1\x8b\xf4\xc5\x98\x63\x15\x7f\x20\x58\x21\x4e\x38\x0f\x5a\x19\xfe\x61\x1f\xbb\xde\x1f\xbd\x36\x51\x1e\x8b\x74\xf4\x69\xbc\x54\x1e\xf9\xa2\x83\x76\x72\xdf\x72\x3a\xa4\x88\xf7\x29\x35\xa3\xa7\xd3\xa5\xd6\x60\xf1\x00\x52\x8b\xc4\xf9\x2e\x42\x73\x58\x7f\x27\xa1\xb5\xcf\x20\x52\xd4\x7b\xa1\xaf\x9f\x49\xe8\x17\xf2\xfb\x9e\xe9\x3b\x4e\x28\x70\x9b\x86\x5a\x4d\xba\xf7\xf2\xc1\xd1\x6f\x1a\x63\x9d\xaf\x68\x3a\x4f\x46\xbc\xad\x08\x2e\x04\x04\xdf\xb4\xa4\x6a\xcc\xda\x04\x99\x09\x62\x1d\x23\xfc\x47\xf6\xaf\x6a\x21\xd9\xa6\xc9\x7b\x3b\x08\xa9\x4b\xb7\x6d\x70\x55\x11\xba\xd6\x2f\xf5\xf5\xed\xab\x83\xf4\xd6\x74\xa5\xf6\xff\x68\xee\xbe\xcf\xe8\xa1\xd3\x49\xc6\x35\x50\x87\x65\x61\xe1\x36\x12\x61\x63\x3c\xb6\x19\x5a\x4d\x2c\x70\x9e\x2e\xe4\x6d\x05\x7e\xc2\x4e\xa7\x5c\xbb\x51\xf6\x2a\xce\x35\x6b\x5f\x9d\x8d\x01\x8a\x84\xe3\x80\xd8\xfb\xe4\xc9\xf3\x76\xc3\xfa\x32\xa4\x3e\xf6\x3e\x20\xf4\xf0\x13\xf4\x2f\xef\x5a\xc0\xa6\xa9\xc2\x21\x7e\x7e\xd2\xc2\x80\x81\xb9\xed\x6c\xe8\xcd\xf2\x72\x69\xf1\x8f\x2b\x2a\xc8\x48\x41\x32\xad\x26\x3f\x33\xde\x26\x3a\x82\x2b\x9c\xb6\x35\x18\xde\xde\x26\x9b\xdc\x99\xfb\x62\x45\x7f\x01\xf2\x09\x6e\x9b\x84\xce\xa1\xab\xd4\x31\x1c\x16\x1a\x50\xff\x32\x66\x04\x1d\x97\x62\xbc\x59\x22\xf6\xc9\xea\xf2\xe8\xc2\x2e\xa7\xf3\x16\x57\xef\xd5\x52\x1f\x7e\x54\xd3\x7a\x9c\xbe\xf1\x99\x7c\x7a\x8a\xfe\x0d\x28\x63\x75\x99\x6b\xde\x16\x84\xe6\x88\xc8\x25\x12\x0c\x95\x20\xff\x2e\x50\x76\x0d\xd9\x27\xc4\xec\x43\x53\xf6\x05\xb8\xd1\x5d\x42\x73\xf8\x0a\x39\x12\x15\x64\x68\x83\x2b\x5f\x66\xfb\xf0\x7c\xa3\x40\xbc\xc2\x02\x06\x10\x6e\x1e\xc5\x0f\x32\x44\x04\x32\x2c\xea\xb2\xf4\x64\x24\xc2\x91\x1b\x5c\x45\x4a\x6b\x64\xad\x45\xa2\x60\xbc\x37\xc2\xfa\x10\x2b\xab\x08\xf2\x03\xaa\x5d\xae\xb1\x86\x51\x6d\x35\x57\x27\x23\xca\x69\xaf\x1c\x89\x40\x44\x20\x8c\x6e\x80\xdf\x22\x9c\xdf\x60\x9a\x41\x8e\x14\x03\x34\x7a\xf2\x1a\x4b\x74\xcb\x6a\x7b\x97\xac\x25\x4d\x01\x72\x74\x55\x4b\x44\x28\x12\x6c\x03\x0a\x90\x9e\xde\xb0\x12\xd5\x02\xb4\xa8\xe3\xde\xa7\xd8\x4c\x66\x48\x48\xa8\xf2\xfa\xa3\x8e\x02\x67\xb0\x6d\x13\xe8\xd6\xe0\xea\x61\xdb\xce\x21\x14\x99\xab\xdc\x77\x0b\xb6\xff\xb2\x7d\xc0\xfc\x0d\xda\x9e\x03\x2f\x6c\x03\x91\xf6\x9e\xdb\xe2\x4a\x5f\x7b\xb5\xa2\x55\x82\xdc\x9f\x96\x3f\xf4\xe9\x56\xb8\xde\xd9\x14\x45\xdd\x76\x0f\xfa\x49\xf9\x60\xef\x71\x67\x3b\x43\xa1\xd0\x79\x8c\x70\xe2\x7f\xb6\xd8\x65\xfa\x7c\x75\xd0\xf2\xf9\xcf\x96\x4e\x46\x03\x74\xf5\xcf\x6f\x5f\xf5\x03\x6a\x15\x48\x07\xb0\x3a\x37\x99\x61\xf2\x61\x35\x92\x14\x39\xd9\xed\x26\x25\x2e\x9c\x7f\xdc\x4e\xdb\xb5\x8e\xd6\xb2\x4f\x5b\x27\xc3\xe1\xb0\xf3\x3b\x56\x83\xd9\x90\xbd\xd4\x35\x0b\x0c\xaa\xbd\xfa\x17\x74\xac\x46\xc4\x15\xb7\x04\x07\x2d\xb9\xdf\x68\x79\x1b\xac\xe0\xb5\x1b\x0a\x3a\x23\xa3\xa0\x07\xcf\xea\xbc\x7e\xbf\xdd\x40\xef\x8c\x9c\x02\xbd\x89\x36\xba\xd0\x75\xbb\x86\xae\x5f\x1f\x07\xa3\x83\xe7\xc7\x69\xfc\x82\x15\x87\xac\x2b\x6d\xd7\xda\x90\xe2\x8d\x8a\x84\x1b\x3c\x9e\x73\x80\xdb\xe6\xd5\xc0\x23\xb4\xce\xcb\xb3\xa8\x95\xbc\xab\x9f\xa6\xcb\x36\x19\xdc\x5d\x7f\x14\xb8\x9f\x49\x29\x81\xeb\x4b\x3e\xaf\xd7\xb5\x1a\xa0\xc1\xa8\x38\xb8\x8c\x03\x59\xd3\xff\x84\x40\x27\x5d\xab\x85\xeb\x8f\x8a\x82\x6b\x5f\xa1\x79\x3d\xa6\xc5\xc0\x6b\x7b\xa3\x60\x79\x4f\x6f\xbd\x5e\xd7\x6a\x60\x06\xa3\xa2\xe0\xfa\xf9\xb6\xb6\xb3\x6d\x5c\xf5\x73\x72\x91\x40\x7b\xdb\xa4\x69\x5b\xf5\x52\x44\x51\x10\xbd\x1c\x9a\x03\xd9\x34\xae\xfa\x79\xb6\x48\xa0\x7d\x34\x6d\xdb\xaa\x97\x13\x89\x81\xd8\xb5\x9c\x9e\xc1\x9c\x64\x27\xb5\x61\xea\x2a\x7a\xdb\x68\x70\xf3\xc7\x44\x01\xbd\xe0\x64\x83\xf9\x6d\x47\xcd\x5d\xab\x01\x1b\x8c\x8a\x82\xfb\x3b\xe0\xbc\x6b\xd0\x9b\xb6\x95\xcd\x4f\xb7\x23\x22\x21\x86\x77\xc3\x06\xa2\x69\x5b\x75\x33\xde\x51\x10\x2f\x21\xe3\x10\x7c\xc8\x61\x5a\x9a\x0f\x61\x6c\x6f\x24\xac\xee\xb6\xbe\xf4\xb6\xf5\xe5\xa4\x6d\x7d\x69\x1e\x05\xf8\xb0\x74\x8b\x85\xd5\xf4\xc6\xc1\xaa\xaf\xec\xcb\x48\x07\xcc\x34\x35\x1f\xdb\xb7\x03\xe2\xb4\xb0\x77\xa3\xaf\xfe\xb5\x8d\x06\x45\x7f\x4c\x1c\xd0\x0e\x8a\x1e\x7e\x07\x91\xb3\x2b\x8c\x67\x22\x0e\xfb\xe0\xc3\x51\xe5\x77\x70\xc6\x47\x16\x7e\xdc\x5e\xb9\x09\xe3\xd3\x27\x97\xfc\xc9\x25\x7f\x72\xc9\x9f\x5c\xf2\x27\x97\x1c\x3d\xb9\xe4\x4f\x2e\xf9\x93\x4b\xde\x40\x7c\x72\xc9\x9f\x5c\xf2\x83\x2e\xf9\xb6\xff\x21\xe2\x37\x7c\x6e\x65\x6e\xef\xe2\xcb\xa0\x0c\x57\xde\x8a\x85\x60\xea\x5b\x4c\x5a\xef\xfd\x87\x43\x1f\x56\xdc\x5b\x2d\xae\x29\x78\xfd\xaf\x56\xe4\x9a\x56\xb7\xe6\x6e\xe4\xdd\xa9\x3a\xd7\x94\x25\x1e\xa4\x46\xd7\xf7\xe0\xcc\x03\xd5\xeb\xba\x3b\xef\xbe\xad\x6a\xd7\xc1\xdd\xf5\x1d\x6a\x77\x4d\x13\xc0\xff\xd7\x0a\x5e\xd3\xb8\xf4\xb8\x6b\x16\x98\xef\x7c\x2f\x4a\x4c\xc2\xea\x13\x93\xce\x86\xa0\x98\xd7\xc3\x6e\x7a\x8b\xeb\xe3\x52\xbb\xb4\xc5\x6a\xaf\x02\xde\xa5\xaa\xd6\x34\xee\xdc\xbd\xb6\xd6\x61\xf7\x63\xa0\x96\x56\xff\x5b\xf0\x7d\x45\xb5\xd2\x28\xaf\x23\xa8\xad\x35\xb0\x0f\x0e\xeb\xff\x60\x8d\x2d\xc9\x6b\x08\x9f\x36\x7e\xc7\x32\x5b\x51\x9c\xf5\x8b\x6d\x45\x30\x29\x6d\x6b\x6e\x1d\x1e\xbb\x48\xa2\xbe\x3a\xde\x06\x1e\xc0\xe1\x09\xdb\x46\x73\xa2\xaa\x3b\x59\x65\xe9\x7d\xd3\x1c\xf1\xb9\xee\x43\x94\x7a\x8a\x2d\xde\x14\xa0\x7d\xa0\x24\x51\x3c\x29\x77\xa9\xe4\x44\x8a\xe8\xb2\x44\xfd\x0f\x97\xfc\x0a\x4e\x3b\x9f\x5d\xcf\x1f\xa8\x32\x54\x6c\xad\xa7\xfb\xe6\xef\xf7\x2a\xfc\xf4\x6c\xa8\xf2\xd3\x37\xd7\x72\x8a\xa1\xf0\x9b\x8c\xfc\xd0\x59\x5f\xe9\x96\x0e\x66\x56\x2e\x77\x41\x70\xe8\x8c\xd6\x2d\x43\x05\x37\xec\x19\x7d\xb0\x76\x60\xcb\xec\x49\x57\x44\xed\x9e\xe9\x16\x80\xb0\x4f\x9f\xc3\x13\x7d\xf4\x5b\xfe\x43\x9f\xf2\xf7\x0e\x94\xf0\xec\xff\x3f\x56\xf7\xa7\x95\xf1\x83\x55\xff\x19\x63\xe8\xe3\x2c\xff\x83\xf3\x9c\x83\x68\xe3\x81\xe1\x6a\x40\x51\x4c\x7b\xb8\x9a\x40\xcf\xb6\x87\x8b\x02\x45\x56\x92\x88\xf6\x3d\x62\xed\x81\x5f\x55\x22\xca\x0d\x69\xb7\x6e\x4c\x6d\x89\x28\x3f\xe5\xc1\x2a\x4c\x3c\x18\xb3\x5c\xb5\x89\x98\x59\x0f\x5f\x73\xe2\x30\x16\x11\x95\x27\x62\x4a\xb3\xf8\x2a\xfb\x3f\x01\x00\x00\xff\xff\xf0\xda\xa4\x18\xf8\x64\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 25848, mode: os.FileMode(420), modTime: time.Unix(1553196983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1541454909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

