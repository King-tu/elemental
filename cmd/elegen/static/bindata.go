// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4b\x6b\xe4\x38\x10\xbe\xeb\x57\xd4\x86\xb0\xd8\xd0\x71\x2e\xcb\x1e\xb2\xe4\x10\x86\x19\x68\xd8\x0c\x21\x81\xbd\x34\x39\x68\xdc\x65\x47\xac\x2c\x19\x49\xce\x4c\x63\xf4\xdf\x17\xc9\xf2\x43\x8e\xd3\x8f\xd9\x24\x0b\x9b\x4b\xda\x56\x3d\xbf\x2a\x7d\x55\xae\x69\xfe\x37\x2d\x11\xda\x16\xb2\x07\x34\xd9\x27\x29\x0a\x56\x36\x8a\x1a\x26\x45\xf6\x95\x56\x08\xd6\x12\xc2\xaa\x5a\x2a\x03\x67\xa5\xcc\x68\x2d\x15\x1a\x99\x31\x79\x89\x1c\x2b\x14\x86\xf2\x33\x42\x9e\xa9\x82\x84\x00\x00\xb0\x2d\x0a\xc3\xcc\xce\x29\xeb\x5b\x5a\xc3\x35\x54\xb4\xde\x68\xa3\x98\x28\x1f\x07\x9d\x6c\x1d\xe4\xa0\xf5\x6a\xee\xaf\x6d\x2f\x40\x51\x51\x62\x17\xcc\x43\x8d\x39\x2b\x58\xee\x83\xd1\x2e\x90\x51\x10\x58\x01\xfa\x49\x36\x7c\x7b\x8f\x25\xd3\x06\x55\x24\x0d\x19\x9c\x67\x77\xcd\x37\xce\xf2\x5b\xb9\xc5\x58\xf7\x02\xce\xc7\x10\xe1\xea\x1a\x32\x27\xc3\xb3\xcf\xe3\xcb\x8b\x89\xc2\x59\xdb\x06\x81\x7b\xd4\xc6\x1d\x5b\x7b\x76\xe5\x62\x98\x9a\xb1\xb6\x4f\x68\x15\xb9\x42\xb1\x9d\x7b\x9f\xbc\xb2\x24\xc2\x2c\xa7\x06\x4b\xa9\xd8\xff\x10\x38\xd9\xa8\x1c\xdf\x05\x3c\xca\x19\xd5\xef\x88\xd8\xc5\x07\x42\xd6\xb6\x21\xaa\x73\xb6\x82\x73\x9f\xd9\x44\xe9\xa6\xcb\x14\x62\x8c\x7b\xb9\xb7\x03\x76\x4f\xa3\x8a\x2d\xfe\x58\xc0\x7a\xf3\xb8\x79\xec\x7e\x7e\x38\xc6\x0e\x81\xd9\xfd\x1c\xa0\x60\x05\x70\x14\xfd\xf1\xba\x0b\x1e\xac\x5d\x0c\x37\x0e\xd9\x17\x20\x97\x55\x2d\x1b\xb1\x9d\xd4\x60\x34\x12\x29\xf6\xf6\xda\xa9\x89\x41\xdd\x5a\x1f\xa5\xfb\xbf\x1a\x81\x05\xbb\xb7\x28\x76\xd5\xb6\x80\x5c\xbb\x74\x04\xe3\xab\x9f\xac\x5b\x4a\xc8\xe5\x25\xf8\xe0\xff\x42\xa5\x1d\x98\x0a\x4d\xa3\x84\x06\xf3\x84\x90\x37\x4a\xa1\x30\xf0\x1c\xce\x64\xe1\x5f\x57\x3e\x59\x52\x34\x22\x8f\x74\x93\x14\x0a\x2e\xa9\xf9\xfd\x37\x68\x83\x9d\x61\x78\xdc\xdc\xad\xd7\xa2\x90\x59\xef\xc6\x65\x48\x88\xd9\xd5\xc1\xdc\x2d\x15\xb4\x44\x05\xda\xa8\x26\x37\xad\x25\xde\x7c\x52\x44\xa7\x29\xf4\x1d\xfb\x45\xc9\xca\x55\x33\x11\xae\xa4\x1d\xbc\x29\x2c\xde\x6a\x9f\x6a\x88\x66\x3e\x7f\x36\x4e\xfd\x91\x1c\xe3\xed\x53\x47\xbf\xbb\x24\xf0\xf0\xee\x74\xaf\x11\x83\x6f\x7a\x3b\xc7\xb9\xf7\xd7\x3b\xe9\x2e\xf3\xd1\x8e\x47\xf6\xdb\xf8\x9f\x47\xba\x12\xbb\x84\x8a\x31\xbf\x84\x2d\x78\x4a\x7b\x57\xac\x00\x06\xd7\x50\x64\x2f\x4a\x43\xc5\x2e\xfd\x03\x7e\x61\xd9\x5a\x7f\xae\x6a\xb3\x4b\xd2\xc9\x85\xea\xa1\x89\x08\x64\xc9\xd4\x80\xfb\xc9\xe6\xc2\xbb\xd8\x5c\xc0\x51\xec\xd2\x03\x58\x14\x8c\x7e\xe3\x98\xf4\xb5\x5b\x84\x60\xfe\xae\xd3\xe9\x91\xd1\xdf\x99\xc9\x9f\x86\xea\x87\x68\x07\x16\xdf\xc3\x7b\x3f\xcd\x79\x39\xd5\xdd\xbe\xf6\x62\x90\x8c\x64\x7f\x35\x07\xed\x2b\x7e\x7f\x45\x25\x49\xc9\x02\x6d\xcc\x1e\xb7\x58\xd0\x86\x9b\x17\x66\x05\xe3\xa1\x1a\xaf\x02\xdd\xd1\xe5\x7e\x8c\x23\x3a\x8e\x6e\xd5\x30\x6e\x36\xbd\x01\xbf\x94\x1e\x6a\xf2\xae\x48\xae\x17\x1e\xbc\xd9\xa8\xd7\xf7\x57\x74\xd6\x51\xa1\x45\x66\x0d\xd6\xdd\x9e\xf4\xb8\xfe\x3a\x90\xfc\x72\x38\xfa\xcd\x3a\x4c\x48\x33\xcc\x2e\x7d\x2f\xa5\xf9\x6f\x3a\xf0\xd7\x25\x85\x3b\xde\x28\xca\xc1\xda\x3f\x99\x76\x03\xe1\x70\x27\xbe\x5d\x63\x4e\xc1\x3e\xa9\x53\xf4\xde\x56\xd1\x27\xf7\xca\x3d\xf2\xae\x70\x4f\xac\xd6\xc9\xd4\x6b\x74\xd2\x55\x48\xcd\xf9\x5f\x2d\xc9\x38\x5f\xee\x8b\xac\x0a\x13\xf7\x3a\x72\xe9\x26\xaf\x5b\x09\xc2\xe1\x74\x1b\xf0\x62\x93\x08\x6e\x27\x6a\xfd\x36\xd0\x3d\x45\x81\x4e\xc5\xc6\xbd\xa0\xf7\x6e\x89\xf7\x77\xc3\x79\x00\x86\xa1\x1e\xbc\x52\xce\x01\x7f\x30\x6d\xdc\xed\x67\xc3\x79\x70\x16\xe9\x24\x8e\x29\x0e\x0e\xc4\x25\x91\x8f\xdf\xfb\xf7\x5e\x8e\xd3\x3e\x72\x6c\x40\xcf\xcf\xf9\x2f\x52\x0d\x79\x4f\x21\x74\xc5\x0b\xab\x00\x14\x52\xf9\xe7\x92\x3d\xe3\xb8\x99\x0c\x88\xce\xed\x1c\xe2\xe6\x98\x99\x5f\xe3\xa3\x23\x60\xfd\x58\xc2\x99\x6e\xe4\xff\xea\xa3\x6a\xff\x92\x7e\x04\x49\xc5\xbb\x8a\xa3\x26\x4b\xfe\x09\x00\x00\xff\xff\xec\x98\x22\xd7\x79\x11\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 4473, mode: os.FileMode(420), modTime: time.Unix(1537418981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x6f\x1b\x37\x16\x7e\xd7\xaf\xe0\x0a\x6e\x2b\x2d\xe4\x71\x9e\xd5\x75\x81\xac\xe3\x14\xc6\xc6\xad\x11\x07\xe9\x43\x10\xd4\xf4\xcc\x19\x99\xf5\x88\x9c\x92\x1c\xc7\x5e\x61\xfe\xfb\x82\xb7\x19\x72\x2e\x12\xe5\xda\x85\x17\x70\x1e\x76\xad\xc3\xc3\xef\x5c\xe7\xf0\xf0\xd2\x12\xa7\xb7\x78\x05\x68\xb3\x41\xc9\x25\xc8\xe4\x84\xd1\x9c\xac\x2a\x8e\x25\x61\x34\xf9\x05\xaf\x01\xd5\xf5\x64\x42\xd6\x25\xe3\x12\xcd\x26\x08\x21\x34\xcd\xd7\x72\x6a\xfe\x12\x0f\x34\x9d\x4e\xcc\xdf\x2b\x96\xe0\x92\x71\x90\x2c\x21\xec\x08\x0a\x58\x03\x95\xb8\x30\x9c\x9b\x0d\xe2\x98\xae\x00\x25\x97\x25\xa4\xc9\xa7\x87\x12\x2e\x38\xbb\x23\x19\x70\x81\x0e\xeb\xda\x40\x28\x2d\x50\x5d\x37\x53\x80\x66\x7a\x70\x08\xe2\x33\x2e\x48\xa6\xd5\xdc\x03\x68\x3e\x99\x6c\x36\xe8\xa0\xc0\x12\x84\xfc\x0c\x5c\x10\x46\xd1\xf2\xd8\x42\x7e\xd0\xe4\xb7\x52\x72\x72\x5d\x49\x10\x8e\x41\x69\xd0\x48\x3f\x20\x0b\x74\x00\xb4\x5a\xab\x79\xd7\x15\x29\xb2\x53\x5a\xad\x85\x81\xe8\x42\xd7\xf5\xe4\xe8\x48\x29\xa0\x67\x68\xb3\x51\x5d\x23\x0e\x25\x07\x01\x54\x0a\x24\x6f\x00\x95\x4c\x08\x72\x5d\x00\xba\xc3\x45\x05\x02\xe5\x8c\x23\xec\xb4\xd0\xc6\x98\xe9\x8d\x66\x36\x2e\xd3\x64\x22\x15\x62\x0f\x5f\x48\x4e\xe8\x6a\x32\x49\x19\x15\x2e\x6a\x9b\xcd\xa1\xb3\x80\xe2\x35\x2c\xd0\x81\x96\xa6\xac\x30\x93\x3f\x1b\xe1\xd6\x85\x56\x6d\x6a\x24\x75\x35\x36\x53\x15\x83\xf9\xab\xae\x13\xe7\xea\x66\x4a\x4f\xab\x63\x63\x8a\x9b\x11\x04\x47\xc7\xa6\xfd\x7b\xa2\xb4\x25\x39\xa2\x4c\xda\xd8\x9c\xb3\x0c\x8a\xe4\x1d\x48\x9c\xde\x40\xd6\x3a\xd6\x1f\x3d\xa5\x92\xc8\x07\xeb\x9c\xb3\x0c\xf4\xcf\xae\xea\x0d\x9d\xe5\xfa\x37\xbb\xfe\x03\x52\x99\x4c\xee\x30\x8f\xc3\x3b\x46\x4d\x6e\x27\x0d\x71\xa3\x8d\x51\xac\x4b\xd4\x64\xa0\x07\xf5\x11\x84\x54\xa3\x75\x3d\x5d\x68\xd6\x13\x2c\x61\xc5\xf8\xc3\x72\x88\x95\x55\x3c\x6d\x82\x6c\xf8\x2f\xcc\x87\xba\xec\x43\xdb\x91\x96\x93\x93\x3b\x2c\x15\x67\x97\xd1\x0c\xd4\xf5\x62\x52\xef\xe9\xeb\xcd\x66\x88\xe3\x4c\x7c\x64\x4c\xee\x8a\xc5\x45\x51\x71\x5c\xa0\xba\xfe\x40\x84\xf4\xa3\x81\x51\xa1\x28\x2c\x8f\x98\xdb\x24\x7a\x8c\x8c\x2f\x5f\xff\x39\xca\xa9\x0c\x3e\x3a\x42\x5e\x76\xc8\x8a\x53\x93\x1a\x64\x30\x35\x04\x22\x54\xff\x54\xda\x26\x93\xbc\xa2\x29\x9a\xb1\x48\x5d\xe6\x8d\xa4\xd9\x7c\x38\x6f\x74\xcc\x8c\x16\xe3\x98\x6d\xfa\x4d\x8c\xfe\x27\xac\x6c\x75\xc7\xa8\x64\x84\x4a\xe0\x48\x32\x84\x51\xaa\xc6\x94\xc2\x71\x2a\xee\x6f\x92\x12\x3e\x60\x4e\x4e\xf0\x75\x01\xc2\xd9\xa4\xd5\x58\x1e\x23\x5c\x96\x40\xb3\x59\x1c\xf8\xa6\x5e\x20\x96\x24\xc9\xdc\x77\xcb\xf7\x0a\xca\x1a\xfe\x56\xa3\x59\x50\x11\x84\x49\x32\xfd\x13\x23\x0a\xdf\x8c\x74\x1b\xc7\xe7\xf2\x83\xd1\x65\xe6\xe4\x27\x49\x32\xec\x92\x9d\xae\x62\x95\xfc\x8b\x9e\x52\x4b\xc6\xef\x0b\xe5\x0a\x05\x64\xea\xbc\xd3\xcb\xd4\x26\x27\xa7\x11\xc3\x2a\xa9\x27\x24\xb3\x6d\x5f\xcb\xdc\xe0\xd7\x41\x9e\xb2\x4a\xda\x70\xe8\xef\x2d\x65\xf4\x0e\xb8\xf4\xa3\xa1\x33\x91\x8e\xd9\xfd\x38\x77\xab\xff\x1d\x4f\x3b\xad\x49\xe8\xcf\x2d\x9c\x9b\xda\x77\x1b\x91\xb0\xf6\xfc\xb6\xd5\x63\x8a\x77\xbb\x4f\xde\x41\x8e\xab\x42\xfe\xca\x33\xe0\x41\x7d\xc9\xcc\x00\x62\x6a\x84\xd0\x15\xca\x09\x14\x99\x70\x69\x9a\x32\x2a\x81\x3e\xc2\x31\xbe\xc0\xd9\x1c\x7d\xf9\x6a\xd6\xff\x4e\x71\x71\xe4\xd6\xb8\x4e\x47\xf5\xab\x55\xab\x6d\x80\xba\xed\x8c\xeb\xaf\x9a\x15\x2e\x5c\xa3\xc2\xf5\xdc\xb8\xc8\xb8\xc4\x01\xf8\xde\xb8\xb3\xb4\xbf\x6a\xbd\xc5\x9e\xcd\x11\xa1\x72\xa8\xa0\x82\x4c\xde\x5e\x9c\x9d\xd1\x9c\x25\x5e\x5f\x66\x7a\x3a\xab\xab\x5a\x02\xdd\x72\xb8\xa3\xaf\xe8\xf6\x13\x6b\xc5\xa2\x8c\xc0\xdd\x69\x6e\xcd\xdf\xbd\x7c\xd9\x9e\xad\x4a\x95\xfe\x9d\xa8\x6c\x8f\xc6\x66\xa3\x3b\xc5\x4f\xec\xbd\x4a\x25\x74\xa0\xac\xd5\xad\x6f\x60\x92\xf2\x88\x96\xe9\xa6\x2a\x4f\x5d\xfd\x21\x18\x5d\x4e\x0f\xa7\xe8\x5a\xff\xf1\xbb\xb6\xc4\x46\x65\x7a\x65\x66\xa9\x06\x3f\x39\xaf\x24\xdc\xf7\xf8\x0f\xa7\x57\x36\xba\xbf\xc0\xb7\x1d\x1e\x73\xeb\x94\xaa\xcc\xe3\xd5\x46\xe9\xaa\xa3\xbf\x03\x70\x36\xdf\x0e\xd2\x49\x82\xef\xb7\xf1\xb6\x5f\x83\xef\xa0\xe5\x96\xcc\x59\x4c\xbc\x64\x3f\xf4\x77\x05\x2a\x12\xaa\x8c\x08\xc6\xbd\x5d\x04\x9a\xed\x08\xe4\x3c\xf8\xae\x6c\x37\x26\x6e\x58\x55\x64\xbf\x71\x22\xe1\x8c\x12\x49\x70\x41\xfe\x0b\x5c\x05\x58\x6f\x33\x94\x28\xf3\xf5\x75\x92\xe2\x20\xb9\xa8\xae\x0b\x92\x2a\x6b\x50\x07\xf6\x80\x50\xa2\x0b\xe3\xb7\x01\x58\x90\x01\x78\x77\x2e\xc9\xed\xf4\x80\x3e\x44\x3b\xf4\x0b\x40\x1c\xc9\x7e\x8d\x31\x2d\xff\x60\xe3\x36\xd6\xd3\xbb\x52\xb2\x35\x5b\x9e\xa8\x45\x43\x41\x8f\xe6\x7f\x7d\xfb\x18\x96\x93\xce\x9a\x61\x76\x4b\x81\x5d\x3f\x08\x54\x51\xf2\x67\xe5\x1a\x56\x35\x67\x4f\x5b\xd5\x94\xd9\x1c\x85\xeb\x84\x69\xf2\xcd\x5c\x4f\x1b\x97\x9c\x6e\x9d\x4b\x1a\x01\x2d\x53\x72\x62\x5a\x00\xc8\xdc\x77\xdc\x44\xb9\x10\xd0\x85\x98\x4e\x27\x9d\x24\x78\x8c\xc3\x2e\x41\x7a\x5a\x0a\x90\xcf\xe3\xb0\x40\xcc\x8c\x64\xd6\x69\xf3\x48\xaf\xc5\xb9\x0b\x1d\x23\x92\x3d\x85\x53\x86\x16\xda\x1b\xcc\xb3\x94\x65\x90\x75\x97\x5c\x5d\xf0\xa3\x1d\xf1\xe8\x75\x76\x7f\x2b\x46\x3b\x28\xb7\x61\x1c\xe9\xa4\xa2\x6c\xd1\xc6\xbc\xec\x96\x69\x4f\x8f\xf9\x29\xe8\x46\x45\xca\x49\x29\xdb\x33\xa8\x77\x2c\x0d\x7b\x51\x96\x56\xba\xd2\x69\x1e\xd5\x07\xb7\xdf\x4b\x6c\x46\xbc\x63\xe9\x40\x11\xd1\xea\xc2\x9f\xa3\xfa\x4c\xbf\x50\x96\xb1\xf4\xeb\xb4\x5b\x16\x34\xf9\xd2\x1c\x5d\x05\xe5\x23\x64\xbb\x52\xfe\x12\xe9\xbf\x71\x7a\x2b\x49\x7a\x2b\xb6\x18\x7e\x35\xf4\x49\x0d\xf5\x7c\x11\x4e\x8e\x2d\x17\x5a\xff\x9e\x5b\xac\xee\xf9\x5a\x26\x97\x25\x27\x54\xe6\xb3\xe9\xbf\xbe\x13\xcb\xef\xc4\x4f\x53\xb5\x8f\x6b\x97\x20\x9d\x20\x2d\xc9\x54\xea\x79\x2f\x29\x22\x7b\xc4\x26\x3b\x4c\x3f\xf1\x33\x50\xe0\x58\xc2\xcf\x20\x25\x70\x94\xf4\xda\x85\xa3\x23\xf4\x33\x48\x65\x62\xaf\x44\xf9\xd9\x33\xc8\x60\xab\x0a\x87\x14\xc8\x5d\xb7\xc2\x1e\x6c\xf1\xd9\x88\xc4\xd9\x3c\x94\xe3\xce\x11\x43\x97\x9a\x02\xdb\x5b\x7f\x3a\xed\x7d\xdf\x05\x97\x5b\x5c\x70\x39\xe2\x82\x66\x91\x59\x91\x3b\xa0\x4f\xec\x85\x11\xa1\x33\xaf\x68\x0c\xfa\xa3\x59\x89\x86\x3d\x81\x8e\x91\x87\xd0\xf9\x02\xfc\x4d\x8f\x3d\x50\xd7\x2b\x28\xc9\xc0\x18\x9a\x56\x9c\x03\x95\x88\xd0\x9c\xf1\xb5\x29\x16\x42\x32\x0e\x99\x5a\x05\xcc\x81\x8b\xd9\xb9\x54\x1c\xe2\x97\x12\x2b\x4a\x35\x5c\x9c\x33\xee\x2c\xd0\x3f\x44\xb8\x75\x3f\xd5\xb4\x8d\x2b\x01\x7f\x56\x84\x43\x76\xba\x8d\x71\xe8\xb6\x60\xeb\x17\xd2\x2e\xe3\xba\x00\x7c\xe2\x98\x0a\xa2\xac\x0e\xc6\x92\xd3\xfb\x92\x09\x68\x77\x54\x96\xfc\xd1\xea\x14\x72\xab\x02\xa8\x03\x34\x35\x85\x60\xea\x86\xd5\x18\xe7\xa1\xea\xce\x1f\x0e\xca\x16\x91\x70\xbd\x18\x89\xef\xfc\x47\x8d\xf7\x8f\x63\x44\x49\xe1\x9d\x5c\x74\x5c\xd5\x1c\x62\x84\xf4\x85\x9a\xec\x8e\x33\xc2\xc5\x68\xd0\x18\x49\xd6\xb0\x97\x29\x9f\xc8\x1a\x5e\xa2\x21\x70\x2f\x81\x53\x5c\xec\x65\xcc\xa9\x9d\xf4\x12\x0d\x22\x54\xc2\x0a\xf8\x5e\xf6\x9c\x51\xf9\x12\x4d\xc9\x0b\x86\xe5\x5e\x86\xbc\x57\x33\x5e\x88\x29\xdb\x2c\xe3\x90\x0f\xd8\x35\xac\x68\xd2\x56\xc9\x11\x95\xa1\xa3\x2a\xec\xe1\x6d\xc6\xd1\x2c\xd0\xeb\x03\x11\x72\x3a\xef\x10\xcf\x71\x39\x9d\x3b\x85\xed\x61\xa9\xa8\xae\xbd\xb3\xd2\xe1\x35\xa7\xd5\xb1\xb5\x52\x54\xd7\xbb\x4d\x8a\x32\xab\x35\x6d\x8b\x81\xc9\xdb\xa2\x60\xdf\x20\x3b\xb9\x61\x24\x6d\xef\x35\xb7\x65\x93\x29\xbb\x67\x54\x1f\x34\x77\x92\xc9\x54\xf1\xd9\x48\x4e\x2d\xda\xad\x82\x9a\xf7\x07\x23\xb4\xa7\xc0\xd5\x74\x81\xa6\x57\x0a\xad\x5e\xe8\x25\xf9\x6d\x25\xd9\xca\x76\x23\xd9\x96\xcc\xfc\x2b\x61\x6e\x95\xc0\x3c\xca\x07\x17\x58\xb5\x45\x34\xee\x5b\x5a\xe8\x66\xbc\x2b\xe3\xca\x98\xe7\xad\x8b\xcf\x61\xd9\x4a\xa2\xe4\x1c\xdf\x7f\x00\xba\x92\x37\xe8\x4d\x8c\x6d\xe7\xf8\x9e\xac\xab\xb5\x99\x12\x6b\xa1\xa2\xb6\x72\x14\x25\xc7\x85\x80\x67\x33\x89\xd0\xbd\x4c\x22\xf4\x91\x26\x35\x72\x9e\xdf\x24\x7c\xaf\xdf\x16\xa0\x37\xc9\x9b\xb1\x26\x29\xbe\xe4\xdb\x20\xee\x51\xf1\x9b\x18\x7e\xb6\x2f\x0f\x9e\xce\x5e\xbb\x3b\x8d\x55\x3a\x7a\xbd\x5d\xa8\xee\x7a\xd6\x51\x7b\xfe\xd4\x71\xda\x95\x88\x4f\x19\x35\x93\xa7\xfb\x47\xcd\x69\xf1\x0c\x51\x8b\xd4\xf9\x31\x41\x6b\xb5\xfe\x9b\x82\xd6\xdc\x3d\x24\xfe\xe1\xab\x77\x37\xa1\xef\x37\x07\x1f\x4d\xf5\x3c\xa1\xe0\xd6\xce\x5a\x6d\xba\x77\xdd\xd0\xda\x6f\x88\xb1\xed\x55\xb4\x9d\x87\x23\xfd\x54\x84\x17\x02\x83\xef\x1a\x53\xb5\x66\xcd\x23\x2f\xb3\x21\x6d\x1d\xe1\xbf\x78\x3a\xa9\x84\x64\x6b\x77\x85\xdd\x22\x24\x8d\x80\x83\x35\x2e\x4b\x42\x57\xfa\xd9\x94\x3e\xf2\x6c\x91\xce\xcd\x50\x62\xff\x1f\x4d\xdb\x37\x70\x3d\x75\xbc\x20\x91\xbc\x45\x1d\x8e\x85\xc5\x75\x11\x61\x4f\xe7\xe3\x21\x97\x93\x1c\x15\x40\x3b\x7d\xef\x1c\xfd\x84\xde\x34\xa2\xec\xd1\x4b\xc8\x62\x25\xf8\x18\x30\x30\xb7\x99\x0d\xbd\x59\xee\x1c\x90\x14\xf1\xf7\x41\x6a\x84\xe4\x24\xd5\xae\x7d\xcf\x78\xb3\xd1\x0f\xce\xab\x1a\x6a\xc0\xde\x1c\x7b\x9a\xe3\x9c\xf6\xc9\x9d\x7e\xc2\x76\x0b\x0f\xee\x40\x63\xd7\x99\xdf\x98\x0e\x33\x0d\xe4\x2e\x0c\xda\x0a\x33\xa2\xce\xa6\x71\xde\xdd\x02\xb1\x5b\x1b\xff\x51\xc1\xed\x99\xc6\x39\x2e\xbf\x28\x51\x5f\x7f\x54\xd3\x7a\x9e\xbe\xf3\x9d\x7c\x74\x84\x7e\x03\x94\xb2\xaa\xc8\xb4\x6f\x73\x42\x33\x44\xe4\x02\x09\x86\x0a\x90\x3f\x08\x94\xde\x40\x7a\x8b\x98\x7d\xf4\xc4\xbe\x01\x47\x29\x16\x80\x08\xcd\xe0\x1e\x32\x24\x4a\x48\xd1\x1a\x97\x7e\xcc\xb6\xe9\xf9\x41\x41\x9c\x60\x01\x03\x0a\xbb\x57\x3d\x83\x0e\x11\x41\x0c\xf3\xaa\x28\xbc\x18\x89\x90\x73\x8d\xcb\xc8\x68\x8d\xc8\x9a\xcd\x15\xc6\x17\x13\xac\xaf\xb1\xb1\x8a\x30\x3f\xb0\x7a\xb2\xfb\x81\x41\xc0\xdf\x7b\x6d\x80\x4b\xfd\xd6\xa0\x71\x83\x4a\xe1\x6d\x68\xbb\x1f\x36\x86\xf2\x8e\xf7\xf1\xc2\xa6\x5b\x79\xf7\x3a\x6c\xf3\xae\xb8\x9b\x19\x4a\x85\xce\x91\x6c\xf0\xa8\xb7\xbb\xdc\x4c\x97\x3b\x3f\x2b\xff\xf2\xe6\x70\x74\x4f\xa4\xfe\xf9\xf4\x65\x7f\x6b\xa3\x76\x36\x01\x56\xe7\x52\x3b\xdc\xef\x2d\x47\xf6\xa1\x87\x75\xbd\xd7\x5e\xb1\x6d\x58\x9a\x69\x75\xb3\xf2\x2d\xfa\xb6\x75\x36\x95\xad\x76\xfe\xc0\x72\x70\x03\xba\xd5\x3a\x27\x60\xf0\xa6\x57\xfd\x0b\x06\x96\x23\xe1\x8a\x13\xc1\x41\x47\xee\x57\x5a\x3c\x04\x12\x3c\xba\xb1\xa0\xc3\x19\x85\x1e\x5c\x2e\x7a\xe3\x3e\xdd\xa0\x77\x38\xf7\x41\x77\xed\x5f\x17\x5d\xd3\x35\xba\x7e\x83\x11\x70\x07\x8f\x30\x92\x78\x81\x25\x87\xb4\x1b\xed\x96\xea\x4c\xf1\xb8\x22\x71\x83\x2b\xc4\x16\xb8\x21\x2f\x07\xae\xe2\x3a\xf7\x6f\x51\x92\xbc\x73\x75\x37\x64\x49\x46\xf7\x76\x3c\x0a\xee\x3d\x29\x24\x70\x7c\x5d\x04\xfe\x6f\xa9\x06\x34\xe0\x8a\xc3\x65\x1c\xc8\x8a\xfe\x07\x82\x9c\x6c\xa9\x16\xd7\xe7\x8a\xc2\xb5\x77\x71\xde\x88\xa1\x18\xbc\x66\x34\x0a\xcb\x7b\x80\xe0\x8d\xb6\x54\x83\x19\x70\x45\xe1\xfa\x07\x20\xcd\x60\x43\x5c\xf6\x0f\x49\x22\x41\x7b\x9f\x89\xa3\x2d\x7b\x7b\xf6\x28\x44\xef\x50\xa3\x85\x74\xc4\x65\xff\xe0\x23\x12\xb4\xaf\xa6\xa5\x2d\x7b\x9b\xd4\x18\xc4\x6e\xe5\xf4\x0a\xe6\x5e\x75\x52\x17\xa6\x6e\xa2\x37\x44\xa3\x9b\xcf\x13\x05\x7a\xc1\xc9\x1a\xf3\x87\x4e\x9a\xb7\x54\x03\x1b\x70\x45\xe1\x7e\x04\x9c\x75\x0b\xba\xa3\x2d\xed\x81\x61\xc3\x11\x89\x18\x5e\xbc\x19\x44\x43\x5b\x76\x8f\x20\xa3\x10\x2f\x7b\x9f\xe2\xa5\xf7\x29\x5e\xee\xf5\x29\x5e\x9a\x5b\x52\x1f\x4b\x53\x2c\x96\x1b\x8d\xc3\xaa\xae\xed\x65\x6f\x0b\x66\x48\xee\x3f\x1f\x69\x18\xe2\x32\xa7\x77\xc5\xa9\xfe\x35\x44\xa3\xa2\xcf\x13\x07\xda\x51\xd1\xd3\x6f\xa7\x72\x56\xc2\xf8\xd6\x74\x77\xdf\x3c\xbc\xcd\xf8\x1b\x1a\xe8\x11\xc1\x2f\xbb\x93\x36\xfb\xba\xe4\xb5\x8d\x7e\x6d\xa3\x5f\xdb\xe8\xd7\x36\xfa\xb5\x8d\x46\xaf\x6d\xf4\x6b\x1b\xfd\xda\x46\x3b\xc4\xd7\x36\x3a\x02\xf0\xff\xb1\x8d\xf6\x7e\xfc\x2f\x00\x00\xff\xff\x17\x2e\x6c\x5b\xfd\x41\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16893, mode: os.FileMode(420), modTime: time.Unix(1537820155, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x98\xdf\x6b\xe3\x38\x10\xc7\xdf\xfd\x57\x0c\x21\x1c\xed\x91\x73\xaf\xdd\xb7\x40\x1f\x8e\xf6\x58\xfa\xd0\xa5\x74\xef\xee\x25\xe4\x41\x67\x4f\x12\xdd\x2a\x92\x57\x91\xb3\x14\xe3\xff\xfd\x90\x1d\x3b\xb6\x23\xd9\x6e\xd8\xc0\x2e\xcc\x14\x0a\xb6\x66\xe6\x3b\x1a\xfd\xc8\x07\x27\x2c\xfa\xc2\xd6\x08\x59\x06\xe1\x67\x34\xe1\x83\x92\x2b\xbe\x4e\x35\x33\x5c\xc9\xf0\x13\xdb\x22\xe4\x79\x10\xf0\x6d\xa2\xb4\x81\xc9\x5a\x85\x2c\x51\x1a\x8d\x0a\xb9\xba\x41\x81\x5b\x94\x86\x89\x49\x10\x44\x4a\xee\x0c\x48\x15\xab\xe8\xb3\xd1\x5c\xae\xe1\x1e\x26\x8b\xe2\x79\x39\x81\x9b\x1b\x90\x4a\x70\x69\xe6\xb0\x67\x3a\xda\x60\xf4\x65\x16\x23\x8b\x23\x15\x63\x10\xec\x99\x06\x8d\xa2\xd0\xdc\x6d\x78\xb2\x7b\xc5\x35\xdf\x19\xfd\x06\xb5\x42\xf8\xea\x1a\x0f\x82\x55\x2a\x23\xe0\x92\x9b\xab\x6b\xc8\x82\x00\x00\x3c\x99\xee\x87\x72\x65\x79\x19\x9e\x65\xa0\x99\x5c\x23\x4c\x51\x1a\x6e\xde\x6c\x0f\x66\x30\xad\xb2\xc2\xfc\xbe\xec\x54\x2b\x89\x6d\x52\x19\xfc\x1b\xf0\x15\xec\x36\x2a\x15\x71\x99\x19\x75\xd3\x13\xa6\x36\xb8\x99\x1b\xa6\xe1\x4b\xfa\xaf\xe0\xd1\xb3\x8a\xf1\x90\xc6\x39\x85\x45\x96\xb5\xe2\xf2\xfc\x29\x2e\x1f\x97\x70\x0f\xbf\xb8\xa7\x97\x15\xf9\x1a\xa5\xad\x0d\x5c\x09\x94\xc7\x09\x85\x0f\x1a\x99\xc1\x6b\xf8\xbd\x9a\x84\xb5\xf2\xe5\x1c\xb6\x2c\x59\xec\x8a\xf5\x5c\xfe\xea\x56\x78\x92\x2b\x05\x47\x99\x4a\xea\xd0\xc3\x84\x69\x94\x66\x06\x53\x16\x55\xdd\xeb\x2a\x37\x65\xbd\x3d\x7c\x92\xd2\xdd\xc8\x52\xa0\xd5\xc4\x6e\xc2\x89\x6d\xdc\xc1\x2f\xcf\x27\x30\xf7\x35\xcb\x4e\xa5\x3d\x93\x46\x3d\x87\x19\x84\x8f\x98\x68\x8c\x98\xc1\xb8\xab\x63\xed\x38\x3a\x07\xa3\x53\x9c\x39\xd3\xa1\x74\x06\x77\x94\x5e\x98\x66\x5b\x34\xa8\x1f\x71\x65\xb7\xb8\xed\x9f\x3f\xaa\x5e\x58\x7f\x74\xf8\x8a\x5f\x53\xae\x31\xee\x2c\x76\x65\xd5\x70\x1d\xba\x9b\x37\x4e\xcd\x27\xfc\x76\x1c\x38\xb8\xda\xa1\xab\x93\x3c\xd6\x16\x4b\xfb\x57\x6e\x9d\xd3\x9e\x36\x6b\x3f\xec\x14\x3e\x83\xa9\xb8\x2d\x36\xc8\x88\x19\xb8\xca\xf7\x35\x44\xdc\x7a\xe6\xdb\xac\x75\xa8\x52\x57\xb5\x77\x45\xb5\xe2\xb6\x2f\xb7\xb3\xa0\xbb\x81\x82\xca\xa2\xc6\x94\xe4\x2a\xeb\x43\x59\xd6\xdd\x90\x02\x54\x67\x43\x7c\xb0\xe7\xe2\x74\xab\xba\x84\x50\xc6\x03\x69\xf3\xfe\x44\xe3\x92\x0c\x7b\xf5\xc8\x0c\x07\xf7\x7b\x38\x52\x5f\x9f\x73\x90\xc7\x1c\xc9\x3f\xa5\xd1\x1c\x77\x9e\x0d\xd1\x3c\x89\x8b\xe5\xf1\x2c\x3a\x32\xb9\x2f\xae\xc6\xbe\x48\x86\xce\xd6\xa1\x14\xef\xb6\x79\xa7\x7c\x65\xf6\xc7\x6a\x7e\xb8\x84\x2b\xa2\xe8\xd9\x6c\x7f\xbd\x25\x47\x77\xfb\xd0\xef\x5e\xdd\x99\x49\xf8\x88\x2b\x96\x0a\xf3\x0f\x13\xe9\xc9\x4f\x40\xd3\x9a\x7e\xb5\x50\x27\x78\x40\x70\x78\x73\xf1\x15\xe0\xd7\x7a\x06\x13\x94\xe9\x76\xd2\x57\xd4\x1f\x42\xa8\x6f\x18\x3f\x6c\x14\x8f\xb0\x58\xec\x77\x5e\x48\xff\xcd\x60\xba\x2f\x56\x38\x09\xdb\xc9\x86\xae\x81\xa2\x03\xfb\xe1\x1b\xa0\x67\xbf\x57\x36\x7c\x26\x47\xdc\xdb\xd3\x24\x7c\x4e\x85\xe1\x89\xe8\x5d\xc6\xca\xc7\xf7\x3b\x3b\x52\xd8\x51\x72\x4f\xc4\xfb\xbc\x3d\x43\x9d\x24\x1e\x2f\xc7\xeb\x46\xa0\x63\xd4\x0b\x78\x7f\x27\xf1\x29\xe0\x95\x2f\x2f\x0c\x78\xa5\x08\x01\x9e\x47\x89\x00\x8f\x00\x8f\x00\xef\x0c\x19\x02\xbc\xba\x8a\xef\x08\x78\xc4\x77\x40\x7c\x47\x7c\x37\xde\xfb\x82\x7c\xf7\xc2\x4c\xb4\x21\x3a\x23\x3a\x23\x3a\xf3\x56\x4b\x74\xe6\x32\xa2\x33\xa2\xb3\x86\x11\x9d\x11\x9d\x11\x9d\xf9\x93\x5c\xfc\xeb\xdb\x23\x0a\x3c\xf9\xfa\x56\xbe\xbc\x30\xdf\x95\x22\xc4\x77\x1e\x25\xe2\x3b\xe2\x3b\xe2\xbb\x33\x64\x88\xef\xea\x2a\x88\xef\xba\x46\x7c\xd7\x36\xe2\xbb\xf1\x11\x3f\x25\xdf\x7d\x44\xd3\xb9\x5d\x5e\xd1\x1e\xf4\xfd\xa5\xf1\xee\x23\x1a\x62\x3b\x8f\x12\xb1\x1d\xb1\x1d\xb1\xdd\x19\x32\xc4\x76\x75\x15\xc4\x76\x5d\x23\xb6\x6b\x1b\xb1\xdd\xf8\x88\x9f\x95\xed\x9e\x99\x7c\xf3\xf0\x9d\x1d\xba\x3c\xe3\x59\x15\xe2\x3c\x8f\x12\x71\x1e\x71\x1e\x71\xde\x19\x32\xc4\x79\x75\x15\xc4\x79\x5d\x23\xce\x6b\x1b\x71\xde\xf8\x88\x1f\x86\xf3\x2c\xa9\x10\x9d\x01\xd1\x19\xd1\x99\xb7\x5a\xa2\x33\x97\x11\x9d\x11\x9d\x35\x8c\xe8\x8c\xe8\x8c\xe8\xcc\x9f\xe4\x7b\x7c\x85\x2b\xff\x77\x5e\x66\x59\xf5\x94\x07\xff\x07\x00\x00\xff\xff\xbd\x9e\xc8\xb9\xa8\x46\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 18088, mode: os.FileMode(420), modTime: time.Unix(1533220355, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

