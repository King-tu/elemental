// Code generated by go-bindata.
// sources:
// templates/README.md
// templates/identities_registry.gotpl
// templates/model.gotpl
// templates/relationships_registry.gotpl
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x11\x02\x21\x10\x45\xd1\x7d\x47\xf1\x2c\x53\x22\x81\xc6\xbe\x0a\xc5\x47\x6a\x60\x33\xd9\xcf\x79\x2b\x31\x56\xf7\xc3\x36\x4b\x85\x8d\xbe\xb5\xa3\x09\xa1\xf3\x57\x46\x8c\x4c\x04\xa1\x3a\x75\x0a\xca\x75\xfa\x75\xbf\xcc\x24\x69\x78\x43\xcb\x3f\xcd\x7f\xd8\x13\x00\x00\xff\xff\xaa\x97\xff\x85\x4d\x00\x00\x00")

func templatesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMd,
		"templates/README.md",
	)
}

func templatesReadmeMd() (*asset, error) {
	bytes, err := templatesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md", size: 77, mode: os.FileMode(420), modTime: time.Unix(1528494836, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesIdentities_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x5d\x6b\xf3\x36\x14\xbe\xf7\xaf\x38\x0b\x61\xd8\xd0\xb8\x37\x63\x17\x1d\xb9\x28\xa5\x85\xc0\x52\x4a\x0a\xbb\x09\xbd\x50\x9d\x63\x47\x4c\x96\x8c\x24\xb7\x33\xc6\xff\x7d\xc8\x96\x3f\xe4\x7a\xa9\xd3\xb5\x7d\xe1\xcd\x55\x2c\x9d\x2f\x3d\xcf\xd1\x73\x94\x91\xe8\x6f\x92\x20\x94\x25\x84\x8f\xa8\xc3\x1b\xc1\x63\x9a\xe4\x92\x68\x2a\x78\x78\x4f\x52\x84\xaa\xf2\x3c\x9a\x66\x42\x6a\x58\x24\x22\x24\x99\x90\xa8\x45\x48\xc5\x25\x32\x4c\x91\x6b\xc2\x16\x9e\xf7\x42\x24\xf8\x1e\x00\x00\x3d\x20\xd7\x54\x17\xc6\x59\x6d\x49\x06\x6b\x48\x49\xb6\x57\x5a\x52\x9e\x3c\x75\x3e\xe1\xc6\xda\x41\x59\xbb\x99\x5f\x59\xae\x40\x12\x9e\x60\x53\xcc\x63\x86\x11\x8d\x69\x54\x17\xa3\x4c\x21\xbd\x21\xd0\x18\xd4\x51\xe4\xec\xb0\xc3\x84\x2a\x8d\xd2\xb1\x86\x10\x96\xe1\x43\xfe\xcc\x68\xb4\x15\x07\x74\x7d\x57\xb0\xec\x4b\x84\xab\x35\x84\xc6\x86\x85\xb7\xfd\xe2\x6a\xe0\xb0\x28\x4b\x6b\xb0\x43\xa5\xcd\x76\x55\x2d\xae\x4c\x0d\xc3\x30\x55\xd5\x1e\xe8\xc2\x49\x85\xfc\x30\xce\x3e\x58\xaa\x3c\x07\xb3\x88\x68\x4c\x84\xa4\x3f\x21\x70\x22\x97\x11\x7e\x09\x78\x84\x51\xa2\xbe\x10\xb1\xd5\x37\x42\x56\x96\xb6\xaa\x25\xbd\x80\x65\x7d\xb2\x81\xd3\x75\x73\x52\x70\x31\x6e\xed\x3e\x0f\xd8\x49\xac\x03\xcf\xbb\xbc\x84\xba\x90\xbf\x50\x2a\x73\x70\x89\x3a\x97\x5c\x81\x3e\x22\x44\xb9\x94\xc8\x35\xbc\xd8\x3d\x11\xd7\xcb\x69\x5d\xb8\x17\xe7\x3c\x72\x7c\xfd\x00\x62\x26\x88\xfe\xfd\x37\x28\x6d\x9c\x4e\x84\xae\x1f\x36\x1b\x1e\x8b\xb0\x4d\x53\x55\x86\x6a\x5d\x64\x36\xdc\x96\x70\x92\xa0\x04\xa5\x65\x1e\xe9\xb2\xf2\xea\xf0\x7e\xec\xec\x06\xd0\x9e\xfc\x4e\x8a\xd4\x80\xe1\x73\x83\x48\xd3\x1c\x01\x4c\x76\x47\x7d\x54\x5b\xcd\x58\xc7\xf6\xc6\xfd\xc9\x9b\x93\xed\xa6\xb9\xc6\x85\x6f\xef\x73\x71\x7e\x56\x47\x09\xf6\x6d\x9c\x79\xe9\xeb\x36\xf1\x9b\xa6\x98\x9d\xb8\xbf\x45\xfb\xfa\xef\xcc\x54\xbc\xf0\x09\xef\xcf\xe7\xd3\x89\x4c\x41\x9b\x8a\xc6\x40\x61\x0d\x71\xf8\x86\x1a\xc2\x8b\xe0\x0f\xf8\x85\x86\x1b\x75\x9b\x66\xba\xf0\x83\xc1\x5d\x6d\xa1\x71\x14\x73\x2a\x54\x87\xfb\xd9\xe1\xec\x9a\x1b\xce\xe2\xc8\x8b\xe0\x1d\x2c\x62\x4a\x9e\x19\xfa\x2d\x77\x93\x10\x8c\xd7\x1a\x9f\x16\x19\xf5\x4a\x75\x74\xec\xd8\xb7\xd5\x76\x6a\x70\x42\xa3\x3e\xac\x4f\x11\x51\xcd\xdc\x7f\x23\x48\xbd\x68\x5c\x8d\x41\xbb\xc7\xd7\xff\x70\xf1\x03\x6f\x42\x36\x46\x9f\x07\x8c\x49\xce\xf4\x9b\xb0\x9c\x32\xcb\xc6\x1c\xa0\x0d\x37\x8f\x75\xc3\x39\xbd\x77\x1a\xe1\x11\xc3\x96\xb2\x11\xe1\x4d\x37\x07\xf3\xf8\x56\x1f\x21\x5c\x7d\x1a\xe3\x5c\xe8\x96\x88\x8d\xda\x09\xa1\x7f\x4c\x47\xfc\x3a\xe5\xf0\xc0\x72\x49\x18\x54\xd5\x9f\x54\x19\x81\x7e\xbf\x33\xbe\xa4\x51\xd4\x59\x9d\xa2\x4e\xb6\x8a\x3a\xbb\x57\x76\xc8\x1a\xe2\x8e\x34\x53\xfe\x30\xab\xb3\xd3\x30\x24\xc7\x7a\x2c\xa7\x6c\x4c\x2e\xf3\xd2\x4e\xed\x04\x5c\x3b\x29\xcd\x24\x34\x23\xda\x6e\x0e\xa7\x73\x6d\x36\xa8\x60\x3b\x70\x6b\xa7\x73\xf3\xe5\x14\x3a\x34\xeb\xe7\x74\x9b\xbd\xf2\xea\x7c\xd7\x8c\x59\x60\x28\xaa\x2e\x2b\x61\x0c\xf0\x1f\xaa\x34\xe5\x49\xdb\xe5\x14\x95\x4d\xe6\xf8\xf8\x01\xec\xa7\x5f\x6b\x43\x40\xa6\x4c\xbe\xff\x3d\x77\xf2\x72\x9c\xf7\x78\xad\x2c\x7a\xf5\xdc\xbd\x13\xb2\x3b\xf7\x10\x42\x43\x9e\x1d\xcd\x10\x0b\x59\x7f\x27\xf4\x05\xfb\x97\x42\x87\xe8\x38\xce\x69\x79\xda\x3f\x35\xb7\xe1\x3d\x3d\x9a\x01\xeb\xf7\x0a\x4e\x5b\x78\xf9\x7f\x1f\xcb\x27\xd9\x9a\x23\x52\xee\xdb\xc1\x48\x53\xe5\xfd\x1b\x00\x00\xff\xff\xb6\x1f\x7f\xe7\x51\x0f\x00\x00")

func templatesIdentities_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesIdentities_registryGotpl,
		"templates/identities_registry.gotpl",
	)
}

func templatesIdentities_registryGotpl() (*asset, error) {
	bytes, err := templatesIdentities_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/identities_registry.gotpl", size: 3921, mode: os.FileMode(420), modTime: time.Unix(1528495747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4b\x6f\x1b\x39\x12\xbe\xeb\x57\x70\x05\xcf\x8c\xb4\x90\xdb\x39\x6b\xd6\x03\x64\x13\x4f\x60\x6c\x32\x31\xa2\x20\x73\x08\x8c\x31\xdd\x5d\x92\x19\x77\x93\x0a\x9b\xed\xd8\x2b\xf4\x7f\x5f\xf0\xd9\x64\x3f\x24\xca\x63\x2f\x7c\x90\x0f\x86\x54\x2c\x7e\xf5\x22\x8b\x55\xa4\xd6\x38\xbd\xc5\x2b\x40\x9b\x0d\x4a\x16\x20\x92\x37\x8c\x2e\xc9\xaa\xe2\x58\x10\x46\x93\x3f\x70\x01\xa8\xae\x47\x23\x52\xac\x19\x17\x68\x32\x42\x08\xa1\xf1\xb2\x10\x63\xfd\xa9\x7c\xa0\xe9\x78\xa4\x3f\xaf\x58\x82\xd7\x8c\x83\x60\x09\x61\x27\x90\x43\x01\x54\xe0\x5c\x73\x6e\x36\x88\x63\xba\x02\x94\x2c\xd6\x90\x26\x9f\x1f\xd6\x70\xc1\xd9\x1d\xc9\x80\x97\xe8\xb8\xae\x35\x84\xd4\x02\xd5\xb5\x9b\x02\x34\x53\x83\xd3\xd1\x68\xb3\x41\x47\x39\x16\x50\x8a\x2f\xc0\x4b\xc2\x28\x9a\x9f\x1a\xb0\xf7\x8a\xfc\x5a\x08\x4e\xae\x2b\x01\xa5\x65\x90\x8a\x3b\xb9\x47\x64\x86\x8e\x80\x56\x85\x9c\x77\x5d\x91\x3c\x3b\xa3\x55\x51\x6a\x88\x36\x74\x5d\x8f\x4e\x4e\xa4\x02\x6a\x86\xd2\x16\xd5\x35\xe2\xb0\xe6\x50\x02\x15\x25\x12\x37\x80\xd6\xac\x2c\xc9\x75\x0e\xe8\x0e\xe7\x15\x94\x68\xc9\x38\xc2\x56\x0b\x65\x8c\x9e\xee\x34\x33\xee\x1c\x27\x23\x21\x11\x3b\xf8\xa5\xe0\x84\xae\x46\xa3\x94\xd1\xd2\x3a\x7b\xb3\x39\xb6\x16\x50\x5c\xc0\x0c\x1d\x29\x69\xd2\x0a\x3d\xf9\x8b\x16\x6e\x5c\x68\xd4\xa6\x5a\x52\x5b\x63\x3d\x55\x32\xe8\x4f\x75\x9d\x58\x57\xbb\x29\x1d\xad\x4e\xb5\x29\x76\x46\x10\x1c\x15\x9b\xe6\xb3\xf1\x9a\x0e\xcb\x07\x96\x41\x9e\x9c\x51\x41\xc4\x83\xb1\xfc\x3c\x03\xf5\xb5\xad\x97\xa3\xb3\xa5\xfa\xce\xae\xbf\x41\x2a\x92\xd1\x1d\xe6\x71\x78\xa7\xc8\xad\xb7\xc4\x11\x37\x4a\x53\xc9\x3a\x47\x6e\x79\x79\x50\x9f\xa0\x14\x72\xb4\xae\xc7\x33\xc5\xfa\x06\x0b\x58\x31\xfe\x30\xef\x63\x65\x15\x4f\x5d\x04\x35\xff\x05\x27\x77\x58\x48\xf4\x16\xbb\x19\xa8\xeb\xd9\xa8\x1e\xa9\x45\x48\x96\x88\x32\x11\x30\x9d\x97\x9f\x18\x13\xcd\x5a\xeb\xb7\xf2\x22\xaf\x38\xce\x51\x5d\xbf\x27\xa5\xf0\xfd\x86\x51\x2e\x29\x6c\x19\x31\xd7\xad\xb7\x18\x19\x5f\x2f\xff\x39\xc8\x69\x62\xec\xc5\x51\x54\x9c\xea\x20\x92\xde\x20\x96\x88\x50\xf5\x55\x6a\x9b\x8c\x96\x15\x4d\xd1\x84\x45\xea\x32\x75\x92\x26\xd3\xfe\x08\xab\x38\x68\x2d\x86\x31\x9b\x85\x32\xd2\xfa\xbf\x61\xeb\x46\x77\x8c\xd6\x8c\x50\x01\x1c\x09\x86\x30\x4a\xe5\x98\x54\x38\x4e\xc5\xfd\x4d\x92\xc2\x7b\xcc\x59\x12\x7c\x9d\x43\x69\x6d\x52\x6a\xcc\x4f\x11\x5e\xaf\x81\x66\x93\x38\xf0\x4d\x3d\x43\x2c\x49\x92\xa9\xef\x96\x9f\x25\x94\x31\xfc\xb5\x42\x33\xa0\x65\x10\x26\xc1\xd4\x57\x8c\x28\xfc\xd0\xd2\x4d\x1c\x9f\xcb\x0f\x5a\x97\x89\x95\x9f\x24\x49\xbf\x4b\x76\xba\x8a\x55\xe2\x6f\x7a\x4a\x66\xee\xbf\x66\xd2\x15\x12\x48\xa7\x5b\xab\x97\xce\x22\x56\x8e\x13\xc3\x2a\xa1\x26\x24\x93\x6d\xbb\x65\xaa\xf1\xeb\x60\x9d\xb2\x4a\x98\x70\xa8\xfd\x96\x32\x7a\x07\x5c\xf8\xd1\x50\x2b\x91\x0e\xd9\xfd\x38\x77\xcb\xff\xc3\xcb\x4e\x69\x12\xfa\x73\x0b\xe7\xa6\xf6\xdd\x46\x04\x14\x9e\xdf\xb6\x7a\x4c\xf2\x6e\xf7\xc9\x5b\x58\xe2\x2a\x17\x1f\x79\x06\x3c\xc8\x2f\x99\x1e\x40\x4c\x8e\x10\xba\x42\x4b\x02\x79\x56\xda\x65\x9a\x32\x2a\x80\x3e\xc2\x31\xbe\xc0\xc9\x14\x7d\xbd\xd4\xc7\x70\x2b\xb9\x58\x72\x63\x5c\xab\xa4\xf9\x68\xd4\x6a\xea\x90\x76\x55\x61\xcb\x1c\x77\x16\x85\xa7\x49\x78\xac\x6a\x17\x69\x97\x58\x00\xdf\x1b\x77\x86\xf6\x77\xad\x37\xd8\x93\x29\x22\x54\xf4\x25\x54\x10\xc9\xeb\x8b\xf3\x73\xba\x64\x89\x57\x1e\xe9\xd2\xca\x1e\xfb\xbb\xce\xfd\xf6\x79\x5f\x48\x16\xa9\x3a\x6e\x4f\xb3\x67\xf2\xee\x43\xcb\x14\x4c\x55\x2a\xb5\x6e\xc5\x62\x7b\x0c\x36\x1b\x54\xe0\x5b\x90\x4c\x28\x41\x47\xc9\x45\x75\x9d\x93\x54\xe2\x23\x35\x7a\xec\xec\x92\xbe\x50\x72\xed\x74\xe9\xa3\xab\x6f\x25\xa3\xf3\xf1\xf1\x18\x5d\xab\x0f\x7f\x29\x6b\x4c\x3c\xc6\x57\x7a\x96\x2c\x8c\x93\x0f\x95\x80\x7b\x13\xc3\x3f\xe0\xc7\x0e\x0f\xd9\xd3\x48\xe6\xdf\xe1\x9c\x22\xf5\x52\x31\xde\x01\x38\x99\x6e\x07\x69\x85\xfa\xe7\x6d\xbc\xcd\x9a\xf7\x9d\x31\xdf\xb2\x3e\x66\xdd\x5d\x62\xcb\x57\x55\xdc\xca\xb0\x31\xde\x94\xf0\x2e\x60\xe7\x94\x08\x82\x73\xf2\x5f\xd9\x17\x6c\xd9\x3f\xba\xa4\x2a\x6f\x58\x95\x67\x7f\x72\x12\x4c\x44\x47\xa6\xa8\x57\x25\x6d\x0b\xa4\x15\x6e\xaf\xf2\x55\xf6\x04\xea\xd5\xf5\x2c\xdc\x90\xc3\x5b\xb4\xb7\x22\x1a\x2a\x6b\xed\x1e\xdd\x1a\xa0\x27\xaa\x7d\x50\xa7\xf8\xb1\xd9\xbc\x95\x5e\x75\x7d\x1f\x68\xfa\x4b\x89\x2a\x4a\xbe\x57\xb6\xb6\x93\x73\xf6\xd4\x5e\x4e\x99\x4c\x51\x98\x52\x75\xf0\xf4\x5c\x4f\x1b\x1b\x5f\x7b\x24\x24\x4e\x40\xc3\x24\x1b\x54\x79\x5a\x42\x66\x37\x83\x6d\x92\x20\x2f\xa1\x0d\x31\x1e\x37\xc3\x3a\x66\xda\x05\x0b\x10\x9e\xdc\x12\xc4\xf3\xb8\x20\x10\x33\x21\x99\x71\xc3\x34\xd2\x0f\x71\x0e\x40\xa7\x88\x64\xfd\x66\xf6\x9d\x1b\x37\x98\x67\x29\xcb\x20\x6b\x9f\x20\x2a\x8b\x45\x9b\xf6\xf8\x63\x63\xdb\x11\x6f\x3b\x9a\x81\xa3\x3e\x4a\x3b\xa5\xde\x0b\x3f\xd3\xfd\xc0\x6b\x03\xde\x42\x99\x72\xb2\x16\xcd\xed\xc3\x5b\x96\x86\xe5\x0f\x4b\x2b\x95\x03\x14\x8f\x2c\xbd\x9a\x55\x1a\x1b\xb5\xb7\x2c\xed\xd9\x8c\xc7\x52\x19\xf8\x3e\xa8\xcf\xf8\x2b\x65\x19\x4b\x2f\xc7\xed\xed\xa5\xc8\x0b\x7d\x69\x11\x6c\xc3\x90\xed\x4a\x7a\xa0\x4c\xff\x8d\xd3\x5b\x41\xd2\xdb\x72\x8b\xe1\x57\xdd\x85\xec\x95\x19\xca\xca\x98\x7d\xa7\x54\xea\x58\x6a\xd4\x59\x16\x22\x59\xac\x39\xa1\x62\x39\x19\xff\xeb\xa7\x72\xfe\x53\xf9\xdb\x58\x76\x03\x4d\xbe\x55\x51\x6c\x48\x3a\x89\x4d\x47\xfe\x7d\xd2\xae\x42\x43\xd7\x19\xee\x8c\x7a\x07\x14\x38\x16\xf0\x0e\x84\xec\x34\xbb\x65\xc7\xc9\x09\x7a\x07\x42\xda\xd5\xd9\xe0\xfe\x2a\xe8\x65\x30\x3b\x98\x43\x0a\xe4\xae\x9d\x9f\x8e\xb6\x38\x6a\x40\xe2\x64\x1a\xca\xb1\x37\x41\xa1\x1f\x75\x7a\xea\xe4\xe3\xa0\x32\xec\x73\xc1\x62\x8b\x0b\x16\x03\x2e\x70\x29\x7a\x45\xee\x80\x3e\xb1\x17\x06\x84\x4e\xbc\xed\xdc\xeb\x0f\x97\xc7\xfb\x3d\x81\x4e\x91\x87\x10\xac\xe4\xf0\xc6\xec\x0b\xce\x49\x86\x85\x3a\x7f\x48\x06\xda\xd0\xb4\xe2\x1c\xa8\x40\x84\x2e\x19\x2f\xf4\xa6\x2f\x05\xe3\x90\xc9\x8c\xab\x7b\x75\x5d\xa8\x54\x1c\xe2\xd3\xb6\x11\x25\x4b\x0a\xce\x19\xb7\x16\xa8\x2f\x65\xd8\xf5\x9d\x29\xda\xc6\x6e\xe5\xef\x15\xe1\x90\x9d\x6d\x63\xec\xbb\xe9\xdd\xba\x43\x9a\x43\x50\x5d\x8e\x7d\xe6\x98\x96\x44\x5a\x1d\x8c\x25\x67\xf7\x6b\x56\x42\x53\x92\x1b\xf2\x27\xa3\x53\xc8\x2d\x13\x99\x0a\xd0\x58\xef\xfe\xb1\x1d\x96\x63\x9c\x87\xaa\x5b\x7f\x58\x28\x93\x39\xc2\x4c\x3e\x10\xdf\xe9\xaf\x0a\xef\x1f\xa7\x88\x92\xdc\x6b\x7a\x5b\xae\x72\xfd\x6f\x48\x9f\xc9\xc9\xb6\x13\x0e\x8f\x89\x5e\x63\x04\x29\x60\x2f\x53\x3e\x93\x02\x5e\xa2\x21\x70\x2f\x80\x53\x9c\xef\x65\xcc\x99\x99\xf4\x12\x0d\x22\x54\xc0\x0a\xf8\x5e\xf6\x9c\x53\xf1\x12\x4d\x59\xe6\x0c\x8b\xbd\x0c\xf9\x5d\xce\x78\x21\xa6\x74\x2d\x4b\x5e\xe7\x39\xfb\x01\xd9\x9b\x1b\x46\xd2\xe6\x91\x64\x9b\x61\x3a\x03\x9c\x53\x75\x5d\xd6\xb2\x4b\x27\x94\xc9\x80\x79\xb3\xa6\x9e\x94\xf3\xbe\x31\x42\x3b\x0a\x5c\x8d\x67\x68\x7c\x25\xd1\xea\x99\x3a\x1d\x5e\x57\x82\xad\xcc\xc1\x98\x6d\x71\x12\xb4\x9c\x03\x7b\xc4\xb7\x51\x02\xf3\x28\x1f\x5c\x60\x79\x42\xd3\xb8\xb0\xce\x54\x7d\xd7\x96\x71\xa5\xcd\xf3\x52\xf4\x73\x58\xb6\x12\x28\xf9\x80\xef\xdf\x03\x5d\x89\x1b\xf4\x2a\xc6\xb6\x0f\xf8\x9e\x14\x55\xa1\xa7\xc4\x5a\x28\xa9\x8d\x1c\x49\x59\xe2\xbc\x84\x67\x33\x89\xd0\xbd\x4c\x22\xf4\x91\x26\x39\x39\xcf\x6f\x12\xbe\x57\x0f\x95\xe8\x55\xf2\x6a\xe8\xbc\x8e\xcf\x3e\x26\x88\x7b\x24\x1f\x17\xc3\x2f\xe6\x19\xf3\xe9\xec\x35\x0d\x4f\xac\xd2\xd1\xa9\x7f\x26\x0b\xbd\x49\x4b\xed\xe9\x53\xc7\x69\xd7\x42\x7c\xca\xa8\xe9\x75\xba\x7f\xd4\xac\x16\xcf\x10\xb5\x48\x9d\x1f\x13\xb4\x46\xeb\x67\x0e\x5a\xfc\x37\x6b\x6e\x0e\xb4\x75\xbc\x4e\xd1\x6f\xe8\x95\x53\xc9\x74\x78\x21\x8b\xff\x6a\x63\x30\xa0\x67\xae\x9b\x0d\x9d\x59\xf6\xda\x80\xe4\xf6\x1e\x6e\x0d\x29\x59\x92\x54\xb5\x37\xbf\x33\xee\x9a\x85\xa0\xe7\x75\xd4\x80\xdd\x5d\x81\xe8\x96\xb0\xf9\xe1\x85\xba\xce\xbd\x85\x07\xdb\x14\xed\xba\x2c\x18\xd2\x61\xa2\x80\xec\x95\x5d\xb3\x34\x06\xd4\xd9\x38\xcf\xdc\xcd\x10\xbb\x95\xcb\x69\x9b\xe0\xa6\x2f\xfa\x80\xd7\x5f\xa5\xa8\xcb\x5f\xe5\xb4\x8e\x1b\xef\x7c\x0f\x9e\x9c\xa0\x3f\x01\xa5\xb2\x9d\x56\x2d\xd3\x92\xd0\x0c\x11\x31\x43\x25\x43\x39\x88\x5f\x4a\x94\xde\x40\x7a\x8b\x98\x79\x73\x67\x3f\x80\xa3\x14\x97\x80\x08\xcd\xe0\x1e\x32\x54\xae\x21\x45\x05\x5e\xc7\x5e\x1e\xbf\x97\x10\x6f\x70\x09\x3d\x0a\xdb\x47\xe5\x5e\x87\x94\x41\x0c\x97\x55\x9e\x7b\x31\x2a\x43\xce\x02\xaf\x23\xa3\x35\x20\x6b\x32\x95\x18\x5f\x75\xb0\x2e\x63\x63\x15\x61\x7e\x60\xf5\x68\xf7\x2f\x5c\x02\xfe\xce\xb3\x17\x5e\xab\x47\x2f\xe7\x06\xb9\x84\xb7\xa1\xed\xfe\x05\x4c\x28\xef\x74\x1f\x2f\x78\xf7\x7f\x8f\x68\xd8\xbd\xa7\x17\x37\x43\xaa\xd0\xba\xd6\x09\x7e\xda\xd5\x4e\x96\xe3\xf9\xce\x6d\xe5\x5f\xcd\x1e\x0f\x16\xb3\xf2\xcf\xa7\xcf\xbb\x35\xa9\x2c\x49\x03\xac\xd6\xb3\x4e\x58\xa8\xcf\x07\x1a\x88\xe3\xba\xde\xab\xc8\x6f\x4e\x1a\x37\xad\x76\xe9\x78\xd6\xb5\xad\xd5\x0d\x34\xda\xf9\x03\xf3\xde\xce\x61\xab\x75\x56\x40\xef\xeb\x89\xfc\x0b\x06\xe6\x03\xe1\x8a\x13\xc1\x41\x45\xee\x23\xcd\x1f\x02\x09\x1e\x5d\x5b\xd0\xe2\x8c\x42\x0f\x9e\x0e\xbc\x71\x9f\xae\xd1\x5b\x9c\xfb\xa0\xdb\x73\xdb\xbf\xc2\x1f\xb8\xc3\x38\xee\xea\xa0\x66\xbb\x05\xd4\x82\x94\x9a\xf9\x4f\x95\xb5\xb7\x44\x28\xc9\x07\xd6\x86\x62\x08\x35\xa0\x55\xf1\x28\xe9\xc3\x17\xa1\x7d\x21\xf7\x1c\xe9\x61\x3c\x42\x5f\x7b\x17\xb7\x9f\xc6\xc7\x75\x3d\xee\x51\x61\x1c\xad\xc3\xde\xe2\x76\x19\x8c\x86\xa4\x75\x17\xd4\xe0\x1a\x5b\x73\x48\xdb\x1b\xbc\xa1\xda\xd5\xeb\x71\x45\xae\xdd\xe0\x05\xa9\x01\x76\xe4\x79\xcf\x4b\x4c\xeb\xf9\x25\x4a\x92\x77\x1d\x6b\x87\x0c\x49\xeb\xde\x8c\x47\xc1\xfd\x4e\x72\x01\x1c\x5f\xe7\xc1\x96\x6b\xa8\x1a\x34\xe0\x8a\xc3\x65\x1c\xc8\x8a\xfe\x07\x82\x34\xd4\x50\x0d\xae\xcf\x15\x8b\x5b\x60\xd1\xc2\x2c\xb0\x30\x59\xd3\x0d\xc7\xa5\x4b\xf3\x20\xe4\x8d\x68\x8a\xd6\xce\x8d\x46\x61\x79\x6f\xc8\xde\x68\x43\xd5\x98\x01\x57\x1c\xae\xac\x1d\x03\x48\x49\x30\x68\x66\x2c\x0a\xc8\xbf\x43\x71\x83\x8e\x38\xef\xde\xb3\x44\x82\x76\x12\xb6\xa5\xcd\x3b\x6d\x7f\x14\xa2\x77\x2f\xd2\x40\x5a\xe2\xbc\x7b\x77\x12\x09\xda\x55\xd3\xd0\xe6\x9d\x3e\x37\x06\xb1\x7d\x86\x7b\x47\xf7\x5e\x27\xb6\x3a\x22\xdb\xfb\xcf\x11\xb5\x6e\x3e\x4f\x14\xe8\x05\x27\x05\xe6\x0f\xad\xdd\xd7\x50\x35\x6c\xc0\x15\x85\xfb\x09\x70\xd6\x2e\x2d\x2c\x6d\x6e\xee\x1c\x1d\x47\x24\x62\xf8\x8c\xa4\x11\x35\x6d\xde\xbe\xc5\x8c\x42\x5c\x74\xf6\xf4\xc2\xdb\xd3\x8b\xbd\xf6\xf4\x42\xbf\xf9\xf9\x58\x8a\x62\xb0\xec\x68\x1c\x56\x75\x6d\x9e\x2e\x1b\x30\x4d\xb2\xbf\x78\x77\x0c\x71\x2b\xa7\xf3\x60\x27\xff\x1c\x51\xab\xe8\xf3\xc4\x81\xb6\x54\xf4\xf4\xdb\xa9\x9c\x91\xd0\xa2\x76\x7e\x18\xb3\x7f\xc3\xfb\x7f\x68\xe5\x06\x04\xbf\xec\x9e\x4e\xdf\x30\x24\x87\x86\xee\xd0\xd0\x1d\x1a\xba\x43\x43\x77\x68\xe8\x1a\xe5\x0e\x0d\xdd\xa1\xa1\x53\x7f\x87\x86\xee\xd0\xd0\x1d\x1a\xba\x43\x43\x77\x68\xe8\x0c\xde\xd3\x36\x74\xff\x0b\x00\x00\xff\xff\xd7\x64\x08\xf6\xc3\x40\x00\x00")

func templatesModelGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotpl,
		"templates/model.gotpl",
	)
}

func templatesModelGotpl() (*asset, error) {
	bytes, err := templatesModelGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotpl", size: 16579, mode: os.FileMode(420), modTime: time.Unix(1528495747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRelationships_registryGotpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x96\xc1\x6a\x1b\x31\x10\x86\xef\x7a\x8a\x61\x31\x25\x01\x77\xdd\xb3\xc1\x87\x92\x42\xf0\x21\x25\x38\xf4\x64\x7c\x50\xa4\xf1\x5a\x44\x9e\x59\xb4\xb3\x2e\x46\xec\xbb\x97\x5d\xd9\xf5\x26\x5d\x27\x50\x7c\x09\x89\x6f\xd2\xaf\xf9\x46\xf3\x59\x87\x2d\xb5\x79\xd2\x05\x42\x8c\x90\x3f\xa0\xe4\x37\x4c\x6b\x57\xd4\x41\x8b\x63\xca\x7f\xea\x2d\x42\xd3\x28\xe5\xb6\x25\x07\x81\xac\xe0\x5c\x97\x1c\x50\x38\x77\x3c\x41\x8f\x5b\x24\xd1\x3e\x53\xca\x30\x55\x02\xc4\x96\xcd\x83\x04\x47\x05\xcc\x20\x5b\x76\xeb\x55\x06\x93\x09\x10\x7b\x47\x32\x85\x9d\x0e\x66\x83\xe6\x69\x6c\x51\x5b\xc3\x16\x95\xda\xe9\x00\x01\x7d\xd7\xb3\xda\xb8\xb2\x5a\x60\xe1\x2a\x09\x7b\xf8\xdb\x21\x5f\x0c\xe5\x4a\xad\x6b\x32\xe0\xc8\xc9\xd5\x35\x44\xa5\x00\xe0\x0c\x69\xf6\x16\x2b\x36\xa9\x3c\x46\x08\x9a\x0a\x84\x11\x92\x38\xd9\xb7\x0e\xc6\x30\x3a\x52\x61\x3a\x4b\xa6\x9e\x41\x5a\x49\xa9\xf8\x2b\xb8\x35\x54\x1b\xae\xbd\x4d\x64\x0c\xfd\x93\x30\x6a\x8b\xfb\x6c\x18\xe5\xf7\xf5\xa3\x77\xe6\x8e\x2d\x1e\x30\x83\x23\x2c\x63\x7c\x56\xd7\x34\x73\x9b\x96\x2b\x98\xc1\x97\xe1\xf1\x62\xc7\xeb\x5d\xad\x10\xb8\xf2\x48\xa7\x81\xf2\xef\xde\xf3\xef\xea\x26\xa0\x16\xbc\x86\x6f\xc7\x51\xda\x5f\x3f\x9a\xc2\x56\x97\xcb\xaa\xfb\x6f\x57\x8f\xcc\x1e\x4e\xec\x23\xff\x20\xae\xd4\x01\x49\x5a\x53\xa7\x2e\xb7\x28\x90\x99\x8e\x94\xf5\x5b\x9c\xb5\x36\x27\x1a\x56\x77\xa0\xf7\xb5\xbd\x04\x66\xad\xaa\xc3\xb9\xa6\xc9\x60\x0a\x12\x6a\x1c\xff\xd3\x14\xc9\x0e\xdd\xe5\xc5\x76\x33\x56\xaf\xa4\x6f\x78\xfd\x55\xda\x73\x5e\x53\x74\x09\xaf\x75\x47\x7a\xc7\x5e\x93\x90\x7b\x2d\x66\xf3\xe9\xe3\xbf\xde\xd9\x0f\xf4\x78\xe6\x9d\xa5\xe8\x12\x5e\x6d\x47\xfa\x50\x5e\x6f\x51\x06\xa5\x2e\x50\x82\xc3\xdd\x45\xb4\x16\x28\x1f\xcd\xe9\x9d\xa6\xfd\xab\x5e\xdb\x03\x17\x72\xbb\xd5\xb4\x7f\xc7\x7e\x93\x97\x39\xad\xf9\xd3\xc7\x40\x7a\xfa\xf0\xea\x6d\xc6\x78\x5c\x35\xea\x4f\x00\x00\x00\xff\xff\xea\x83\xf8\x20\xe3\x0a\x00\x00")

func templatesRelationships_registryGotplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRelationships_registryGotpl,
		"templates/relationships_registry.gotpl",
	)
}

func templatesRelationships_registryGotpl() (*asset, error) {
	bytes, err := templatesRelationships_registryGotplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/relationships_registry.gotpl", size: 2787, mode: os.FileMode(420), modTime: time.Unix(1528495747, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/README.md": templatesReadmeMd,
	"templates/identities_registry.gotpl": templatesIdentities_registryGotpl,
	"templates/model.gotpl": templatesModelGotpl,
	"templates/relationships_registry.gotpl": templatesRelationships_registryGotpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{templatesReadmeMd, map[string]*bintree{}},
		"identities_registry.gotpl": &bintree{templatesIdentities_registryGotpl, map[string]*bintree{}},
		"model.gotpl": &bintree{templatesModelGotpl, map[string]*bintree{}},
		"relationships_registry.gotpl": &bintree{templatesRelationships_registryGotpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

