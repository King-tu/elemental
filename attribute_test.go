// Author: Antoine Mercadal
// See LICENSE file for full LICENSE
// Copyright 2016 Aporeto.

package elemental

import (
	"testing"

	. "github.com/smartystreets/goconvey/convey"
)

func TestAttribute_Interface(t *testing.T) {

	Convey("Given I create a new List", t, func() {

		l := List{}

		Convey("Then the list should implement the AttributeSpecifiable interface", func() {
			So(l, ShouldImplement, (*AttributeSpecifiable)(nil))
		})
	})

	Convey("Given I create a new *List", t, func() {

		l := NewList()

		Convey("Then the list should implement the AttributeSpecifiable interface", func() {
			So(l, ShouldImplement, (*AttributeSpecifiable)(nil))
		})
	})
}

func TestAttribute_SpecificationForAttribute(t *testing.T) {

	Convey("Given I create a new List", t, func() {

		l := NewList()

		Convey("then SpecificationForAttribute for the name should be correct", func() {
			So(l.SpecificationForAttribute(ListAttributeNameID).Autogenerated, ShouldBeTrue)
			So(l.SpecificationForAttribute(ListAttributeNameName).Name, ShouldEqual, "name")
			So(l.SpecificationForAttribute(ListAttributeNameName).Type, ShouldEqual, "string")
		})
	})
}
